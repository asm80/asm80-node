0000                          .ENGINE   bravo   
0000                          ; Microsoft BASIC for 6502 (OSI VERSION)
0000                          ; 
0000                          ; ==================================================================================
0000                          ; MODIFIED FROM THE ORIGINAL FILES AT http://www.pagetable.com/?p=46
0000                          ; MERGED INTO ONE FILE AND MACROS AND CONDITIONAL STATEMENTS REMOVED
0000                          ; BY G. SEARLE 2013
0000                          ; 
0000                          ; I/O and dummy load/saves added to the end of this code
0000                          ; 
0000                          ; This then assembles to the OSI version with the following
0000                          ; minor changes to the original BASIC code:
0000                          ; 1. Control-C call changed
0000                          ; 2. Load/save calls changed
0000                          ; 3. RAM start set to $0200 instead of $0300
0000                          ; 4. ROM start set to $C000
0000                          ; 5. Second letter of error messages back to ASCII value (instead of $80+val)
0000                          ; ==================================================================================
0000                          ; 
0000                          ; Extract of original header comments follows:
0000                          ; 
0000                          ; (first revision of this distribution, 20 Oct 2008, Michael Steil www.pagetable.com)
0000                          ; 
0000                          ; 
0000                          ; Name                 Release   MS Version    ROM   9digit  INPUTBUFFER   extensions
0000                          ;---------------------------------------------------------------------------------------------------
0000                          ; OSI BASIC             1977     1.0 REV 3.2    Y      N          ZP            -
0000                          ; 
0000                          ; Credits:
0000                          ; * main work by Michael Steil
0000                          ; * function names and all uppercase comments taken from Bob Sander-Cederlof's excellent AppleSoft II disassembly:
0000                          ;   http://www.txbobsc.com/scsc/scdocumentor/
0000                          ; * Applesoft lite by Tom Greene http://cowgod.org/replica1/applesoft/ helped a lot, too.
0000                          ; * Thanks to Joe Zbicak for help with Intellision Keyboard BASIC
0000                          ; * This work is dedicated to the memory of my dear hacking pal Michael "acidity" Kollmann.
0000                          ;debuginfo +
0000                          ;.setcpu "6502"
0000                          ;.macpack longbranch
0000                          ; zero page
0000                ZP_START1:   =   $00   
0000                ZP_START2:   =   $0D   
0000                ZP_START3:   =   $5B   
0000                ZP_START4:   =   $65   
0000                          ;extra ZP variables
0000                USR:      EQU   $000A   
0000                          ; constants
0000                STACK_TOP:   EQU   $FC   
0000                SPACE_FOR_GOSUB:   EQU   $33   
0000                NULL_MAX:   EQU   $0A   
0000                WIDTH:    EQU   72   
0000                WIDTH2:   EQU   56   
0000                          ; memory layout
0000                RAMSTART2:   EQU   $2200   
0000                BYTES_FP:   EQU   4   
0000                BYTES_PER_ELEMENT:   EQU   BYTES_FP   
0000                BYTES_PER_VARIABLE:   EQU   BYTES_FP+2   
0000                MANTISSA_BYTES:   EQU   BYTES_FP-1   
0000                BYTES_PER_FRAME:   EQU   2*BYTES_FP+8   
0000                FOR_STACK1:   EQU   2*BYTES_FP+5   
0000                FOR_STACK2:   EQU   BYTES_FP+4   
0000                MAX_EXPON:   =   10   
0000                STACK:    EQU   $0100   
0000                INPUTBUFFERX:   EQU   INPUTBUFFER & $FF00   
0000                CR:       =   13   
0000                LF:       =   10   
0000                CRLF_1:   EQU   CR   
0000                CRLF_2:   EQU   LF   
0000                          ;.feature org_per_seg
0000                          ;.zeropage
0000                          .ORG   $0000   
0000                          .ORG   ZP_START1   
0000                GORESTART:   
0000                          DS   3   
0003                GOSTROUT:   
0003                          DS   3   
0006                GOAYINT:   
0006                          DS   2   
0008                GOGIVEAYF:   
0008                          DS   2   
000D                          .ORG   ZP_START2   
000D                Z15:      
000D                          DS   1   
000E                POSX:     
000E                          DS   1   
000F                Z17:      
000F                          DS   1   
0010                Z18:      
0010                          DS   1   
0011                LINNUM:   
0011                TXPSV:    
0011                          DS   2   
0013                INPUTBUFFER:   EQU   $   
005B                          .ORG   ZP_START3   
005B                CHARAC:   
005B                          DS   1   
005C                ENDCHR:   
005C                          DS   1   
005D                EOLPNTR:   
005D                          DS   1   
005E                DIMFLG:   
005E                          DS   1   
005F                VALTYP:   
005F                          DS   1   
0060                DATAFLG:   
0060                          DS   1   
0061                SUBFLG:   
0061                          DS   1   
0062                INPUTFLG:   
0062                          DS   1   
0063                CPRMASK:   
0063                          DS   1   
0064                Z14:      
0064                          DS   1   
0065                          .ORG   ZP_START4   
0065                TEMPPT:   
0065                          DS   1   
0066                LASTPT:   
0066                          DS   2   
0068                TEMPST:   
0068                          DS   9   
0071                INDEX:    
0071                          DS   2   
0073                DEST:     
0073                          DS   2   
0075                RESULT:   
0075                          DS   BYTES_FP   
0079                RESULT_LAST:   =   RESULT + BYTES_FP-1   
0079                TXTTAB:   
0079                          DS   2   
007B                VARTAB:   
007B                          DS   2   
007D                ARYTAB:   
007D                          DS   2   
007F                STREND:   
007F                          DS   2   
0081                FRETOP:   
0081                          DS   2   
0083                FRESPC:   
0083                          DS   2   
0085                MEMSIZ:   
0085                          DS   2   
0087                CURLIN:   
0087                          DS   2   
0089                OLDLIN:   
0089                          DS   2   
008B                OLDTEXT:   
008B                          DS   2   
008D                Z8C:      
008D                          DS   2   
008F                DATPTR:   
008F                          DS   2   
0091                INPTR:    
0091                          DS   2   
0093                VARNAM:   
0093                          DS   2   
0095                VARPNT:   
0095                          DS   2   
0097                FORPNT:   
0097                          DS   2   
0099                LASTOP:   
0099                          DS   2   
009B                CPRTYP:   
009B                          DS   1   
009C                FNCNAM:   
009C                TEMP3:    
009C                          DS   2   
009E                DSCPTR:   
009E                          DS   2   
00A0                DSCLEN:   
00A0                          DS   2   
00A2                JMPADRS:   EQU   DSCLEN + 1   
00A2                Z52:      
00A2                          DS   1   
00A3                ARGEXTENSION:   
00A3                TEMP1:    
00A3                          DS   1   
00A4                HIGHDS:   
00A4                          DS   2   
00A6                HIGHTR:   
00A6                          DS   2   
00A8                INDX:     
00A8                TMPEXP:   
00A8                TEMP2:    
00A8                          DS   1   
00A9                EXPON:    
00A9                          DS   1   
00AA                LOWTR:    
00AA                LOWTRX:   
00AA                          DS   1   
00AB                EXPSGN:   
00AB                          DS   1   
00AC                FAC:      
00AC                          DS   BYTES_FP   
00B0                FAC_LAST:   =   FAC + BYTES_FP-1   
00B0                FACSIGN:   
00B0                          DS   1   
00B1                SERLEN:   
00B1                          DS   1   
00B2                SHIFTSIGNEXT:   
00B2                          DS   1   
00B3                ARG:      
00B3                          DS   BYTES_FP   
00B7                ARG_LAST:   =   ARG + BYTES_FP-1   
00B7                ARGSIGN:   
00B7                          DS   1   
00B8                STRNG1:   
00B8                          DS   2   
00BA                SGNCPR:   =   STRNG1   
00BA                FACEXTENSION:   =   STRNG1+1   
00BA                STRNG2:   
00BA                          DS   2   
00BC                CHRGET:   
00BC                TXTPTR:   EQU   (GENERIC_TXTPTR-GENERIC_CHRGET + CHRGET) & 0xff   
00BC                CHRGOT:   EQU   (GENERIC_CHRGOT-GENERIC_CHRGET + CHRGET) & 0xff   
00BC                CHRGOT2:   EQU   (GENERIC_CHRGOT2-GENERIC_CHRGET + CHRGET) & 0xff   
00BC                RNDSEED:   EQU   (GENERIC_RNDSEED-GENERIC_CHRGET + CHRGET) & 0xff   
00BC                          ;.segment "CODE"
0200                          .ORG   $0200   
0200                TOKEN_ADDRESS_TABLE:   
0200   2D 08                  DW   END-1   
0202   55 07                  DW   FOR-1   
0204   33 0C                  DW   NEXT-1   
0206   FF 08                  DW   DATA-1   
0208   16 0B                  DW   INPUT-1   
020A   F4 0E                  DW   DIM-1   
020C   42 0B                  DW   READ-1   
020E   AC 09                  DW   LET-1   
0210                TOKEN_GOTO:   EQU   $80+($-TOKEN_ADDRESS_TABLE)/2   
0210   AC 08                  DW   GOTO-1   
0212   84 08                  DW   RUN-1   
0214   2F 09                  DW   IF-1   
0216   19 08                  DW   RESTORE-1   
0218                TOKEN_GOSUB:   EQU   $80+($-TOKEN_ADDRESS_TABLE)/2   
0218   8F 08                  DW   GOSUB-1   
021A   D9 08                  DW   POP-1   
021C                TOKEN_REM:   EQU   $80+($-TOKEN_ADDRESS_TABLE)/2   
021C   42 09                  DW   REM-1   
021E   2B 08                  DW   STOP-1   
0220   52 09                  DW   ON-1   
0222   6E 08                  DW   NULL-1   
0224   25 16                  DW   WAIT-1   
0226   79 FF                  DW   LOAD-1   
0228   7A FF                  DW   SAVE-1   
022A   D1 11                  DW   DEF-1   
022C   1C 16                  DW   POKE-1   
022E                TOKEN_PRINT:   EQU   $80+($-TOKEN_ADDRESS_TABLE)/2   
022E   22 0A                  DW   PRINT-1   
0230   54 08                  DW   CONT-1   
0232   B4 06                  DW   LIST-1   
0234   7F 08                  DW   CLEAR-1   
0236   60 06                  DW   NEW-1   
0238                TOKEN_TAB:   EQU   $00+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_TO:   EQU   $01+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_FN:   EQU   $02+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_SPC:   EQU   $03+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_THEN:   EQU   $04+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_NOT:   EQU   $05+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_STEP:   EQU   $06+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_PLUS:   EQU   $07+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_MINUS:   EQU   $08+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_GREATER:   EQU   $0E+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                TOKEN_EQUAL:   EQU   $0F+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238                NUM_TOKENS:   EQU   ($-TOKEN_ADDRESS_TABLE)/2   
0238                UNFNC:    
0238                TOKEN_SGN:   EQU   $11+$80+($-TOKEN_ADDRESS_TABLE)/2   
0238   CC 19                  DW   SGN   
023A   56 1A                  DW   INT   
023C   E9 19                  DW   ABS   
023E   0A 00                  DW   USR   
0240   A1 11                  DW   FRE   
0242   C2 11                  DW   POS   
0244   A0 1C                  DW   SQR   
0246   B4 1D                  DW   RND   
0248   B1 17                  DW   LOG   
024A   0F 1D                  DW   EXP   
024C   F0 1D                  DW   COS   
024E   F7 1D                  DW   SIN   
0250   40 1E                  DW   TAN   
0252   8D 1E                  DW   ATN   
0254   12 16                  DW   PEEK   
0256   80 15                  DW   LEN   
0258   80 12                  DW   STR   
025A   B1 15                  DW   VAL   
025C   8F 15                  DW   ASC   
025E   F0 14                  DW   CHRSTR   
0260                TOKEN_LEFTSTR:   EQU   $11+$80+($-TOKEN_ADDRESS_TABLE)/2   
0260   04 15                  DW   LEFTSTR   
0262   30 15                  DW   RIGHTSTR   
0264   3B 15                  DW   MIDSTR   
0266                MATHTBL:   
0266   79                     DB   $79   
0267   62 16                  DW   FADDT-1   
0269   79                     DB   $79   
026A   4B 16                  DW   FSUBT-1   
026C   7B                     DB   $7B   
026D   F1 17                  DW   FMULTT-1   
026F   7B                     DB   $7B   
0270   C0 18                  DW   FDIVT-1   
0272   7F                     DB   $7F   
0273   A9 1C                  DW   FPWRT-1   
0275   50                     DB   $50   
0276   5C 0E                  DW   TAND-1   
0278   46                     DB   $46   
0279   59 0E                  DW   OR-1   
027B   7D                     DB   $7D   
027C   E2 1C                  DW   NEGOP-1   
027E   5A                     DB   $5A   
027F   CB 0D                  DW   EQUOP-1   
0281   64                     DB   $64   
0282   89 0E                  DW   RELOPS-1   
0284                TOKEN_NAME_TABLE:   
0284   45 4E C4               DB   "EN",$80+'D'   
0287   46 4F D2               DB   "FO",$80+'R'   
028A   4E 45 58 D4            DB   "NEX",$80+'T'   
028E   44 41 54 C1            DB   "DAT",$80+'A'   
0292   49 4E 50 55 D4         DB   "INPU",$80+'T'   
0297   44 49 CD               DB   "DI",$80+'M'   
029A   52 45 41 C4            DB   "REA",$80+'D'   
029E   4C 45 D4               DB   "LE",$80+'T'   
02A1   47 4F 54 CF            DB   "GOT",$80+'O'   
02A5   52 55 CE               DB   "RU",$80+'N'   
02A8   49 C6                  DB   "I",$80+'F'   
02AA   52 45 53 54 4F 52 C5   DB   "RESTOR",$80+'E'   
02B1   47 4F 53 55 C2         DB   "GOSU",$80+'B'   
02B6   52 45 54 55 52 CE      DB   "RETUR",$80+'N'   
02BC   52 45 CD               DB   "RE",$80+'M'   
02BF   53 54 4F D0            DB   "STO",$80+'P'   
02C3   4F CE                  DB   "O",$80+'N'   
02C5   4E 55 4C CC            DB   "NUL",$80+'L'   
02C9   57 41 49 D4            DB   "WAI",$80+'T'   
02CD   4C 4F 41 C4            DB   "LOA",$80+'D'   
02D1   53 41 56 C5            DB   "SAV",$80+'E'   
02D5   44 45 C6               DB   "DE",$80+'F'   
02D8   50 4F 4B C5            DB   "POK",$80+'E'   
02DC   50 52 49 4E D4         DB   "PRIN",$80+'T'   
02E1   43 4F 4E D4            DB   "CON",$80+'T'   
02E5   4C 49 53 D4            DB   "LIS",$80+'T'   
02E9   43 4C 45 41 D2         DB   "CLEA",$80+'R'   
02EE   4E 45 D7               DB   "NE",$80+'W'   
02F1   54 41 42 A8            DB   "TAB",$80+'('   
02F5   54 CF                  DB   "T",$80+'O'   
02F7   46 CE                  DB   "F",$80+'N'   
02F9   53 50 43 A8            DB   "SPC",$80+'('   
02FD   54 48 45 CE            DB   "THE",$80+'N'   
0301   4E 4F D4               DB   "NO",$80+'T'   
0304   53 54 45 D0            DB   "STE",$80+'P'   
0308   AB                     DB   "",$80+'+'   
0309   AD                     DB   "",$80+'-'   
030A   AA                     DB   "",$80+'*'   
030B   AF                     DB   "",$80+'/'   
030C   DE                     DB   "",$80+'^'   
030D   41 4E C4               DB   "AN",$80+'D'   
0310   4F D2                  DB   "O",$80+'R'   
0312   BE                     DB   "",$80+'>'   
0313   BD                     DB   "",$80+'='   
0314   BC                     DB   "",$80+'<'   
0315   53 47 CE               DB   "SG",$80+'N'   
0318   49 4E D4               DB   "IN",$80+'T'   
031B   41 42 D3               DB   "AB",$80+'S'   
031E   55 53 D2               DB   "US",$80+'R'   
0321   46 52 C5               DB   "FR",$80+'E'   
0324   50 4F D3               DB   "PO",$80+'S'   
0327   53 51 D2               DB   "SQ",$80+'R'   
032A   52 4E C4               DB   "RN",$80+'D'   
032D   4C 4F C7               DB   "LO",$80+'G'   
0330   45 58 D0               DB   "EX",$80+'P'   
0333   43 4F D3               DB   "CO",$80+'S'   
0336   53 49 CE               DB   "SI",$80+'N'   
0339   54 41 CE               DB   "TA",$80+'N'   
033C   41 54 CE               DB   "AT",$80+'N'   
033F   50 45 45 CB            DB   "PEE",$80+'K'   
0343   4C 45 CE               DB   "LE",$80+'N'   
0346   53 54 52 A4            DB   "STR",$80+'$'   
034A   56 41 CC               DB   "VA",$80+'L'   
034D   41 53 C3               DB   "AS",$80+'C'   
0350   43 48 52 A4            DB   "CHR",$80+'$'   
0354   4C 45 46 54 A4         DB   "LEFT",$80+'$'   
0359   52 49 47 48 54 A4      DB   "RIGHT",$80+'$'   
035F   4D 49 44 A4            DB   "MID",$80+'$'   
0363   00                     DB   0   
0364                ERROR_MESSAGES:   
0364                ERR_NOFOR:   EQU   ($-ERROR_MESSAGES) & 0xff   
0364   4E 46                  DB   "NF"   
0366                ERR_SYNTAX:   EQU   ($-ERROR_MESSAGES) & 0xff   
0366   53 4E                  DB   "SN"   
0368                ERR_NOGOSUB:   EQU   ($-ERROR_MESSAGES) & 0xff   
0368   52 47                  DB   "RG"   
036A                ERR_NODATA:   EQU   ($-ERROR_MESSAGES) & 0xff   
036A   4F 44                  DB   "OD"   
036C                ERR_ILLQTY:   EQU   ($-ERROR_MESSAGES) & 0xff   
036C   46 43                  DB   "FC"   
036E                ERR_OVERFLOW:   EQU   ($-ERROR_MESSAGES) & 0xff   
036E   4F 56                  DB   "OV"   
0370                ERR_MEMFULL:   EQU   ($-ERROR_MESSAGES) & 0xff   
0370   4F 4D                  DB   "OM"   
0372                ERR_UNDEFSTAT:   EQU   ($-ERROR_MESSAGES) & 0xff   
0372   55 53                  DB   "US"   
0374                ERR_BADSUBS:   EQU   ($-ERROR_MESSAGES) & 0xff   
0374   42 53                  DB   "BS"   
0376                ERR_REDIMD:   EQU   ($-ERROR_MESSAGES) & 0xff   
0376   44 44                  DB   "DD"   
0378                ERR_ZERODIV:   EQU   ($-ERROR_MESSAGES) & 0xff   
0378   2F 30                  DB   "/0"   
037A                ERR_ILLDIR:   EQU   ($-ERROR_MESSAGES) & 0xff   
037A   49 44                  DB   "ID"   
037C                ERR_BADTYPE:   EQU   ($-ERROR_MESSAGES) & 0xff   
037C   54 4D                  DB   "TM"   
037E                ERR_STRLONG:   EQU   ($-ERROR_MESSAGES) & 0xff   
037E   4C 53                  DB   "LS"   
0380                ERR_FRMCPX:   EQU   ($-ERROR_MESSAGES) & 0xff   
0380   53 54                  DB   "ST"   
0382                ERR_CANTCONT:   EQU   ($-ERROR_MESSAGES) & 0xff   
0382   43 4E                  DB   "CN"   
0384                ERR_UNDEFFN:   EQU   ($-ERROR_MESSAGES) & 0xff   
0384   55 46                  DB   "UF"   
0386                          ; global messages: "error", "in", "ready", "break"
0386                QT_ERROR:   
0386   20 45 52 52 4F 52      DB   " ERROR"   
038C   00                     DB   0   
038D                QT_IN:    
038D   20 49 4E 20            DB   " IN "   
0391   00                     DB   $00   
0392                QT_OK:    
0392   0D 0A 4F 4B 0D 0A      DB   CR,LF,"OK",CR,LF   
0398   00                     DB   0   
0399                QT_BREAK:   
0399   0D 0A 42 52 45 41 4B   DB   CR,LF,"BREAK"   
03A0   00                     DB   0   
03A1                          ; generic stack and memory management code
03A1                          ; this code is identical across all versions of
03A1                          ; BASIC
03A1                          ; ----------------------------------------------------------------------------
03A1                          ; CALLED BY "NEXT" AND "FOR" TO SCAN THROUGH
03A1                          ; THE STACK FOR A FRAME WITH THE SAME VARIABLE.
03A1                          ; 
03A1                          ; (FORPNT) = ADDRESS OF VARIABLE IF "FOR" OR "NEXT"
03A1                          ;   = $XXFF IF CALLED FROM "RETURN"
03A1                          ;   <<< BUG: SHOULD BE $FFXX >>>
03A1                          ; 
03A1                          ; RETURNS .NE. IF VARIABLE NOT FOUND,
03A1                          ; (X) = STACK PNTR AFTER SKIPPING ALL FRAMES
03A1                          ; 
03A1                          ; .EQ. IF FOUND
03A1                          ; (X) = STACK PNTR OF FRAME FOUND
03A1                          ; ----------------------------------------------------------------------------
03A1                GTFORPNT:   
03A1   BA                     TSX   
03A2   E8                     INX   
03A3   E8                     INX   
03A4   E8                     INX   
03A5   E8                     INX   
03A6                L2279:    
03A6   BD 01 01               LDA   STACK+1,x   
03A9   C9 81                  CMP   #$81   
03AB   D0 21                  BNE   L22A1   
03AD   A5 98                  LDA   FORPNT+1   
03AF   D0 0A                  BNE   L228E   
03B1   BD 02 01               LDA   STACK+2,x   
03B4   85 97                  STA   FORPNT   
03B6   BD 03 01               LDA   STACK+3,x   
03B9   85 98                  STA   FORPNT+1   
03BB                L228E:    
03BB   DD 03 01               CMP   STACK+3,x   
03BE   D0 07                  BNE   L229A   
03C0   A5 97                  LDA   FORPNT   
03C2   DD 02 01               CMP   STACK+2,x   
03C5   F0 07                  BEQ   L22A1   
03C7                L229A:    
03C7   8A                     TXA   
03C8   18                     CLC   
03C9   69 10                  ADC   #BYTES_PER_FRAME   
03CB   AA                     TAX   
03CC   D0 D8                  BNE   L2279   
03CE                L22A1:    
03CE   60                     RTS   
03CF                          ; ----------------------------------------------------------------------------
03CF                          ; MOVE BLOCK OF MEMORY UP
03CF                          ; 
03CF                          ; ON ENTRY:
03CF                          ; (Y,A) = (HIGHDS) = DESTINATION END+1
03CF                          ; (LOWTR) = LOWEST ADDRESS OF SOURCE
03CF                          ; (HIGHTR) = HIGHEST SOURCE ADDRESS+1
03CF                          ; ----------------------------------------------------------------------------
03CF                BLTU:     
03CF   20 1F 04               JSR   REASON   
03D2   85 7F                  STA   STREND   
03D4   84 80                  STY   STREND+1   
03D6                BLTU2:    
03D6   38                     SEC   
03D7   A5 A6                  LDA   HIGHTR   
03D9   E5 AA                  SBC   LOWTR   
03DB   85 71                  STA   INDEX   
03DD   A8                     TAY   
03DE   A5 A7                  LDA   HIGHTR+1   
03E0   E5 AB                  SBC   LOWTR+1   
03E2   AA                     TAX   
03E3   E8                     INX   
03E4   98                     TYA   
03E5   F0 23                  BEQ   L22DD   
03E7   A5 A6                  LDA   HIGHTR   
03E9   38                     SEC   
03EA   E5 71                  SBC   INDEX   
03EC   85 A6                  STA   HIGHTR   
03EE   B0 03                  BCS   L22C6   
03F0   C6 A7                  DEC   HIGHTR+1   
03F2   38                     SEC   
03F3                L22C6:    
03F3   A5 A4                  LDA   HIGHDS   
03F5   E5 71                  SBC   INDEX   
03F7   85 A4                  STA   HIGHDS   
03F9   B0 08                  BCS   L22D6   
03FB   C6 A5                  DEC   HIGHDS+1   
03FD   90 04                  BCC   L22D6   
03FF                L22D2:    
03FF   B1 A6                  LDA   (HIGHTR),y   
0401   91 A4                  STA   (HIGHDS),y   
0403                L22D6:    
0403   88                     DEY   
0404   D0 F9                  BNE   L22D2   
0406   B1 A6                  LDA   (HIGHTR),y   
0408   91 A4                  STA   (HIGHDS),y   
040A                L22DD:    
040A   C6 A7                  DEC   HIGHTR+1   
040C   C6 A5                  DEC   HIGHDS+1   
040E   CA                     DEX   
040F   D0 F2                  BNE   L22D6   
0411   60                     RTS   
0412                          ; ----------------------------------------------------------------------------
0412                          ; CHECK IF ENOUGH ROOM LEFT ON STACK
0412                          ; FOR "FOR", "GOSUB", OR EXPRESSION EVALUATION
0412                          ; ----------------------------------------------------------------------------
0412                CHKMEM:   
0412   0A                     ASL   
0413   69 33                  ADC   #SPACE_FOR_GOSUB   
0415   B0 35                  BCS   MEMERR   
0417   85 71                  STA   INDEX   
0419   BA                     TSX   
041A   E4 71                  CPX   INDEX   
041C   90 2E                  BCC   MEMERR   
041E   60                     RTS   
041F                          ; ----------------------------------------------------------------------------
041F                          ; CHECK IF ENOUGH ROOM BETWEEN ARRAYS AND STRINGS
041F                          ; (Y,A) = ADDR ARRAYS NEED TO GROW TO
041F                          ; ----------------------------------------------------------------------------
041F                REASON:   
041F   C4 82                  CPY   FRETOP+1   
0421   90 28                  BCC   L231E   
0423   D0 04                  BNE   L22FC   
0425   C5 81                  CMP   FRETOP   
0427   90 22                  BCC   L231E   
0429                L22FC:    
0429   48                     PHA   
042A   A2 08                  LDX   #FAC-TEMP1-1   
042C   98                     TYA   
042D                L2300:    
042D   48                     PHA   
042E   B5 A3                  LDA   TEMP1,x   
0430   CA                     DEX   
0431   10 FA                  BPL   L2300   
0433   20 3B 13               JSR   GARBAG   
0436   A2 F8                  LDX   #TEMP1-FAC+1   
0438                L230B:    
0438   68                     PLA   
0439   95 AC                  STA   FAC,x   
043B   E8                     INX   
043C   30 FA                  BMI   L230B   
043E   68                     PLA   
043F   A8                     TAY   
0440   68                     PLA   
0441   C4 82                  CPY   FRETOP+1   
0443   90 06                  BCC   L231E   
0445   D0 05                  BNE   MEMERR   
0447   C5 81                  CMP   FRETOP   
0449   B0 01                  BCS   MEMERR   
044B                L231E:    
044B   60                     RTS   
044C                MEMERR:   
044C   A2 0C                  LDX   #ERR_MEMFULL   
044E                          ; ----------------------------------------------------------------------------
044E                          ; HANDLE AN ERROR
044E                          ; 
044E                          ; (X)=OFFSET IN ERROR MESSAGE TABLE
044E                          ; (ERRFLG) > 128 IF "ON ERR" TURNED ON
044E                          ; (CURLIN+1) = $FF IF IN DIRECT MODE
044E                          ; ----------------------------------------------------------------------------
044E                ERROR:    
044E   46 64                  LSR   Z14   
0450   20 60 0A               JSR   CRDO   
0453   20 D7 0A               JSR   OUTQUES   
0456   BD 64 03               LDA   ERROR_MESSAGES,x   
0459   20 D9 0A               JSR   OUTDO   
045C   BD 65 03               LDA   ERROR_MESSAGES+1,x   
045F   20 D9 0A               JSR   OUTDO   
0462   20 91 06               JSR   STKINI   
0465   A9 86                  LDA   #lsb(QT_ERROR)   
0467   A0 03                  LDY   #msb(QT_ERROR)   
0469                          ; ----------------------------------------------------------------------------
0469                          ; PRINT STRING AT (Y,A)
0469                          ; PRINT CURRENT LINE # UNLESS IN DIRECT MODE
0469                          ; FALL INTO WARM RESTART
0469                          ; ----------------------------------------------------------------------------
0469                PRINT_ERROR_LINNUM:   
0469   20 B7 0A               JSR   STROUT   
046C   A4 88                  LDY   CURLIN+1   
046E   C8                     INY   
046F   F0 03                  BEQ   RESTART   
0471   20 47 1B               JSR   INPRT   
0474                          ; ----------------------------------------------------------------------------
0474                          ; WARM RESTART ENTRY
0474                          ; ----------------------------------------------------------------------------
0474                RESTART:   
0474   46 64                  LSR   Z14   
0476   A9 92                  LDA   #lsb(QT_OK)   
0478   A0 03                  LDY   #msb(QT_OK)   
047A   20 03 00               JSR   GOSTROUT   
047D                L2351:    
047D   20 57 05               JSR   INLIN   
0480   86 C3                  STX   TXTPTR   
0482   84 C4                  STY   TXTPTR+1   
0484   20 BC 00               JSR   CHRGET   
0487                          ; bug in pre-1.1: CHRGET sets Z on '\0'
0487                          ; and ':' - a line starting with ':' in
0487                          ; direct mode gets ignored
0487   F0 F4                  BEQ   L2351   
0489   A2 FF                  LDX   #$FF   
048B   86 88                  STX   CURLIN+1   
048D   90 06                  BCC   NUMBERED_LINE   
048F   20 A6 05               JSR   PARSE_INPUT_LINE   
0492   4C F6 07               JMP   NEWSTT2   
0495                          ; ----------------------------------------------------------------------------
0495                          ; HANDLE NUMBERED LINE
0495                          ; ----------------------------------------------------------------------------
0495                NUMBERED_LINE:   
0495   20 73 09               JSR   LINGET   
0498   20 A6 05               JSR   PARSE_INPUT_LINE   
049B   84 5D                  STY   EOLPNTR   
049D   20 32 06               JSR   FNDLIN   
04A0   90 44                  BCC   PUT_NEW_LINE   
04A2   A0 01                  LDY   #$01   
04A4   B1 AA                  LDA   (LOWTR),y   
04A6   85 72                  STA   INDEX+1   
04A8   A5 7B                  LDA   VARTAB   
04AA   85 71                  STA   INDEX   
04AC   A5 AB                  LDA   LOWTR+1   
04AE   85 74                  STA   DEST+1   
04B0   A5 AA                  LDA   LOWTR   
04B2   88                     DEY   
04B3   F1 AA                  SBC   (LOWTR),y   
04B5   18                     CLC   
04B6   65 7B                  ADC   VARTAB   
04B8   85 7B                  STA   VARTAB   
04BA   85 73                  STA   DEST   
04BC   A5 7C                  LDA   VARTAB+1   
04BE   69 FF                  ADC   #$FF   
04C0   85 7C                  STA   VARTAB+1   
04C2   E5 AB                  SBC   LOWTR+1   
04C4   AA                     TAX   
04C5   38                     SEC   
04C6   A5 AA                  LDA   LOWTR   
04C8   E5 7B                  SBC   VARTAB   
04CA   A8                     TAY   
04CB   B0 03                  BCS   L23A5   
04CD   E8                     INX   
04CE   C6 74                  DEC   DEST+1   
04D0                L23A5:    
04D0   18                     CLC   
04D1   65 71                  ADC   INDEX   
04D3   90 03                  BCC   L23AD   
04D5   C6 72                  DEC   INDEX+1   
04D7   18                     CLC   
04D8                L23AD:    
04D8   B1 71                  LDA   (INDEX),y   
04DA   91 73                  STA   (DEST),y   
04DC   C8                     INY   
04DD   D0 F9                  BNE   L23AD   
04DF   E6 72                  INC   INDEX+1   
04E1   E6 74                  INC   DEST+1   
04E3   CA                     DEX   
04E4   D0 F2                  BNE   L23AD   
04E6                          ; ----------------------------------------------------------------------------
04E6                PUT_NEW_LINE:   
04E6   A5 13                  LDA   INPUTBUFFER   
04E8   F0 2F                  BEQ   FIX_LINKS   
04EA   A5 85                  LDA   MEMSIZ   
04EC   A4 86                  LDY   MEMSIZ+1   
04EE   85 81                  STA   FRETOP   
04F0   84 82                  STY   FRETOP+1   
04F2   A5 7B                  LDA   VARTAB   
04F4   85 A6                  STA   HIGHTR   
04F6   65 5D                  ADC   EOLPNTR   
04F8   85 A4                  STA   HIGHDS   
04FA   A4 7C                  LDY   VARTAB+1   
04FC   84 A7                  STY   HIGHTR+1   
04FE   90 01                  BCC   L23D6   
0500   C8                     INY   
0501                L23D6:    
0501   84 A5                  STY   HIGHDS+1   
0503   20 CF 03               JSR   BLTU   
0506   A5 7F                  LDA   STREND   
0508   A4 80                  LDY   STREND+1   
050A   85 7B                  STA   VARTAB   
050C   84 7C                  STY   VARTAB+1   
050E   A4 5D                  LDY   EOLPNTR   
0510   88                     DEY   
0511                          ; ---COPY LINE INTO PROGRAM-------
0511                L23E6:    
0511   B9 0F 00               LDA   INPUTBUFFER-4,y   
0514   91 AA                  STA   (LOWTR),y   
0516   88                     DEY   
0517   10 F8                  BPL   L23E6   
0519                          ; ----------------------------------------------------------------------------
0519                          ; CLEAR ALL VARIABLES
0519                          ; RE-ESTABLISH ALL FORWARD LINKS
0519                          ; ----------------------------------------------------------------------------
0519                FIX_LINKS:   
0519   20 77 06               JSR   SETPTRS   
051C   A5 79                  LDA   TXTTAB   
051E   A4 7A                  LDY   TXTTAB+1   
0520   85 71                  STA   INDEX   
0522   84 72                  STY   INDEX+1   
0524   18                     CLC   
0525                L23FA:    
0525   A0 01                  LDY   #$01   
0527   B1 71                  LDA   (INDEX),y   
0529                          ;jeq     L2351
0529   D0 03                  BNE   $+5   
052B   4C 7D 04               JMP   L2351   
052E   A0 04                  LDY   #$04   
0530                L2405:    
0530   C8                     INY   
0531   B1 71                  LDA   (INDEX),y   
0533   D0 FB                  BNE   L2405   
0535   C8                     INY   
0536   98                     TYA   
0537   65 71                  ADC   INDEX   
0539   AA                     TAX   
053A   A0 00                  LDY   #$00   
053C   91 71                  STA   (INDEX),y   
053E   A5 72                  LDA   INDEX+1   
0540   69 00                  ADC   #$00   
0542   C8                     INY   
0543   91 71                  STA   (INDEX),y   
0545   86 71                  STX   INDEX   
0547   85 72                  STA   INDEX+1   
0549   90 DA                  BCC   L23FA   ; always
054B                          ; ----------------------------------------------------------------------------
054B                L2420:    
054B   20 D9 0A               JSR   OUTDO   
054E   CA                     DEX   
054F   10 08                  BPL   INLIN2   
0551                L2423:    
0551   20 D9 0A               JSR   OUTDO   
0554   20 60 0A               JSR   CRDO   
0557                          ; ----------------------------------------------------------------------------
0557                          ; READ A LINE, AND STRIP OFF SIGN BITS
0557                          ; ----------------------------------------------------------------------------
0557                INLIN:    
0557   A2 00                  LDX   #$00   
0559                INLIN2:   
0559   20 86 05               JSR   GETLN   
055C   C9 07                  CMP   #$07   
055E   F0 14                  BEQ   L2443   
0560   C9 0D                  CMP   #$0D   
0562   F0 1F                  BEQ   L2453   
0564   C9 08                  CMP   #$08   ; BACKSPACE
0566   F0 E3                  BEQ   L2420   
0568   C9 20                  CMP   #$20   
056A   90 ED                  BCC   INLIN2   
056C   C9 7D                  CMP   #$7D   
056E   B0 E9                  BCS   INLIN2   
0570   C9 40                  CMP   #$40   ; @
0572   F0 DD                  BEQ   L2423   
0574                L2443:    
0574   E0 47                  CPX   #$47   
0576   B0 04                  BCS   L244C   
0578   95 13                  STA   INPUTBUFFER,x   
057A   E8                     INX   
057B   2C                     DB   $2C   
057C                L244C:    
057C   A9 07                  LDA   #$07   ; BEL
057E   20 D9 0A               JSR   OUTDO   
0581   D0 D6                  BNE   INLIN2   
0583                L2453:    
0583   4C 5A 0A               JMP   L29B9   
0586                GETLN:    
0586   20 3E FF               JSR   MONRDKEY   
0589   EA                     NOP   
058A   EA                     NOP   
058B   EA                     NOP   
058C   EA                     NOP   
058D   EA                     NOP   
058E   EA                     NOP   
058F   EA                     NOP   
0590   EA                     NOP   
0591   EA                     NOP   
0592   EA                     NOP   
0593   EA                     NOP   
0594   EA                     NOP   
0595   EA                     NOP   
0596   EA                     NOP   
0597   29 7F                  AND   #$7F   
0599                RDKEY:    
0599   C9 0F                  CMP   #$0F   
059B   D0 08                  BNE   L2465   
059D   48                     PHA   
059E   A5 64                  LDA   Z14   
05A0   49 FF                  EOR   #$FF   
05A2   85 64                  STA   Z14   
05A4   68                     PLA   
05A5                L2465:    
05A5   60                     RTS   
05A6                          ; ----------------------------------------------------------------------------
05A6                          ; TOKENIZE THE INPUT LINE
05A6                          ; ----------------------------------------------------------------------------
05A6                PARSE_INPUT_LINE:   
05A6   A6 C3                  LDX   TXTPTR   
05A8   A0 04                  LDY   #$04   
05AA   84 60                  STY   DATAFLG   
05AC                L246C:    
05AC   B5 00                  LDA   INPUTBUFFERX,x   
05AE   C9 20                  CMP   #$20   
05B0   F0 3A                  BEQ   L24AC   
05B2   85 5C                  STA   ENDCHR   
05B4   C9 22                  CMP   #$22   
05B6   F0 58                  BEQ   L24D0   
05B8   24 60                  BIT   DATAFLG   
05BA   70 30                  BVS   L24AC   
05BC   C9 3F                  CMP   #$3F   
05BE   D0 04                  BNE   L2484   
05C0   A9 97                  LDA   #TOKEN_PRINT   
05C2   D0 28                  BNE   L24AC   
05C4                L2484:    
05C4   C9 30                  CMP   #$30   
05C6   90 04                  BCC   L248C   
05C8   C9 3C                  CMP   #$3C   
05CA   90 20                  BCC   L24AC   
05CC                          ; ----------------------------------------------------------------------------
05CC                          ; SEARCH TOKEN NAME TABLE FOR MATCH STARTING
05CC                          ; WITH CURRENT CHAR FROM INPUT LINE
05CC                          ; ----------------------------------------------------------------------------
05CC                L248C:    
05CC   84 BA                  STY   STRNG2   
05CE   A0 00                  LDY   #$00   
05D0   84 5D                  STY   EOLPNTR   
05D2   88                     DEY   
05D3   86 C3                  STX   TXTPTR   
05D5   CA                     DEX   
05D6                L2496:    
05D6   C8                     INY   
05D7                L2497:    
05D7   E8                     INX   
05D8                L2498:    
05D8   B5 00                  LDA   INPUTBUFFERX,x   
05DA   C9 20                  CMP   #$20   
05DC   F0 F9                  BEQ   L2497   
05DE   38                     SEC   
05DF   F9 84 02               SBC   TOKEN_NAME_TABLE,y   
05E2   F0 F2                  BEQ   L2496   
05E4   C9 80                  CMP   #$80   
05E6   D0 2F                  BNE   L24D7   
05E8   05 5D                  ORA   EOLPNTR   
05EA                          ; ----------------------------------------------------------------------------
05EA                          ; STORE CHARACTER OR TOKEN IN OUTPUT LINE
05EA                          ; ----------------------------------------------------------------------------
05EA                L24AA:    
05EA   A4 BA                  LDY   STRNG2   
05EC                L24AC:    
05EC   E8                     INX   
05ED   C8                     INY   
05EE   99 0E 00               STA   INPUTBUFFER-5,y   
05F1   B9 0E 00               LDA   INPUTBUFFER-5,y   
05F4   F0 34                  BEQ   L24EA   
05F6   38                     SEC   
05F7   E9 3A                  SBC   #$3A   
05F9   F0 04                  BEQ   L24BF   
05FB   C9 49                  CMP   #$49   
05FD   D0 02                  BNE   L24C1   
05FF                L24BF:    
05FF   85 60                  STA   DATAFLG   
0601                L24C1:    
0601   38                     SEC   
0602   E9 54                  SBC   #TOKEN_REM-':'   
0604   D0 A6                  BNE   L246C   
0606   85 5C                  STA   ENDCHR   
0608                          ; ----------------------------------------------------------------------------
0608                          ; HANDLE LITERAL (BETWEEN QUOTES) OR REMARK,
0608                          ; BY COPYING CHARS UP TO ENDCHR.
0608                          ; ----------------------------------------------------------------------------
0608                L24C8:    
0608   B5 00                  LDA   INPUTBUFFERX,x   
060A   F0 E0                  BEQ   L24AC   
060C   C5 5C                  CMP   ENDCHR   
060E   F0 DC                  BEQ   L24AC   
0610                L24D0:    
0610   C8                     INY   
0611   99 0E 00               STA   INPUTBUFFER-5,y   
0614   E8                     INX   
0615   D0 F1                  BNE   L24C8   
0617                          ; ----------------------------------------------------------------------------
0617                          ; ADVANCE POINTER TO NEXT TOKEN NAME
0617                          ; ----------------------------------------------------------------------------
0617                L24D7:    
0617   A6 C3                  LDX   TXTPTR   
0619   E6 5D                  INC   EOLPNTR   
061B                L24DB:    
061B   C8                     INY   
061C   B9 83 02               LDA   MATHTBL+28+1,y   
061F   10 FA                  BPL   L24DB   
0621   B9 84 02               LDA   TOKEN_NAME_TABLE,y   
0624   D0 B2                  BNE   L2498   
0626   B5 00                  LDA   INPUTBUFFERX,x   
0628   10 C0                  BPL   L24AA   
062A                          ; ---END OF LINE------------------
062A                L24EA:    
062A   99 10 00               STA   INPUTBUFFER-3,y   
062D   A9 12                  LDA   #lsb(INPUTBUFFER-1)   
062F   85 C3                  STA   TXTPTR   
0631   60                     RTS   
0632                          ; ----------------------------------------------------------------------------
0632                          ; SEARCH FOR LINE
0632                          ; 
0632                          ; (LINNUM) = LINE # TO FIND
0632                          ; IF NOT FOUND:  CARRY = 0
0632                          ; LOWTR POINTS AT NEXT LINE
0632                          ; IF FOUND:      CARRY = 1
0632                          ; LOWTR POINTS AT LINE
0632                          ; ----------------------------------------------------------------------------
0632                FNDLIN:   
0632   A5 79                  LDA   TXTTAB   
0634   A6 7A                  LDX   TXTTAB+1   
0636                FL1:      
0636   A0 01                  LDY   #$01   
0638   85 AA                  STA   LOWTR   
063A   86 AB                  STX   LOWTR+1   
063C   B1 AA                  LDA   (LOWTR),y   
063E   F0 1F                  BEQ   L251F   
0640   C8                     INY   
0641   C8                     INY   
0642   A5 12                  LDA   LINNUM+1   
0644   D1 AA                  CMP   (LOWTR),y   
0646   90 18                  BCC   L2520   
0648   F0 03                  BEQ   L250D   
064A   88                     DEY   
064B   D0 09                  BNE   L2516   
064D                L250D:    
064D   A5 11                  LDA   LINNUM   
064F   88                     DEY   
0650   D1 AA                  CMP   (LOWTR),y   
0652   90 0C                  BCC   L2520   
0654   F0 0A                  BEQ   L2520   
0656                L2516:    
0656   88                     DEY   
0657   B1 AA                  LDA   (LOWTR),y   
0659   AA                     TAX   
065A   88                     DEY   
065B   B1 AA                  LDA   (LOWTR),y   
065D   B0 D7                  BCS   FL1   
065F                L251F:    
065F   18                     CLC   
0660                L2520:    
0660   60                     RTS   
0661                          ; ----------------------------------------------------------------------------
0661                          ; "NEW" STATEMENT
0661                          ; ----------------------------------------------------------------------------
0661                NEW:      
0661   D0 FD                  BNE   L2520   
0663                SCRTCH:   
0663   A9 00                  LDA   #$00   
0665   A8                     TAY   
0666   91 79                  STA   (TXTTAB),y   
0668   C8                     INY   
0669   91 79                  STA   (TXTTAB),y   
066B   A5 79                  LDA   TXTTAB   
066D   69 02                  ADC   #$02   
066F   85 7B                  STA   VARTAB   
0671   A5 7A                  LDA   TXTTAB+1   
0673   69 00                  ADC   #$00   
0675   85 7C                  STA   VARTAB+1   
0677                          ; ----------------------------------------------------------------------------
0677                SETPTRS:   
0677   20 A7 06               JSR   STXTPT   
067A                          ; ----------------------------------------------------------------------------
067A                          ; "CLEAR" STATEMENT
067A                          ; ----------------------------------------------------------------------------
067A                CLEARC:   
067A   A5 85                  LDA   MEMSIZ   
067C   A4 86                  LDY   MEMSIZ+1   
067E   85 81                  STA   FRETOP   
0680   84 82                  STY   FRETOP+1   
0682   A5 7B                  LDA   VARTAB   
0684   A4 7C                  LDY   VARTAB+1   
0686   85 7D                  STA   ARYTAB   
0688   84 7E                  STY   ARYTAB+1   
068A   85 7F                  STA   STREND   
068C   84 80                  STY   STREND+1   
068E   20 1A 08               JSR   RESTORE   
0691                          ; ----------------------------------------------------------------------------
0691                STKINI:   
0691   A2 68                  LDX   #TEMPST   
0693   86 65                  STX   TEMPPT   
0695   68                     PLA   
0696   8D FD 01               STA   STACK+STACK_TOP+1   
0699   68                     PLA   
069A   8D FE 01               STA   STACK+STACK_TOP+2   
069D   A2 FC                  LDX   #STACK_TOP   
069F   9A                     TXS   
06A0   A9 00                  LDA   #$00   
06A2   85 8C                  STA   OLDTEXT+1   
06A4   85 61                  STA   SUBFLG   
06A6                L256A:    
06A6   60                     RTS   
06A7                          ; ----------------------------------------------------------------------------
06A7                          ; SET TXTPTR TO BEGINNING OF PROGRAM
06A7                          ; ----------------------------------------------------------------------------
06A7                STXTPT:   
06A7   18                     CLC   
06A8   A5 79                  LDA   TXTTAB   
06AA   69 FF                  ADC   #$FF   
06AC   85 C3                  STA   TXTPTR   
06AE   A5 7A                  LDA   TXTTAB+1   
06B0   69 FF                  ADC   #$FF   
06B2   85 C4                  STA   TXTPTR+1   
06B4   60                     RTS   
06B5                          ; ----------------------------------------------------------------------------
06B5                          ; ----------------------------------------------------------------------------
06B5                          ; "LIST" STATEMENT
06B5                          ; ----------------------------------------------------------------------------
06B5                LIST:     
06B5   90 06                  BCC   L2581   
06B7   F0 04                  BEQ   L2581   
06B9   C9 A4                  CMP   #TOKEN_MINUS   
06BB   D0 E9                  BNE   L256A   
06BD                L2581:    
06BD   20 73 09               JSR   LINGET   
06C0   20 32 06               JSR   FNDLIN   
06C3   20 C2 00               JSR   CHRGOT   
06C6   F0 0C                  BEQ   L2598   
06C8   C9 A4                  CMP   #TOKEN_MINUS   
06CA   D0 94                  BNE   L2520   
06CC   20 BC 00               JSR   CHRGET   
06CF   20 73 09               JSR   LINGET   
06D2   D0 8C                  BNE   L2520   
06D4                L2598:    
06D4   68                     PLA   
06D5   68                     PLA   
06D6   A5 11                  LDA   LINNUM   
06D8   05 12                  ORA   LINNUM+1   
06DA   D0 06                  BNE   L25A6   
06DC   A9 FF                  LDA   #$FF   
06DE   85 11                  STA   LINNUM   
06E0   85 12                  STA   LINNUM+1   
06E2                L25A6:    
06E2   A0 01                  LDY   #$01   
06E4   84 60                  STY   DATAFLG   
06E6   B1 AA                  LDA   (LOWTRX),y   
06E8   F0 41                  BEQ   L25E5   
06EA   20 29 08               JSR   ISCNTC   
06ED   20 60 0A               JSR   CRDO   
06F0   C8                     INY   
06F1   B1 AA                  LDA   (LOWTRX),y   
06F3   AA                     TAX   
06F4   C8                     INY   
06F5   B1 AA                  LDA   (LOWTRX),y   
06F7   C5 12                  CMP   LINNUM+1   
06F9   D0 04                  BNE   L25C1   
06FB   E4 11                  CPX   LINNUM   
06FD   F0 02                  BEQ   L25C3   
06FF                L25C1:    
06FF   B0 2A                  BCS   L25E5   
0701                          ; ---LIST ONE LINE----------------
0701                L25C3:    
0701   84 97                  STY   FORPNT   
0703   20 52 1B               JSR   LINPRT   
0706   A9 20                  LDA   #$20   
0708                L25CA:    
0708   A4 97                  LDY   FORPNT   
070A   29 7F                  AND   #$7F   
070C                L25CE:    
070C   20 D9 0A               JSR   OUTDO   
070F   C9 22                  CMP   #$22   
0711   D0 06                  BNE   LA519   
0713   A5 60                  LDA   DATAFLG   
0715   49 FF                  EOR   #$FF   
0717   85 60                  STA   DATAFLG   
0719                LA519:    
0719   C8                     INY   
071A   B1 AA                  LDA   (LOWTRX),y   
071C   D0 10                  BNE   L25E8   
071E   A8                     TAY   
071F   B1 AA                  LDA   (LOWTRX),y   
0721   AA                     TAX   
0722   C8                     INY   
0723   B1 AA                  LDA   (LOWTRX),y   
0725   86 AA                  STX   LOWTRX   
0727   85 AB                  STA   LOWTRX+1   
0729   D0 B7                  BNE   L25A6   
072B                L25E5:    
072B   4C 74 04               JMP   RESTART   
072E                L25E8:    
072E   10 DC                  BPL   L25CE   
0730   C9 FF                  CMP   #$FF   
0732   F0 D8                  BEQ   L25CE   
0734   24 60                  BIT   DATAFLG   
0736   30 D4                  BMI   L25CE   
0738   38                     SEC   
0739   E9 7F                  SBC   #$7F   
073B   AA                     TAX   
073C   84 97                  STY   FORPNT   
073E   A0 FF                  LDY   #$FF   
0740                L25F2:    
0740   CA                     DEX   
0741   F0 08                  BEQ   L25FD   
0743                L25F5:    
0743   C8                     INY   
0744   B9 84 02               LDA   TOKEN_NAME_TABLE,y   
0747   10 FA                  BPL   L25F5   
0749   30 F5                  BMI   L25F2   
074B                L25FD:    
074B   C8                     INY   
074C   B9 84 02               LDA   TOKEN_NAME_TABLE,y   
074F   30 B7                  BMI   L25CA   
0751   20 D9 0A               JSR   OUTDO   
0754   D0 F5                  BNE   L25FD   ; always
0756                          ; ----------------------------------------------------------------------------
0756                          ; "FOR" STATEMENT
0756                          ; 
0756                          ; FOR PUSHES 18 BYTES ON THE STACK:
0756                          ; 2 -- TXTPTR
0756                          ; 2 -- LINE NUMBER
0756                          ; 5 -- INITIAL (CURRENT)  FOR VARIABLE VALUE
0756                          ; 1 -- STEP SIGN
0756                          ; 5 -- STEP VALUE
0756                          ; 2 -- ADDRESS OF FOR VARIABLE IN VARTAB
0756                          ; 1 -- FOR TOKEN ($81)
0756                          ; ----------------------------------------------------------------------------
0756                FOR:      
0756   A9 80                  LDA   #$80   
0758   85 61                  STA   SUBFLG   
075A   20 AD 09               JSR   LET   
075D   20 A1 03               JSR   GTFORPNT   
0760   D0 05                  BNE   L2619   
0762   8A                     TXA   
0763   69 0D                  ADC   #FOR_STACK1   
0765   AA                     TAX   
0766   9A                     TXS   
0767                L2619:    
0767   68                     PLA   
0768   68                     PLA   
0769   A9 08                  LDA   #FOR_STACK2   
076B   20 12 04               JSR   CHKMEM   
076E   20 0E 09               JSR   DATAN   
0771   18                     CLC   
0772   98                     TYA   
0773   65 C3                  ADC   TXTPTR   
0775   48                     PHA   
0776   A5 C4                  LDA   TXTPTR+1   
0778   69 00                  ADC   #$00   
077A   48                     PHA   
077B   A5 88                  LDA   CURLIN+1   
077D   48                     PHA   
077E   A5 87                  LDA   CURLIN   
0780   48                     PHA   
0781   A9 9D                  LDA   #TOKEN_TO   
0783   20 F7 0D               JSR   SYNCHR   
0786   20 A4 0C               JSR   CHKNUM   
0789   20 A1 0C               JSR   FRMNUM   
078C   A5 B0                  LDA   FACSIGN   
078E   09 7F                  ORA   #$7F   
0790   25 AD                  AND   FAC+1   
0792   85 AD                  STA   FAC+1   
0794   A9 9F                  LDA   #<STEP   
0796   A0 07                  LDY   #>STEP   
0798   85 71                  STA   INDEX   
079A   84 72                  STY   INDEX+1   
079C   4C 5A 0D               JMP   FRM_STACK3   
079F                          ; ----------------------------------------------------------------------------
079F                          ; "STEP" PHRASE OF "FOR" STATEMENT
079F                          ; ----------------------------------------------------------------------------
079F                STEP:     
079F   A9 90                  LDA   #<CON_ONE   
07A1   A0 17                  LDY   #>CON_ONE   
07A3   20 3F 19               JSR   LOAD_FAC_FROM_YA   
07A6   20 C2 00               JSR   CHRGOT   
07A9   C9 A2                  CMP   #TOKEN_STEP   
07AB   D0 06                  BNE   L2665   
07AD   20 BC 00               JSR   CHRGET   
07B0   20 A1 0C               JSR   FRMNUM   
07B3                L2665:    
07B3   20 BE 19               JSR   SIGN   
07B6   20 4F 0D               JSR   FRM_STACK2   
07B9   A5 98                  LDA   FORPNT+1   
07BB   48                     PHA   
07BC   A5 97                  LDA   FORPNT   
07BE   48                     PHA   
07BF   A9 81                  LDA   #$81   
07C1   48                     PHA   
07C2                          ; ----------------------------------------------------------------------------
07C2                          ; PERFORM NEXT STATEMENT
07C2                          ; ----------------------------------------------------------------------------
07C2                NEWSTT:   
07C2   20 29 08               JSR   ISCNTC   
07C5   A5 C3                  LDA   TXTPTR   
07C7   A4 C4                  LDY   TXTPTR+1   
07C9   F0 06                  BEQ   L2683   
07CB   85 8B                  STA   OLDTEXT   
07CD   84 8C                  STY   OLDTEXT+1   
07CF   A0 00                  LDY   #$00   
07D1                L2683:    
07D1   B1 C3                  LDA   (TXTPTR),y   
07D3   F0 07                  BEQ   LA5DC   ; old: 1 cycle more on generic case
07D5   C9 3A                  CMP   #$3A   
07D7   F0 1D                  BEQ   NEWSTT2   
07D9                SYNERR1:   
07D9   4C 00 0E               JMP   SYNERR   
07DC                LA5DC:    
07DC   A0 02                  LDY   #$02   
07DE   B1 C3                  LDA   (TXTPTR),y   
07E0   18                     CLC   
07E1   F0 62                  BEQ   L2701   
07E3   C8                     INY   
07E4   B1 C3                  LDA   (TXTPTR),y   
07E6   85 87                  STA   CURLIN   
07E8   C8                     INY   
07E9   B1 C3                  LDA   (TXTPTR),y   
07EB   85 88                  STA   CURLIN+1   
07ED   98                     TYA   
07EE   65 C3                  ADC   TXTPTR   
07F0   85 C3                  STA   TXTPTR   
07F2   90 02                  BCC   NEWSTT2   
07F4   E6 C4                  INC   TXTPTR+1   
07F6                NEWSTT2:   
07F6   20 BC 00               JSR   CHRGET   
07F9   20 FF 07               JSR   EXECUTE_STATEMENT   
07FC   4C C2 07               JMP   NEWSTT   
07FF                          ; ----------------------------------------------------------------------------
07FF                          ; EXECUTE A STATEMENT
07FF                          ; 
07FF                          ; (A) IS FIRST CHAR OF STATEMENT
07FF                          ; CARRY IS SET
07FF                          ; ----------------------------------------------------------------------------
07FF                EXECUTE_STATEMENT:   
07FF   F0 6D                  BEQ   RET1   
0801   38                     SEC   
0802                EXECUTE_STATEMENT1:   
0802   E9 80                  SBC   #$80   
0804                          ;        jcc     LET  ; old: 1 cycle more on instr.
0804   B0 03                  BCS   $+5   
0806   4C AD 09               JMP   LET   
0809   C9 1C                  CMP   #NUM_TOKENS   
080B   B0 CC                  BCS   SYNERR1   
080D   0A                     ASL   ;a
080E   A8                     TAY   
080F   B9 01 02               LDA   TOKEN_ADDRESS_TABLE+1,y   
0812   48                     PHA   
0813   B9 00 02               LDA   TOKEN_ADDRESS_TABLE,y   
0816   48                     PHA   
0817   4C BC 00               JMP   CHRGET   
081A                          ; ----------------------------------------------------------------------------
081A                          ; "RESTORE" STATEMENT
081A                          ; ----------------------------------------------------------------------------
081A                RESTORE:   
081A   38                     SEC   
081B   A5 79                  LDA   TXTTAB   
081D   E9 01                  SBC   #$01   
081F   A4 7A                  LDY   TXTTAB+1   
0821   B0 01                  BCS   SETDA   
0823   88                     DEY   
0824                SETDA:    
0824   85 8F                  STA   DATPTR   
0826   84 90                  STY   DATPTR+1   
0828   60                     RTS   
0829                          ; ----------------------------------------------------------------------------
0829                          ; SEE IF CONTROL-C TYPED
0829                          ; ----------------------------------------------------------------------------
0829                ISCNTC:   
0829                          ; MODIFIED CALL BY G.SEARLE FROM THE ORIGINAL OSI CODE
0829   20 4E FF               JSR   MONISCNTC   
082C                          ; runs into "STOP"
082C                          ; ----------------------------------------------------------------------------
082C                          ; "STOP" STATEMENT
082C                          ; ----------------------------------------------------------------------------
082C                STOP:     
082C   B0 01                  BCS   END2   
082E                          ; ----------------------------------------------------------------------------
082E                          ; "END" STATEMENT
082E                          ; ----------------------------------------------------------------------------
082E                END:      
082E   18                     CLC   
082F                END2:     
082F   D0 3D                  BNE   RET1   
0831   A5 C3                  LDA   TXTPTR   
0833   A4 C4                  LDY   TXTPTR+1   
0835   F0 0C                  BEQ   END4   
0837   85 8B                  STA   OLDTEXT   
0839   84 8C                  STY   OLDTEXT+1   
083B                CONTROL_C_TYPED:   
083B   A5 87                  LDA   CURLIN   
083D   A4 88                  LDY   CURLIN+1   
083F   85 89                  STA   OLDLIN   
0841   84 8A                  STY   OLDLIN+1   
0843                END4:     
0843   68                     PLA   
0844   68                     PLA   
0845                L2701:    
0845   A9 99                  LDA   #<QT_BREAK   
0847   A0 03                  LDY   #>QT_BREAK   
0849   A2 00                  LDX   #$00   
084B   86 64                  STX   Z14   
084D   90 03                  BCC   L270E   
084F   4C 69 04               JMP   PRINT_ERROR_LINNUM   
0852                L270E:    
0852   4C 74 04               JMP   RESTART   
0855                          ; ----------------------------------------------------------------------------
0855                          ; "CONT" COMMAND
0855                          ; ----------------------------------------------------------------------------
0855                CONT:     
0855   D0 17                  BNE   RET1   
0857   A2 1E                  LDX   #ERR_CANTCONT   
0859   A4 8C                  LDY   OLDTEXT+1   
085B   D0 03                  BNE   L271C   
085D   4C 4E 04               JMP   ERROR   
0860                L271C:    
0860   A5 8B                  LDA   OLDTEXT   
0862   85 C3                  STA   TXTPTR   
0864   84 C4                  STY   TXTPTR+1   
0866   A5 89                  LDA   OLDLIN   
0868   A4 8A                  LDY   OLDLIN+1   
086A   85 87                  STA   CURLIN   
086C   84 88                  STY   CURLIN+1   
086E                RET1:     
086E   60                     RTS   
086F                NULL:     
086F   20 A2 15               JSR   GETBYT   
0872   D0 FA                  BNE   RET1   
0874   E8                     INX   
0875   E0 0A                  CPX   #NULL_MAX   
0877   B0 04                  BCS   L2739   
0879   CA                     DEX   
087A   86 0D                  STX   Z15   
087C   60                     RTS   
087D                L2739:    
087D   4C 7C 10               JMP   IQERR   
0880                CLEAR:    
0880   D0 EC                  BNE   RET1   
0882   4C 7A 06               JMP   CLEARC   
0885                          ; ----------------------------------------------------------------------------
0885                          ; "RUN" COMMAND
0885                          ; ----------------------------------------------------------------------------
0885                RUN:      
0885   D0 03                  BNE   L27CF   
0887   4C 77 06               JMP   SETPTRS   
088A                L27CF:    
088A   20 7A 06               JSR   CLEARC   
088D   4C A4 08               JMP   L27E9   
0890                          ; ----------------------------------------------------------------------------
0890                          ; "GOSUB" STATEMENT
0890                          ; 
0890                          ; LEAVES 7 BYTES ON STACK:
0890                          ; 2 -- RETURN ADDRESS (NEWSTT)
0890                          ; 2 -- TXTPTR
0890                          ; 2 -- LINE #
0890                          ; 1 -- GOSUB TOKEN
0890                          ; ----------------------------------------------------------------------------
0890                GOSUB:    
0890   A9 03                  LDA   #$03   
0892   20 12 04               JSR   CHKMEM   
0895   A5 C4                  LDA   TXTPTR+1   
0897   48                     PHA   
0898   A5 C3                  LDA   TXTPTR   
089A   48                     PHA   
089B   A5 88                  LDA   CURLIN+1   
089D   48                     PHA   
089E   A5 87                  LDA   CURLIN   
08A0   48                     PHA   
08A1   A9 8C                  LDA   #TOKEN_GOSUB   
08A3   48                     PHA   
08A4                L27E9:    
08A4   20 C2 00               JSR   CHRGOT   
08A7   20 AD 08               JSR   GOTO   
08AA   4C C2 07               JMP   NEWSTT   
08AD                          ; ----------------------------------------------------------------------------
08AD                          ; "GOTO" STATEMENT
08AD                          ; ALSO USED BY "RUN" AND "GOSUB"
08AD                          ; ----------------------------------------------------------------------------
08AD                GOTO:     
08AD   20 73 09               JSR   LINGET   
08B0   20 11 09               JSR   REMN   
08B3   A5 88                  LDA   CURLIN+1   
08B5   C5 12                  CMP   LINNUM+1   
08B7   B0 0B                  BCS   L2809   
08B9   98                     TYA   
08BA   38                     SEC   
08BB   65 C3                  ADC   TXTPTR   
08BD   A6 C4                  LDX   TXTPTR+1   
08BF   90 07                  BCC   L280D   
08C1   E8                     INX   
08C2   B0 04                  BCS   L280D   
08C4                L2809:    
08C4   A5 79                  LDA   TXTTAB   
08C6   A6 7A                  LDX   TXTTAB+1   
08C8                L280D:    
08C8   20 36 06               JSR   FL1   
08CB   90 1E                  BCC   UNDERR   
08CD   A5 AA                  LDA   LOWTRX   
08CF   E9 01                  SBC   #$01   
08D1   85 C3                  STA   TXTPTR   
08D3   A5 AB                  LDA   LOWTRX+1   
08D5   E9 00                  SBC   #$00   
08D7   85 C4                  STA   TXTPTR+1   
08D9                L281E:    
08D9   60                     RTS   
08DA                          ; ----------------------------------------------------------------------------
08DA                          ; "POP" AND "RETURN" STATEMENTS
08DA                          ; ----------------------------------------------------------------------------
08DA                POP:      
08DA   D0 FD                  BNE   L281E   
08DC   A9 FF                  LDA   #$FF   
08DE   85 97                  STA   FORPNT   
08E0   20 A1 03               JSR   GTFORPNT   
08E3   9A                     TXS   
08E4   C9 8C                  CMP   #TOKEN_GOSUB   
08E6   F0 0B                  BEQ   RETURN   
08E8   A2 04                  LDX   #ERR_NOGOSUB   
08EA   2C                     DB   $2C   
08EB                UNDERR:   
08EB   A2 0E                  LDX   #ERR_UNDEFSTAT   
08ED   4C 4E 04               JMP   ERROR   
08F0                          ; ----------------------------------------------------------------------------
08F0                SYNERR2:   
08F0   4C 00 0E               JMP   SYNERR   
08F3                          ; ----------------------------------------------------------------------------
08F3                RETURN:   
08F3   68                     PLA   
08F4   68                     PLA   
08F5   85 87                  STA   CURLIN   
08F7   68                     PLA   
08F8   85 88                  STA   CURLIN+1   
08FA   68                     PLA   
08FB   85 C3                  STA   TXTPTR   
08FD   68                     PLA   
08FE   85 C4                  STA   TXTPTR+1   
0900                          ; ----------------------------------------------------------------------------
0900                          ; "DATA" STATEMENT
0900                          ; EXECUTED BY SKIPPING TO NEXT COLON OR EOL
0900                          ; ----------------------------------------------------------------------------
0900                DATA:     
0900   20 0E 09               JSR   DATAN   
0903                          ; ----------------------------------------------------------------------------
0903                          ; ADD (Y) TO TXTPTR
0903                          ; ----------------------------------------------------------------------------
0903                ADDON:    
0903   98                     TYA   
0904   18                     CLC   
0905   65 C3                  ADC   TXTPTR   
0907   85 C3                  STA   TXTPTR   
0909   90 02                  BCC   L2852   
090B   E6 C4                  INC   TXTPTR+1   
090D                L2852:    
090D   60                     RTS   
090E                          ; ----------------------------------------------------------------------------
090E                          ; SCAN AHEAD TO NEXT ":" OR EOL
090E                          ; ----------------------------------------------------------------------------
090E                DATAN:    
090E   A2 3A                  LDX   #$3A   
0910   2C                     DB   $2C   
0911                REMN:     
0911   A2 00                  LDX   #$00   
0913   86 5B                  STX   CHARAC   
0915   A0 00                  LDY   #$00   
0917   84 5C                  STY   ENDCHR   
0919                L285E:    
0919   A5 5C                  LDA   ENDCHR   
091B   A6 5B                  LDX   CHARAC   
091D   85 5B                  STA   CHARAC   
091F   86 5C                  STX   ENDCHR   
0921                L2866:    
0921   B1 C3                  LDA   (TXTPTR),y   
0923   F0 E8                  BEQ   L2852   
0925   C5 5C                  CMP   ENDCHR   
0927   F0 E4                  BEQ   L2852   
0929   C8                     INY   
092A   C9 22                  CMP   #$22   
092C   F0 EB                  BEQ   L285E   ; old: swap & cont is faster
092E   D0 F1                  BNE   L2866   
0930                          ; ----------------------------------------------------------------------------
0930                          ; "IF" STATEMENT
0930                          ; ----------------------------------------------------------------------------
0930                IF:       
0930   20 B5 0C               JSR   FRMEVL   
0933   20 C2 00               JSR   CHRGOT   
0936   C9 88                  CMP   #TOKEN_GOTO   
0938   F0 05                  BEQ   L2884   
093A   A9 A0                  LDA   #TOKEN_THEN   
093C   20 F7 0D               JSR   SYNCHR   
093F                L2884:    
093F   A5 AC                  LDA   FAC   
0941   D0 05                  BNE   L288D   
0943                          ; ----------------------------------------------------------------------------
0943                          ; "REM" STATEMENT, OR FALSE "IF" STATEMENT
0943                          ; ----------------------------------------------------------------------------
0943                REM:      
0943   20 11 09               JSR   REMN   
0946   F0 BB                  BEQ   ADDON   
0948                L288D:    
0948   20 C2 00               JSR   CHRGOT   
094B   B0 03                  BCS   L2895   
094D   4C AD 08               JMP   GOTO   
0950                L2895:    
0950   4C FF 07               JMP   EXECUTE_STATEMENT   
0953                          ; ----------------------------------------------------------------------------
0953                          ; "ON" STATEMENT
0953                          ; 
0953                          ; ON <EXP> GOTO <LIST>
0953                          ; ON <EXP> GOSUB <LIST>
0953                          ; ----------------------------------------------------------------------------
0953                ON:       
0953   20 A2 15               JSR   GETBYT   
0956   48                     PHA   
0957   C9 8C                  CMP   #TOKEN_GOSUB   
0959   F0 04                  BEQ   L28A4   
095B                L28A0:    
095B   C9 88                  CMP   #TOKEN_GOTO   
095D   D0 91                  BNE   SYNERR2   
095F                L28A4:    
095F   C6 AF                  DEC   FAC_LAST   
0961   D0 04                  BNE   L28AC   
0963   68                     PLA   
0964   4C 02 08               JMP   EXECUTE_STATEMENT1   
0967                L28AC:    
0967   20 BC 00               JSR   CHRGET   
096A   20 73 09               JSR   LINGET   
096D   C9 2C                  CMP   #$2C   
096F   F0 EE                  BEQ   L28A4   
0971   68                     PLA   
0972                L28B7:    
0972   60                     RTS   
0973                          ; ----------------------------------------------------------------------------
0973                          ; CONVERT LINE NUMBER
0973                          ; ----------------------------------------------------------------------------
0973                LINGET:   
0973   A2 00                  LDX   #$00   
0975   86 11                  STX   LINNUM   
0977   86 12                  STX   LINNUM+1   
0979                L28BE:    
0979   B0 F7                  BCS   L28B7   
097B   E9 2F                  SBC   #$2F   
097D   85 5B                  STA   CHARAC   
097F   A5 12                  LDA   LINNUM+1   
0981   85 71                  STA   INDEX   
0983   C9 19                  CMP   #$19   
0985   B0 D4                  BCS   L28A0   
0987                          ; <<<<<DANGEROUS CODE>>>>>
0987                          ; NOTE THAT IF (A) = $AB ON THE LINE ABOVE,
0987                          ; ON.1 WILL COMPARE = AND CAUSE A CATASTROPHIC
0987                          ; JUMP TO $22D9 (FOR GOTO), OR OTHER LOCATIONS
0987                          ; FOR OTHER CALLS TO LINGET.
0987                          ; 
0987                          ; YOU CAN SEE THIS IS YOU FIRST PUT "BRK" IN $22D9,
0987                          ; THEN TYPE "GO TO 437761".
0987                          ; 
0987                          ; ANY VALUE FROM 437760 THROUGH 440319 WILL CAUSE
0987                          ; THE PROBLEM.  ($AB00 - $ABFF)
0987                          ; <<<<<DANGEROUS CODE>>>>>
0987   A5 11                  LDA   LINNUM   
0989   0A                     ASL   ;a
098A   26 71                  ROL   INDEX   
098C   0A                     ASL   ;a
098D   26 71                  ROL   INDEX   
098F   65 11                  ADC   LINNUM   
0991   85 11                  STA   LINNUM   
0993   A5 71                  LDA   INDEX   
0995   65 12                  ADC   LINNUM+1   
0997   85 12                  STA   LINNUM+1   
0999   06 11                  ASL   LINNUM   
099B   26 12                  ROL   LINNUM+1   
099D   A5 11                  LDA   LINNUM   
099F   65 5B                  ADC   CHARAC   
09A1   85 11                  STA   LINNUM   
09A3   90 02                  BCC   L28EC   
09A5   E6 12                  INC   LINNUM+1   
09A7                L28EC:    
09A7   20 BC 00               JSR   CHRGET   
09AA   4C 79 09               JMP   L28BE   
09AD                          ; ----------------------------------------------------------------------------
09AD                          ; "LET" STATEMENT
09AD                          ; 
09AD                          ; LET <VAR> = <EXP>
09AD                          ; <VAR> = <EXP>
09AD                          ; ----------------------------------------------------------------------------
09AD                LET:      
09AD   20 FF 0E               JSR   PTRGET   
09B0   85 97                  STA   FORPNT   
09B2   84 98                  STY   FORPNT+1   
09B4   A9 AB                  LDA   #TOKEN_EQUAL   
09B6   20 F7 0D               JSR   SYNCHR   
09B9   A5 5F                  LDA   VALTYP   
09BB   48                     PHA   
09BC   20 B5 0C               JSR   FRMEVL   
09BF   68                     PLA   
09C0   2A                     ROL   ;a
09C1   20 A7 0C               JSR   CHKVAL   
09C4   D0 03                  BNE   LETSTRING   
09C6                          ; ----------------------------------------------------------------------------
09C6                          ; REAL VARIABLE = EXPRESSION
09C6                          ; ----------------------------------------------------------------------------
09C6   4C 68 19               JMP   SETFOR   
09C9                LETSTRING:   
09C9                          ; ----------------------------------------------------------------------------
09C9                          ; INSTALL STRING, DESCRIPTOR ADDRESS IS AT FAC+3,4
09C9                          ; ----------------------------------------------------------------------------
09C9   A0 02                  LDY   #$02   
09CB   B1 AE                  LDA   (FAC_LAST-1),y   
09CD   C5 82                  CMP   FRETOP+1   
09CF   90 17                  BCC   L2946   
09D1   D0 07                  BNE   L2938   
09D3   88                     DEY   
09D4   B1 AE                  LDA   (FAC_LAST-1),y   
09D6   C5 81                  CMP   FRETOP   
09D8   90 0E                  BCC   L2946   
09DA                L2938:    
09DA   A4 AF                  LDY   FAC_LAST   
09DC   C4 7C                  CPY   VARTAB+1   
09DE   90 08                  BCC   L2946   
09E0   D0 0D                  BNE   L294D   
09E2   A5 AE                  LDA   FAC_LAST-1   
09E4   C5 7B                  CMP   VARTAB   
09E6   B0 07                  BCS   L294D   
09E8                L2946:    
09E8   A5 AE                  LDA   FAC_LAST-1   
09EA   A4 AF                  LDY   FAC_LAST   
09EC   4C 05 0A               JMP   L2963   
09EF                L294D:    
09EF   A0 00                  LDY   #$00   
09F1   B1 AE                  LDA   (FAC_LAST-1),y   
09F3   20 90 12               JSR   STRINI   
09F6   A5 9E                  LDA   DSCPTR   
09F8   A4 9F                  LDY   DSCPTR+1   
09FA   85 B8                  STA   STRNG1   
09FC   84 B9                  STY   STRNG1+1   
09FE   20 7E 14               JSR   MOVINS   
0A01   A9 AC                  LDA   #FAC   
0A03   A0 00                  LDY   #$00   
0A05                L2963:    
0A05   85 9E                  STA   DSCPTR   
0A07   84 9F                  STY   DSCPTR+1   
0A09   20 DF 14               JSR   FRETMS   
0A0C   A0 00                  LDY   #$00   
0A0E   B1 9E                  LDA   (DSCPTR),y   
0A10   91 97                  STA   (FORPNT),y   
0A12   C8                     INY   
0A13   B1 9E                  LDA   (DSCPTR),y   
0A15   91 97                  STA   (FORPNT),y   
0A17   C8                     INY   
0A18   B1 9E                  LDA   (DSCPTR),y   
0A1A   91 97                  STA   (FORPNT),y   
0A1C   60                     RTS   
0A1D                PRSTRING:   
0A1D   20 BA 0A               JSR   STRPRT   
0A20                L297E:    
0A20   20 C2 00               JSR   CHRGOT   
0A23                          ; ----------------------------------------------------------------------------
0A23                          ; "PRINT" STATEMENT
0A23                          ; ----------------------------------------------------------------------------
0A23                PRINT:    
0A23   F0 3B                  BEQ   CRDO   
0A25                PRINT2:   
0A25   F0 57                  BEQ   L29DD   
0A27   C9 9C                  CMP   #TOKEN_TAB   
0A29   F0 6B                  BEQ   L29F5   
0A2B   C9 9F                  CMP   #TOKEN_SPC   
0A2D   F0 67                  BEQ   L29F5   
0A2F   C9 2C                  CMP   #","   
0A31   F0 4C                  BEQ   L29DE   
0A33   C9 3B                  CMP   #$3B   
0A35   F0 7A                  BEQ   L2A0D   
0A37   20 B5 0C               JSR   FRMEVL   
0A3A   24 5F                  BIT   VALTYP   
0A3C   30 DF                  BMI   PRSTRING   
0A3E   20 62 1B               JSR   FOUT   
0A41   20 A2 12               JSR   STRLIT   
0A44   A0 00                  LDY   #$00   
0A46   B1 AE                  LDA   (FAC_LAST-1),y   
0A48   18                     CLC   
0A49   65 0E                  ADC   POSX   
0A4B   C5 0F                  CMP   Z17   
0A4D   90 03                  BCC   L29B1   
0A4F   20 60 0A               JSR   CRDO   
0A52                L29B1:    
0A52   20 BA 0A               JSR   STRPRT   
0A55   20 D4 0A               JSR   OUTSP   
0A58   D0 C6                  BNE   L297E   ; branch always
0A5A                L29B9:    
0A5A   A0 00                  LDY   #$00   
0A5C   94 13                  STY   *INPUTBUFFER,x   
0A5E   A2 12                  LDX   #LINNUM+1   
0A60                CRDO:     
0A60   A9 0D                  LDA   #CRLF_1   
0A62   85 0E                  STA   POSX   
0A64   20 D9 0A               JSR   OUTDO   
0A67   A9 0A                  LDA   #CRLF_2   
0A69   20 D9 0A               JSR   OUTDO   
0A6C                PRINTNULLS:   
0A6C   8A                     TXA   
0A6D   48                     PHA   
0A6E   A6 0D                  LDX   Z15   
0A70   F0 08                  BEQ   L29D9   
0A72   A9 00                  LDA   #$00   
0A74                L29D3:    
0A74   20 D9 0A               JSR   OUTDO   
0A77   CA                     DEX   
0A78   D0 FA                  BNE   L29D3   
0A7A                L29D9:    
0A7A   86 0E                  STX   POSX   
0A7C   68                     PLA   
0A7D   AA                     TAX   
0A7E                L29DD:    
0A7E   60                     RTS   
0A7F                L29DE:    
0A7F   A5 0E                  LDA   POSX   
0A81   C5 10                  CMP   Z18   
0A83   90 06                  BCC   L29EA   
0A85   20 60 0A               JSR   CRDO   
0A88   4C B1 0A               JMP   L2A0D   
0A8B                L29EA:    
0A8B   38                     SEC   
0A8C                L29EB:    
0A8C   E9 0E                  SBC   #$0E   
0A8E   B0 FC                  BCS   L29EB   
0A90   49 FF                  EOR   #$FF   
0A92   69 01                  ADC   #$01   
0A94   D0 14                  BNE   L2A08   
0A96                L29F5:    
0A96   48                     PHA   
0A97   20 9F 15               JSR   GTBYTC   
0A9A   C9 29                  CMP   #')'   
0A9C   D0 66                  BNE   SYNERR4   
0A9E   68                     PLA   
0A9F   C9 9C                  CMP   #TOKEN_TAB   
0AA1   D0 08                  BNE   L2A0A   
0AA3   8A                     TXA   
0AA4   E5 0E                  SBC   POSX   
0AA6   90 09                  BCC   L2A0D   
0AA8   F0 07                  BEQ   L2A0D   
0AAA                L2A08:    
0AAA   AA                     TAX   
0AAB                L2A0A:    
0AAB   20 D4 0A               JSR   OUTSP   
0AAE   CA                     DEX   
0AAF   D0 FA                  BNE   L2A0A   
0AB1                L2A0D:    
0AB1   20 BC 00               JSR   CHRGET   
0AB4   4C 25 0A               JMP   PRINT2   
0AB7                          ; ----------------------------------------------------------------------------
0AB7                          ; PRINT STRING AT (Y,A)
0AB7                          ; ----------------------------------------------------------------------------
0AB7                STROUT:   
0AB7   20 A2 12               JSR   STRLIT   
0ABA                          ; ----------------------------------------------------------------------------
0ABA                          ; PRINT STRING AT (FACMO,FACLO)
0ABA                          ; ----------------------------------------------------------------------------
0ABA                STRPRT:   
0ABA   20 AA 14               JSR   FREFAC   
0ABD   AA                     TAX   
0ABE   A0 00                  LDY   #$00   
0AC0   E8                     INX   
0AC1                L2A22:    
0AC1   CA                     DEX   
0AC2   F0 BA                  BEQ   L29DD   
0AC4   B1 71                  LDA   (INDEX),y   
0AC6   20 D9 0A               JSR   OUTDO   
0AC9   C8                     INY   
0ACA   C9 0D                  CMP   #$0D   
0ACC   D0 F3                  BNE   L2A22   
0ACE   20 6C 0A               JSR   PRINTNULLS   
0AD1   4C C1 0A               JMP   L2A22   
0AD4                          ; ----------------------------------------------------------------------------
0AD4                OUTSP:    
0AD4   A9 20                  LDA   #$20   
0AD6   2C                     DB   $2C   
0AD7                OUTQUES:   
0AD7   A9 3F                  LDA   #$3F   
0AD9                          ; ----------------------------------------------------------------------------
0AD9                          ; PRINT CHAR FROM (A)
0AD9                          ; ----------------------------------------------------------------------------
0AD9                OUTDO:    
0AD9   24 64                  BIT   Z14   
0ADB   30 18                  BMI   L2A56   
0ADD                          ; Commodore forgot to remove this in CBM1
0ADD   48                     PHA   
0ADE   C9 20                  CMP   #$20   
0AE0   90 0B                  BCC   L2A4E   
0AE2   A5 0E                  LDA   POSX   
0AE4   C5 0F                  CMP   Z17   
0AE6   D0 03                  BNE   L2A4C   
0AE8   20 60 0A               JSR   CRDO   
0AEB                L2A4C:    
0AEB   E6 0E                  INC   POSX   
0AED                L2A4E:    
0AED                          ; Commodore forgot to remove this in CBM1
0AED   68                     PLA   
0AEE   20 2F FF               JSR   MONCOUT   
0AF1   EA                     NOP   
0AF2   EA                     NOP   
0AF3   EA                     NOP   
0AF4   EA                     NOP   
0AF5                L2A56:    
0AF5   29 FF                  AND   #$FF   
0AF7   60                     RTS   
0AF8                          ; ----------------------------------------------------------------------------
0AF8                          ; ???
0AF8                          ; ----------------------------------------------------------------------------
0AF8                          ; ----------------------------------------------------------------------------
0AF8                          ; INPUT CONVERSION ERROR:  ILLEGAL CHARACTER
0AF8                          ; IN NUMERIC FIELD.  MUST DISTINGUISH
0AF8                          ; BETWEEN INPUT, READ, AND GET
0AF8                          ; ----------------------------------------------------------------------------
0AF8                INPUTERR:   
0AF8   A5 62                  LDA   INPUTFLG   
0AFA   F0 0B                  BEQ   RESPERR   ; INPUT
0AFC                          ; without this, it treats GET errors
0AFC                          ; like READ errors
0AFC   A5 8D                  LDA   Z8C   
0AFE   A4 8E                  LDY   Z8C+1   
0B00   85 87                  STA   CURLIN   
0B02   84 88                  STY   CURLIN+1   
0B04                SYNERR4:   
0B04   4C 00 0E               JMP   SYNERR   
0B07                RESPERR:   
0B07   A9 21                  LDA   #<ERRREENTRY   
0B09   A0 0C                  LDY   #>ERRREENTRY   
0B0B   20 B7 0A               JSR   STROUT   
0B0E   A5 8B                  LDA   OLDTEXT   
0B10   A4 8C                  LDY   OLDTEXT+1   
0B12   85 C3                  STA   TXTPTR   
0B14   84 C4                  STY   TXTPTR+1   
0B16   60                     RTS   
0B17                          ; ----------------------------------------------------------------------------
0B17                          ; "GET" STATEMENT
0B17                          ; ----------------------------------------------------------------------------
0B17                GET:      
0B17                          ; ----------------------------------------------------------------------------
0B17                          ; "INPUT#" STATEMENT
0B17                          ; ----------------------------------------------------------------------------
0B17                          ; ----------------------------------------------------------------------------
0B17                          ; "INPUT" STATEMENT
0B17                          ; ----------------------------------------------------------------------------
0B17                INPUT:    
0B17   46 64                  LSR   Z14   
0B19   C9 22                  CMP   #$22   
0B1B   D0 0B                  BNE   L2A9E   
0B1D   20 B5 0D               JSR   STRTXT   
0B20   A9 3B                  LDA   #$3B   
0B22   20 F7 0D               JSR   SYNCHR   
0B25   20 BA 0A               JSR   STRPRT   
0B28                L2A9E:    
0B28   20 C8 11               JSR   ERRDIR   
0B2B   A9 2C                  LDA   #$2C   
0B2D   85 12                  STA   INPUTBUFFER-1   
0B2F   20 3A 0B               JSR   NXIN   
0B32   A5 13                  LDA   INPUTBUFFER   
0B34   D0 12                  BNE   L2ABE   
0B36   18                     CLC   
0B37   4C 3B 08               JMP   CONTROL_C_TYPED   
0B3A                NXIN:     
0B3A   20 D7 0A               JSR   OUTQUES   ; '?'
0B3D   20 D4 0A               JSR   OUTSP   
0B40   4C 57 05               JMP   INLIN   
0B43                          ; ----------------------------------------------------------------------------
0B43                          ; "GETC" STATEMENT
0B43                          ; ----------------------------------------------------------------------------
0B43                          ; ----------------------------------------------------------------------------
0B43                          ; "READ" STATEMENT
0B43                          ; ----------------------------------------------------------------------------
0B43                READ:     
0B43   A6 8F                  LDX   DATPTR   
0B45   A4 90                  LDY   DATPTR+1   
0B47                          ; AppleSoft II, too
0B47   A9                     DB   $A9   ; LDA #$98
0B48                L2ABE:    
0B48   98                     TYA   
0B49                          ; ----------------------------------------------------------------------------
0B49                          ; PROCESS INPUT LIST
0B49                          ; 
0B49                          ; (Y,X) IS ADDRESS OF INPUT DATA STRING
0B49                          ; (A) = VALUE FOR INPUTFLG:  $00 FOR INPUT
0B49                          ;         $40 FOR GET
0B49                          ;       $98 FOR READ
0B49                          ; ----------------------------------------------------------------------------
0B49   85 62                  STA   INPUTFLG   
0B4B   86 91                  STX   INPTR   
0B4D   84 92                  STY   INPTR+1   
0B4F                PROCESS_INPUT_ITEM:   
0B4F   20 FF 0E               JSR   PTRGET   
0B52   85 97                  STA   FORPNT   
0B54   84 98                  STY   FORPNT+1   
0B56   A5 C3                  LDA   TXTPTR   
0B58   A4 C4                  LDY   TXTPTR+1   
0B5A   85 11                  STA   TXPSV   
0B5C   84 12                  STY   TXPSV+1   
0B5E   A6 91                  LDX   INPTR   
0B60   A4 92                  LDY   INPTR+1   
0B62   86 C3                  STX   TXTPTR   
0B64   84 C4                  STY   TXTPTR+1   
0B66   20 C2 00               JSR   CHRGOT   
0B69   D0 0E                  BNE   INSTART   
0B6B   24 62                  BIT   INPUTFLG   
0B6D                          ; BUG: The beq/bne L2AF8 below is supposed
0B6D                          ; to be always taken. For this to happen,
0B6D                          ; the last load must be a 0 for beq
0B6D                          ; and != 0 for bne. The original Microsoft
0B6D                          ; code had ldx/ldy/bne here, which was only
0B6D                          ; correct for a non-ZP INPUTBUFFER. Commodore
0B6D                          ; fixed it in CBMBASIC V1 by swapping the
0B6D                          ; ldx and the ldy. It was broken on KIM,
0B6D                          ; but okay on APPLE and CBM2, because
0B6D                          ; these used a non-ZP INPUTBUFFER.
0B6D                          ; Microsoft fixed this somewhere after KIM
0B6D                          ; and before MICROTAN, by using beq instead
0B6D                          ; of bne in the ZP case.
0B6D   30 62                  BMI   FINDATA   
0B6F   20 D7 0A               JSR   OUTQUES   
0B72   20 3A 0B               JSR   NXIN   
0B75   86 C3                  STX   TXTPTR   
0B77   84 C4                  STY   TXTPTR+1   
0B79                          ; ----------------------------------------------------------------------------
0B79                INSTART:   
0B79   20 BC 00               JSR   CHRGET   
0B7C   24 5F                  BIT   VALTYP   
0B7E   10 24                  BPL   L2B34   
0B80   85 5B                  STA   CHARAC   
0B82   C9 22                  CMP   #$22   
0B84   F0 07                  BEQ   L2B1D   
0B86   A9 3A                  LDA   #$3A   
0B88   85 5B                  STA   CHARAC   
0B8A   A9 2C                  LDA   #$2C   
0B8C   18                     CLC   
0B8D                L2B1D:    
0B8D   85 5C                  STA   ENDCHR   
0B8F   A5 C3                  LDA   TXTPTR   
0B91   A4 C4                  LDY   TXTPTR+1   
0B93   69 00                  ADC   #$00   
0B95   90 01                  BCC   L2B28   
0B97   C8                     INY   
0B98                L2B28:    
0B98   20 A8 12               JSR   STRLT2   
0B9B   20 E7 15               JSR   POINT   
0B9E   20 C9 09               JSR   LETSTRING   
0BA1   4C AA 0B               JMP   INPUT_MORE   
0BA4                          ; ----------------------------------------------------------------------------
0BA4                L2B34:    
0BA4   20 7B 1A               JSR   FIN   
0BA7   20 68 19               JSR   SETFOR   
0BAA                          ; ----------------------------------------------------------------------------
0BAA                INPUT_MORE:   
0BAA   20 C2 00               JSR   CHRGOT   
0BAD   F0 07                  BEQ   L2B48   
0BAF   C9 2C                  CMP   #$2C   
0BB1   F0 03                  BEQ   L2B48   
0BB3   4C F8 0A               JMP   INPUTERR   
0BB6                L2B48:    
0BB6   A5 C3                  LDA   TXTPTR   
0BB8   A4 C4                  LDY   TXTPTR+1   
0BBA   85 91                  STA   INPTR   
0BBC   84 92                  STY   INPTR+1   
0BBE   A5 11                  LDA   TXPSV   
0BC0   A4 12                  LDY   TXPSV+1   
0BC2   85 C3                  STA   TXTPTR   
0BC4   84 C4                  STY   TXTPTR+1   
0BC6   20 C2 00               JSR   CHRGOT   
0BC9   F0 2C                  BEQ   INPDONE   
0BCB   20 F5 0D               JSR   CHKCOM   
0BCE   4C 4F 0B               JMP   PROCESS_INPUT_ITEM   
0BD1                          ; ----------------------------------------------------------------------------
0BD1                FINDATA:   
0BD1   20 0E 09               JSR   DATAN   
0BD4   C8                     INY   
0BD5   AA                     TAX   
0BD6   D0 12                  BNE   L2B7C   
0BD8   A2 06                  LDX   #ERR_NODATA   
0BDA   C8                     INY   
0BDB   B1 C3                  LDA   (TXTPTR),y   
0BDD   F0 69                  BEQ   GERR   
0BDF   C8                     INY   
0BE0   B1 C3                  LDA   (TXTPTR),y   
0BE2   85 8D                  STA   Z8C   
0BE4   C8                     INY   
0BE5   B1 C3                  LDA   (TXTPTR),y   
0BE7   C8                     INY   
0BE8   85 8E                  STA   Z8C+1   
0BEA                L2B7C:    
0BEA   B1 C3                  LDA   (TXTPTR),y   
0BEC   AA                     TAX   
0BED   20 03 09               JSR   ADDON   
0BF0   E0 83                  CPX   #$83   
0BF2   D0 DD                  BNE   FINDATA   
0BF4   4C 79 0B               JMP   INSTART   
0BF7                          ; ---NO MORE INPUT REQUESTED------
0BF7                INPDONE:   
0BF7   A5 91                  LDA   INPTR   
0BF9   A4 92                  LDY   INPTR+1   
0BFB   A6 62                  LDX   INPUTFLG   
0BFD   F0 03                  BEQ   L2B94   ; INPUT
0BFF   4C 24 08               JMP   SETDA   
0C02                L2B94:    
0C02   A0 00                  LDY   #$00   
0C04   B1 91                  LDA   (INPTR),y   
0C06   F0 07                  BEQ   L2BA1   
0C08   A9 10                  LDA   #<ERREXTRA   
0C0A   A0 0C                  LDY   #>ERREXTRA   
0C0C   4C B7 0A               JMP   STROUT   
0C0F                L2BA1:    
0C0F   60                     RTS   
0C10                          ; ----------------------------------------------------------------------------
0C10                ERREXTRA:   
0C10   3F 45 58 54 52 41 20 49 47 4E 4F 52 45 44 DB   "?EXTRA IGNORED"   
0C1E   0D 0A 00               DB   $0D,$0A,$00   
0C21                ERRREENTRY:   
0C21   3F 52 45 44 4F 20 46 52 4F 4D 20 53 54 41 52 54 DB   "?REDO FROM START"   
0C31   0D 0A 00               DB   $0D,$0A,$00   
0C34                          ; ----------------------------------------------------------------------------
0C34                          ; "NEXT" STATEMENT
0C34                          ; ----------------------------------------------------------------------------
0C34                NEXT:     
0C34   D0 04                  BNE   NEXT1   
0C36   A0 00                  LDY   #$00   
0C38   F0 03                  BEQ   NEXT2   
0C3A                NEXT1:    
0C3A   20 FF 0E               JSR   PTRGET   
0C3D                NEXT2:    
0C3D   85 97                  STA   FORPNT   
0C3F   84 98                  STY   FORPNT+1   
0C41   20 A1 03               JSR   GTFORPNT   
0C44   F0 04                  BEQ   NEXT3   
0C46   A2 00                  LDX   #$00   
0C48                GERR:     
0C48   F0 68                  BEQ   JERROR   
0C4A                NEXT3:    
0C4A   9A                     TXS   
0C4B   E8                     INX   
0C4C   E8                     INX   
0C4D   E8                     INX   
0C4E   E8                     INX   
0C4F   8A                     TXA   
0C50   E8                     INX   
0C51   E8                     INX   
0C52   E8                     INX   
0C53   E8                     INX   
0C54   E8                     INX   
0C55   86 73                  STX   DEST   
0C57   A0 01                  LDY   #>STACK   
0C59   20 3F 19               JSR   LOAD_FAC_FROM_YA   
0C5C   BA                     TSX   
0C5D   BD 08 01               LDA   STACK+BYTES_FP+4,x   
0C60   85 B0                  STA   FACSIGN   
0C62   A5 97                  LDA   FORPNT   
0C64   A4 98                  LDY   FORPNT+1   
0C66   20 60 16               JSR   FADD   
0C69   20 68 19               JSR   SETFOR   
0C6C   A0 01                  LDY   #>STACK   
0C6E   20 EE 19               JSR   FCOMP2   
0C71   BA                     TSX   
0C72   38                     SEC   
0C73   FD 08 01               SBC   STACK+BYTES_FP+4,x   
0C76   F0 17                  BEQ   L2C22   
0C78   BD 0D 01               LDA   STACK+2*BYTES_FP+5,x   
0C7B   85 87                  STA   CURLIN   
0C7D   BD 0E 01               LDA   STACK+2*BYTES_FP+6,x   
0C80   85 88                  STA   CURLIN+1   
0C82   BD 10 01               LDA   STACK+2*BYTES_FP+8,x   
0C85   85 C3                  STA   TXTPTR   
0C87   BD 0F 01               LDA   STACK+2*BYTES_FP+7,x   
0C8A   85 C4                  STA   TXTPTR+1   
0C8C                L2C1F:    
0C8C   4C C2 07               JMP   NEWSTT   
0C8F                L2C22:    
0C8F   8A                     TXA   
0C90   69 0F                  ADC   #2*BYTES_FP+7   
0C92   AA                     TAX   
0C93   9A                     TXS   
0C94   20 C2 00               JSR   CHRGOT   
0C97   C9 2C                  CMP   #$2C   
0C99   D0 F1                  BNE   L2C1F   
0C9B   20 BC 00               JSR   CHRGET   
0C9E   20 3A 0C               JSR   NEXT1   
0CA1                          ; ----------------------------------------------------------------------------
0CA1                          ; EVALUATE EXPRESSION, MAKE SURE IT IS NUMERIC
0CA1                          ; ----------------------------------------------------------------------------
0CA1                FRMNUM:   
0CA1   20 B5 0C               JSR   FRMEVL   
0CA4                          ; ----------------------------------------------------------------------------
0CA4                          ; MAKE SURE (FAC) IS NUMERIC
0CA4                          ; ----------------------------------------------------------------------------
0CA4                CHKNUM:   
0CA4   18                     CLC   
0CA5   24                     DB   $24   
0CA6                          ; ----------------------------------------------------------------------------
0CA6                          ; MAKE SURE (FAC) IS STRING
0CA6                          ; ----------------------------------------------------------------------------
0CA6                CHKSTR:   
0CA6   38                     SEC   
0CA7                          ; ----------------------------------------------------------------------------
0CA7                          ; MAKE SURE (FAC) IS CORRECT TYPE
0CA7                          ; IF C=0, TYPE MUST BE NUMERIC
0CA7                          ; IF C=1, TYPE MUST BE STRING
0CA7                          ; ----------------------------------------------------------------------------
0CA7                CHKVAL:   
0CA7   24 5F                  BIT   VALTYP   
0CA9   30 03                  BMI   L2C41   
0CAB   B0 03                  BCS   L2C43   
0CAD                L2C40:    
0CAD   60                     RTS   
0CAE                L2C41:    
0CAE   B0 FD                  BCS   L2C40   
0CB0                L2C43:    
0CB0   A2 18                  LDX   #ERR_BADTYPE   
0CB2                JERROR:   
0CB2   4C 4E 04               JMP   ERROR   
0CB5                          ; ----------------------------------------------------------------------------
0CB5                          ; EVALUATE THE EXPRESSION AT TXTPTR, LEAVING THE
0CB5                          ; RESULT IN FAC.  WORKS FOR BOTH STRING AND NUMERIC
0CB5                          ; EXPRESSIONS.
0CB5                          ; ----------------------------------------------------------------------------
0CB5                FRMEVL:   
0CB5   A6 C3                  LDX   TXTPTR   
0CB7   D0 02                  BNE   L2C4E   
0CB9   C6 C4                  DEC   TXTPTR+1   
0CBB                L2C4E:    
0CBB   C6 C3                  DEC   TXTPTR   
0CBD   A2 00                  LDX   #$00   
0CBF   24                     DB   $24   
0CC0                FRMEVL1:   
0CC0   48                     PHA   
0CC1   8A                     TXA   
0CC2   48                     PHA   
0CC3   A9 01                  LDA   #$01   
0CC5   20 12 04               JSR   CHKMEM   
0CC8   20 94 0D               JSR   FRM_ELEMENT   
0CCB   A9 00                  LDA   #$00   
0CCD   85 9B                  STA   CPRTYP   
0CCF                FRMEVL2:   
0CCF   20 C2 00               JSR   CHRGOT   
0CD2                L2C65:    
0CD2   38                     SEC   
0CD3   E9 AA                  SBC   #TOKEN_GREATER   
0CD5   90 17                  BCC   L2C81   
0CD7   C9 03                  CMP   #$03   
0CD9   B0 13                  BCS   L2C81   
0CDB   C9 01                  CMP   #$01   
0CDD   2A                     ROL   ;a
0CDE   49 01                  EOR   #$01   
0CE0   45 9B                  EOR   CPRTYP   
0CE2   C5 9B                  CMP   CPRTYP   
0CE4   90 61                  BCC   SNTXERR   
0CE6   85 9B                  STA   CPRTYP   
0CE8   20 BC 00               JSR   CHRGET   
0CEB   4C D2 0C               JMP   L2C65   
0CEE                L2C81:    
0CEE   A6 9B                  LDX   CPRTYP   
0CF0   D0 2C                  BNE   FRM_RELATIONAL   
0CF2   B0 78                  BCS   L2D02   
0CF4   69 07                  ADC   #$07   
0CF6   90 74                  BCC   L2D02   
0CF8   65 5F                  ADC   VALTYP   
0CFA   D0 03                  BNE   L2C92   
0CFC   4C 41 14               JMP   CAT   
0CFF                L2C92:    
0CFF   69 FF                  ADC   #$FF   
0D01   85 71                  STA   INDEX   
0D03   0A                     ASL   ;a
0D04   65 71                  ADC   INDEX   
0D06   A8                     TAY   
0D07                FRM_PRECEDENCE_TEST:   
0D07   68                     PLA   
0D08   D9 66 02               CMP   MATHTBL,y   
0D0B   B0 64                  BCS   FRM_PERFORM1   
0D0D   20 A4 0C               JSR   CHKNUM   
0D10                L2CA3:    
0D10   48                     PHA   
0D11                L2CA4:    
0D11   20 37 0D               JSR   FRM_RECURSE   
0D14   68                     PLA   
0D15   A4 99                  LDY   LASTOP   
0D17   10 17                  BPL   PREFNC   
0D19   AA                     TAX   
0D1A   F0 53                  BEQ   GOEX   
0D1C   D0 5C                  BNE   FRM_PERFORM2   
0D1E                          ; ----------------------------------------------------------------------------
0D1E                          ; FOUND ONE OR MORE RELATIONAL OPERATORS <,=,>
0D1E                          ; ----------------------------------------------------------------------------
0D1E                FRM_RELATIONAL:   
0D1E   46 5F                  LSR   VALTYP   
0D20   8A                     TXA   
0D21   2A                     ROL   ;a
0D22   A6 C3                  LDX   TXTPTR   
0D24   D0 02                  BNE   L2CBB   
0D26   C6 C4                  DEC   TXTPTR+1   
0D28                L2CBB:    
0D28   C6 C3                  DEC   TXTPTR   
0D2A   A0 1B                  LDY   #$1B   
0D2C   85 9B                  STA   CPRTYP   
0D2E   D0 D7                  BNE   FRM_PRECEDENCE_TEST   
0D30                PREFNC:   
0D30   D9 66 02               CMP   MATHTBL,y   
0D33   B0 45                  BCS   FRM_PERFORM2   
0D35   90 D9                  BCC   L2CA3   
0D37                          ; ----------------------------------------------------------------------------
0D37                          ; STACK THIS OPERATION AND CALL FRMEVL FOR
0D37                          ; ANOTHER ONE
0D37                          ; ----------------------------------------------------------------------------
0D37                FRM_RECURSE:   
0D37   B9 68 02               LDA   MATHTBL+2,y   
0D3A   48                     PHA   
0D3B   B9 67 02               LDA   MATHTBL+1,y   
0D3E   48                     PHA   
0D3F   20 4A 0D               JSR   FRM_STACK1   
0D42   A5 9B                  LDA   CPRTYP   
0D44   4C C0 0C               JMP   FRMEVL1   
0D47                SNTXERR:   
0D47   4C 00 0E               JMP   SYNERR   
0D4A                          ; ----------------------------------------------------------------------------
0D4A                          ; STACK (FAC)
0D4A                          ; THREE ENTRY POINTS:
0D4A                          ;   1, FROM FRMEVL
0D4A                          ; 2, FROM "STEP"
0D4A                          ; 3, FROM "FOR"
0D4A                          ; ----------------------------------------------------------------------------
0D4A                FRM_STACK1:   
0D4A   A5 B0                  LDA   FACSIGN   
0D4C   BE 66 02               LDX   MATHTBL,y   
0D4F                          ; ----------------------------------------------------------------------------
0D4F                          ; ENTER HERE FROM "STEP", TO PUSH STEP SIGN AND VALUE
0D4F                          ; ----------------------------------------------------------------------------
0D4F                FRM_STACK2:   
0D4F   A8                     TAY   
0D50   68                     PLA   
0D51   85 71                  STA   INDEX   
0D53   E6 71                  INC   INDEX   ; bug: assumes not on page boundary
0D55                          ; bug exists on AppleSoft II
0D55   68                     PLA   
0D56   85 72                  STA   INDEX+1   
0D58   98                     TYA   
0D59   48                     PHA   
0D5A                          ; ----------------------------------------------------------------------------
0D5A                          ; ENTER HERE FROM "FOR", WITH (INDEX) = STEP,
0D5A                          ; TO PUSH INITIAL VALUE OF "FOR" VARIABLE
0D5A                          ; ----------------------------------------------------------------------------
0D5A                FRM_STACK3:   
0D5A   20 AE 19               JSR   ROUND_FAC   
0D5D   A5 AF                  LDA   FAC+3   
0D5F   48                     PHA   
0D60   A5 AE                  LDA   FAC+2   
0D62   48                     PHA   
0D63   A5 AD                  LDA   FAC+1   
0D65   48                     PHA   
0D66   A5 AC                  LDA   FAC   
0D68   48                     PHA   
0D69   6C 71 00               JMP   (INDEX)   
0D6C                L2D02:    
0D6C   A0 FF                  LDY   #$FF   
0D6E   68                     PLA   
0D6F                GOEX:     
0D6F   F0 20                  BEQ   EXIT   
0D71                          ; ----------------------------------------------------------------------------
0D71                          ; PERFORM STACKED OPERATION
0D71                          ; 
0D71                          ; (A) = PRECEDENCE BYTE
0D71                          ; STACK:  1 -- CPRMASK
0D71                          ; 5 -- (ARG)
0D71                          ; 2 -- ADDR OF PERFORMER
0D71                          ; ----------------------------------------------------------------------------
0D71                FRM_PERFORM1:   
0D71   C9 64                  CMP   #$64   
0D73   F0 03                  BEQ   L2D0E   
0D75   20 A4 0C               JSR   CHKNUM   
0D78                L2D0E:    
0D78   84 99                  STY   LASTOP   
0D7A                FRM_PERFORM2:   
0D7A   68                     PLA   
0D7B   4A                     LSR   ;a
0D7C   85 63                  STA   CPRMASK   
0D7E   68                     PLA   
0D7F   85 B3                  STA   ARG   
0D81   68                     PLA   
0D82   85 B4                  STA   ARG+1   
0D84   68                     PLA   
0D85   85 B5                  STA   ARG+2   
0D87   68                     PLA   
0D88   85 B6                  STA   ARG+3   
0D8A   68                     PLA   
0D8B   85 B7                  STA   ARGSIGN   
0D8D   45 B0                  EOR   FACSIGN   
0D8F   85 B8                  STA   SGNCPR   
0D91                EXIT:     
0D91   A5 AC                  LDA   FAC   
0D93   60                     RTS   
0D94                          ; ----------------------------------------------------------------------------
0D94                          ; GET ELEMENT IN EXPRESSION
0D94                          ; 
0D94                          ; GET VALUE OF VARIABLE OR NUMBER AT TXTPNT, OR POINT
0D94                          ; TO STRING DESCRIPTOR IF A STRING, AND PUT IN FAC.
0D94                          ; ----------------------------------------------------------------------------
0D94                FRM_ELEMENT:   
0D94   A9 00                  LDA   #$00   
0D96   85 5F                  STA   VALTYP   
0D98                L2D31:    
0D98   20 BC 00               JSR   CHRGET   
0D9B   B0 03                  BCS   L2D39   
0D9D                L2D36:    
0D9D   4C 7B 1A               JMP   FIN   
0DA0                L2D39:    
0DA0   20 75 0F               JSR   ISLETC   
0DA3   B0 67                  BCS   FRM_VARIABLE   
0DA5                CON_PI:   
0DA5   C9 2E                  CMP   #$2E   
0DA7   F0 F4                  BEQ   L2D36   
0DA9   C9 A4                  CMP   #TOKEN_MINUS   
0DAB   F0 58                  BEQ   MIN   
0DAD   C9 A3                  CMP   #TOKEN_PLUS   
0DAF   F0 E7                  BEQ   L2D31   
0DB1   C9 22                  CMP   #$22   
0DB3   D0 0F                  BNE   NOT_   
0DB5                          ; ----------------------------------------------------------------------------
0DB5                          ; STRING CONSTANT ELEMENT
0DB5                          ; 
0DB5                          ; SET Y,A = (TXTPTR)+CARRY
0DB5                          ; ----------------------------------------------------------------------------
0DB5                STRTXT:   
0DB5   A5 C3                  LDA   TXTPTR   
0DB7   A4 C4                  LDY   TXTPTR+1   
0DB9   69 00                  ADC   #$00   
0DBB   90 01                  BCC   L2D57   
0DBD   C8                     INY   
0DBE                L2D57:    
0DBE   20 A2 12               JSR   STRLIT   
0DC1   4C E7 15               JMP   POINT   
0DC4                          ; ----------------------------------------------------------------------------
0DC4                          ; "NOT" FUNCTION
0DC4                          ; IF FAC=0, RETURN FAC=1
0DC4                          ; IF FAC<>0, RETURN FAC=0
0DC4                          ; ----------------------------------------------------------------------------
0DC4                NOT_:     
0DC4   C9 A1                  CMP   #TOKEN_NOT   
0DC6   D0 13                  BNE   L2D74   
0DC8   A0 18                  LDY   #$18   
0DCA   D0 3B                  BNE   EQUL   
0DCC                          ; ----------------------------------------------------------------------------
0DCC                          ; COMPARISON FOR EQUALITY (= OPERATOR)
0DCC                          ; ALSO USED TO EVALUATE "NOT" FUNCTION
0DCC                          ; ----------------------------------------------------------------------------
0DCC                EQUOP:    
0DCC   20 F9 0F               JSR   AYINT   
0DCF   A5 AF                  LDA   FAC_LAST   
0DD1   49 FF                  EOR   #$FF   
0DD3   A8                     TAY   
0DD4   A5 AE                  LDA   FAC_LAST-1   
0DD6   49 FF                  EOR   #$FF   
0DD8   4C B5 11               JMP   GIVAYF   
0DDB                L2D74:    
0DDB   C9 9E                  CMP   #TOKEN_FN   
0DDD   D0 03                  BNE   L2D7B   
0DDF   4C 12 12               JMP   L31F3   
0DE2                L2D7B:    
0DE2   C9 AD                  CMP   #TOKEN_SGN   
0DE4   90 03                  BCC   PARCHK   
0DE6   4C 1B 0E               JMP   UNARY   
0DE9                          ; ----------------------------------------------------------------------------
0DE9                          ; EVALUATE "(EXPRESSION)"
0DE9                          ; ----------------------------------------------------------------------------
0DE9                PARCHK:   
0DE9   20 F2 0D               JSR   CHKOPN   
0DEC   20 B5 0C               JSR   FRMEVL   
0DEF                CHKCLS:   
0DEF   A9 29                  LDA   #$29   
0DF1   2C                     DB   $2C   
0DF2                CHKOPN:   
0DF2   A9 28                  LDA   #$28   
0DF4   2C                     DB   $2C   
0DF5                CHKCOM:   
0DF5   A9 2C                  LDA   #$2C   
0DF7                          ; ----------------------------------------------------------------------------
0DF7                          ; UNLESS CHAR AT TXTPTR = (A), SYNTAX ERROR
0DF7                          ; ----------------------------------------------------------------------------
0DF7                SYNCHR:   ; XXX all CBM code calls SYNCHR instead of CHKCOM
0DF7   A0 00                  LDY   #$00   
0DF9   D1 C3                  CMP   (TXTPTR),y   
0DFB   D0 03                  BNE   SYNERR   
0DFD   4C BC 00               JMP   CHRGET   
0E00                          ; ----------------------------------------------------------------------------
0E00                SYNERR:   
0E00   A2 02                  LDX   #ERR_SYNTAX   
0E02   4C 4E 04               JMP   ERROR   
0E05                          ; ----------------------------------------------------------------------------
0E05                MIN:      
0E05   A0 15                  LDY   #$15   
0E07                EQUL:     
0E07   68                     PLA   
0E08   68                     PLA   
0E09   4C 11 0D               JMP   L2CA4   
0E0C                          ; ----------------------------------------------------------------------------
0E0C                FRM_VARIABLE:   
0E0C   20 FF 0E               JSR   PTRGET   
0E0F                FRM_VARIABLE_CALL:   EQU   $-1   
0E0F   85 AE                  STA   FAC_LAST-1   
0E11   84 AF                  STY   FAC_LAST   
0E13   A6 5F                  LDX   VALTYP   
0E15   F0 01                  BEQ   L2DB1   
0E17                          ; bugfix?
0E17                          ; fixed on AppleSoft II, not on any CBM
0E17   60                     RTS   
0E18                L2DB1:    
0E18   4C 3F 19               JMP   LOAD_FAC_FROM_YA   
0E1B                          ; ----------------------------------------------------------------------------
0E1B                UNARY:    
0E1B   0A                     ASL   ;a
0E1C   48                     PHA   
0E1D   AA                     TAX   
0E1E   20 BC 00               JSR   CHRGET   
0E21   E0 81                  CPX   #((TOKEN_LEFTSTR*2-1)&$ff)   
0E23   90 20                  BCC   L2DEF   
0E25   20 F2 0D               JSR   CHKOPN   
0E28   20 B5 0C               JSR   FRMEVL   
0E2B   20 F5 0D               JSR   CHKCOM   
0E2E   20 A6 0C               JSR   CHKSTR   
0E31   68                     PLA   
0E32   AA                     TAX   
0E33   A5 AF                  LDA   FAC_LAST   
0E35   48                     PHA   
0E36   A5 AE                  LDA   FAC_LAST-1   
0E38   48                     PHA   
0E39   8A                     TXA   
0E3A   48                     PHA   
0E3B   20 A2 15               JSR   GETBYT   
0E3E   68                     PLA   
0E3F   A8                     TAY   
0E40   8A                     TXA   
0E41   48                     PHA   
0E42   4C 4A 0E               JMP   L2DF4   
0E45                L2DEF:    
0E45   20 E9 0D               JSR   PARCHK   
0E48   68                     PLA   
0E49   A8                     TAY   
0E4A                L2DF4:    
0E4A   B9 DE 01               LDA   UNFNC+($80-TOKEN_SGN)*2,y   
0E4D   85 A2                  STA   JMPADRS+1   
0E4F   B9 DF 01               LDA   UNFNC+($80-TOKEN_SGN)*2+1,y   
0E52   85 A3                  STA   JMPADRS+2   
0E54   20 A1 00               JSR   JMPADRS   
0E57   4C A4 0C               JMP   CHKNUM   
0E5A                          ; ----------------------------------------------------------------------------
0E5A                OR:       
0E5A   A0 FF                  LDY   #$FF   
0E5C   2C                     DB   $2C   
0E5D                          ; ----------------------------------------------------------------------------
0E5D                TAND:     
0E5D   A0 00                  LDY   #$00   
0E5F   84 5D                  STY   EOLPNTR   
0E61   20 F9 0F               JSR   AYINT   
0E64   A5 AE                  LDA   FAC_LAST-1   
0E66   45 5D                  EOR   EOLPNTR   
0E68   85 5B                  STA   CHARAC   
0E6A   A5 AF                  LDA   FAC_LAST   
0E6C   45 5D                  EOR   EOLPNTR   
0E6E   85 5C                  STA   ENDCHR   
0E70   20 8F 19               JSR   COPY_ARG_TO_FAC   
0E73   20 F9 0F               JSR   AYINT   
0E76   A5 AF                  LDA   FAC_LAST   
0E78   45 5D                  EOR   EOLPNTR   
0E7A   25 5C                  AND   ENDCHR   
0E7C   45 5D                  EOR   EOLPNTR   
0E7E   A8                     TAY   
0E7F   A5 AE                  LDA   FAC_LAST-1   
0E81   45 5D                  EOR   EOLPNTR   
0E83   25 5B                  AND   CHARAC   
0E85   45 5D                  EOR   EOLPNTR   
0E87   4C B5 11               JMP   GIVAYF   
0E8A                          ; ----------------------------------------------------------------------------
0E8A                          ; PERFORM RELATIONAL OPERATIONS
0E8A                          ; ----------------------------------------------------------------------------
0E8A                RELOPS:   
0E8A   20 A7 0C               JSR   CHKVAL   
0E8D   B0 13                  BCS   STRCMP   
0E8F   A5 B7                  LDA   ARGSIGN   
0E91   09 7F                  ORA   #$7F   
0E93   25 B4                  AND   ARG+1   
0E95   85 B4                  STA   ARG+1   
0E97   A9 B3                  LDA   #<ARG   
0E99   A0 00                  LDY   #$00   
0E9B   20 EC 19               JSR   FCOMP   
0E9E   AA                     TAX   
0E9F   4C D5 0E               JMP   NUMCMP   
0EA2                          ; ----------------------------------------------------------------------------
0EA2                          ; STRING COMPARISON
0EA2                          ; ----------------------------------------------------------------------------
0EA2                STRCMP:   
0EA2   A9 00                  LDA   #$00   
0EA4   85 5F                  STA   VALTYP   
0EA6   C6 9B                  DEC   CPRTYP   
0EA8   20 AA 14               JSR   FREFAC   
0EAB   85 AC                  STA   FAC   
0EAD   86 AD                  STX   FAC+1   
0EAF   84 AE                  STY   FAC+2   
0EB1   A5 B5                  LDA   ARG_LAST-1   
0EB3   A4 B6                  LDY   ARG_LAST   
0EB5   20 AE 14               JSR   FRETMP   
0EB8   86 B5                  STX   ARG_LAST-1   
0EBA   84 B6                  STY   ARG_LAST   
0EBC   AA                     TAX   
0EBD   38                     SEC   
0EBE   E5 AC                  SBC   FAC   
0EC0   F0 08                  BEQ   L2E74   
0EC2   A9 01                  LDA   #$01   
0EC4   90 04                  BCC   L2E74   
0EC6   A6 AC                  LDX   FAC   
0EC8   A9 FF                  LDA   #$FF   
0ECA                L2E74:    
0ECA   85 B0                  STA   FACSIGN   
0ECC   A0 FF                  LDY   #$FF   
0ECE   E8                     INX   
0ECF                STRCMP1:   
0ECF   C8                     INY   
0ED0   CA                     DEX   
0ED1   D0 07                  BNE   L2E84   
0ED3   A6 B0                  LDX   FACSIGN   
0ED5                NUMCMP:   
0ED5   30 0F                  BMI   CMPDONE   
0ED7   18                     CLC   
0ED8   90 0C                  BCC   CMPDONE   
0EDA                L2E84:    
0EDA   B1 B5                  LDA   (ARG_LAST-1),y   
0EDC   D1 AD                  CMP   (FAC+1),y   
0EDE   F0 EF                  BEQ   STRCMP1   
0EE0   A2 FF                  LDX   #$FF   
0EE2   B0 02                  BCS   CMPDONE   
0EE4   A2 01                  LDX   #$01   
0EE6                CMPDONE:   
0EE6   E8                     INX   
0EE7   8A                     TXA   
0EE8   2A                     ROL   a   
0EE9   25 63                  AND   CPRMASK   
0EEB   F0 02                  BEQ   L2E99   
0EED   A9 FF                  LDA   #$FF   
0EEF                L2E99:    
0EEF   4C CF 19               JMP   FLOAT   
0EF2                          ; ----------------------------------------------------------------------------
0EF2                          ; "DIM" STATEMENT
0EF2                          ; ----------------------------------------------------------------------------
0EF2                NXDIM:    
0EF2   20 F5 0D               JSR   CHKCOM   
0EF5                DIM:      
0EF5   AA                     TAX   
0EF6   20 04 0F               JSR   PTRGET2   
0EF9   20 C2 00               JSR   CHRGOT   
0EFC   D0 F4                  BNE   NXDIM   
0EFE   60                     RTS   
0EFF                          ; ----------------------------------------------------------------------------
0EFF                          ; PTRGET -- GENERAL VARIABLE SCAN
0EFF                          ; 
0EFF                          ; SCANS VARIABLE NAME AT TXTPTR, AND SEARCHES THE
0EFF                          ; VARTAB AND ARYTAB FOR THE NAME.
0EFF                          ; IF NOT FOUND, CREATE VARIABLE OF APPROPRIATE TYPE.
0EFF                          ; RETURN WITH ADDRESS IN VARPNT AND Y,A
0EFF                          ; 
0EFF                          ; ACTUAL ACTIVITY CONTROLLED SOMEWHAT BY TWO FLAGS:
0EFF                          ; DIMFLG -- NONZERO IF CALLED FROM "DIM"
0EFF                          ;   ELSE = 0
0EFF                          ; 
0EFF                          ; SUBFLG -- = $00
0EFF                          ;   = $40 IF CALLED FROM "GETARYPT"
0EFF                          ; ----------------------------------------------------------------------------
0EFF                PTRGET:   
0EFF   A2 00                  LDX   #$00   
0F01   20 C2 00               JSR   CHRGOT   
0F04                PTRGET2:   
0F04   86 5E                  STX   DIMFLG   
0F06                PTRGET3:   
0F06   85 93                  STA   VARNAM   
0F08   20 C2 00               JSR   CHRGOT   
0F0B   20 75 0F               JSR   ISLETC   
0F0E   B0 03                  BCS   NAMOK   
0F10   4C 00 0E               JMP   SYNERR   
0F13                NAMOK:    
0F13   A2 00                  LDX   #$00   
0F15   86 5F                  STX   VALTYP   
0F17   20 BC 00               JSR   CHRGET   
0F1A   90 05                  BCC   L2ECD   
0F1C   20 75 0F               JSR   ISLETC   
0F1F   90 0B                  BCC   L2ED8   
0F21                L2ECD:    
0F21   AA                     TAX   
0F22                L2ECE:    
0F22   20 BC 00               JSR   CHRGET   
0F25   90 FB                  BCC   L2ECE   
0F27   20 75 0F               JSR   ISLETC   
0F2A   B0 F6                  BCS   L2ECE   
0F2C                L2ED8:    
0F2C   C9 24                  CMP   #$24   
0F2E   D0 0B                  BNE   L2EF9   
0F30   A9 FF                  LDA   #$FF   
0F32   85 5F                  STA   VALTYP   
0F34   8A                     TXA   
0F35   09 80                  ORA   #$80   
0F37   AA                     TAX   
0F38   20 BC 00               JSR   CHRGET   
0F3B                L2EF9:    
0F3B   86 94                  STX   VARNAM+1   
0F3D   38                     SEC   
0F3E   05 61                  ORA   SUBFLG   
0F40   E9 28                  SBC   #$28   
0F42   D0 03                  BNE   L2F05   
0F44   4C 0B 10               JMP   ARRAY   
0F47                L2F05:    
0F47   A9 00                  LDA   #$00   
0F49   85 61                  STA   SUBFLG   
0F4B   A5 7B                  LDA   VARTAB   
0F4D   A6 7C                  LDX   VARTAB+1   
0F4F   A0 00                  LDY   #$00   
0F51                L2F0F:    
0F51   86 AB                  STX   LOWTR+1   
0F53                L2F11:    
0F53   85 AA                  STA   LOWTR   
0F55   E4 7E                  CPX   ARYTAB+1   
0F57   D0 04                  BNE   L2F1B   
0F59   C5 7D                  CMP   ARYTAB   
0F5B   F0 22                  BEQ   NAMENOTFOUND   
0F5D                L2F1B:    
0F5D   A5 93                  LDA   VARNAM   
0F5F   D1 AA                  CMP   (LOWTR),y   
0F61   D0 08                  BNE   L2F29   
0F63   A5 94                  LDA   VARNAM+1   
0F65   C8                     INY   
0F66   D1 AA                  CMP   (LOWTR),y   
0F68   F0 61                  BEQ   SET_VARPNT_AND_YA   
0F6A   88                     DEY   
0F6B                L2F29:    
0F6B   18                     CLC   
0F6C   A5 AA                  LDA   LOWTR   
0F6E   69 06                  ADC   #BYTES_PER_VARIABLE   
0F70   90 E1                  BCC   L2F11   
0F72   E8                     INX   
0F73   D0 DC                  BNE   L2F0F   
0F75                          ; ----------------------------------------------------------------------------
0F75                          ; CHECK IF (A) IS ASCII LETTER A-Z
0F75                          ; 
0F75                          ; RETURN CARRY = 1 IF A-Z
0F75                          ; = 0 IF NOT
0F75                          ; ----------------------------------------------------------------------------
0F75                ISLETC:   
0F75   C9 41                  CMP   #$41   
0F77   90 05                  BCC   L2F3C   
0F79   E9 5B                  SBC   #$5B   
0F7B   38                     SEC   
0F7C   E9 A5                  SBC   #$A5   
0F7E                L2F3C:    
0F7E   60                     RTS   
0F7F                          ; ----------------------------------------------------------------------------
0F7F                          ; VARIABLE NOT FOUND, SO MAKE ONE
0F7F                          ; ----------------------------------------------------------------------------
0F7F                NAMENOTFOUND:   
0F7F   68                     PLA   
0F80   48                     PHA   
0F81   C9 0E                  CMP   #<FRM_VARIABLE_CALL   
0F83   D0 07                  BNE   MAKENEWVARIABLE   
0F85   A9 8A                  LDA   #<C_ZERO   
0F87   A0 0F                  LDY   #>C_ZERO   
0F89   60                     RTS   
0F8A                          ; ----------------------------------------------------------------------------
0F8A                C_ZERO:   
0F8A   00 00                  DB   $00,$00   
0F8C                          ; ----------------------------------------------------------------------------
0F8C                          ; MAKE A NEW SIMPLE VARIABLE
0F8C                          ; 
0F8C                          ; MOVE ARRAYS UP 7 BYTES TO MAKE ROOM FOR NEW VARIABLE
0F8C                          ; ENTER 7-BYTE VARIABLE DATA IN THE HOLE
0F8C                          ; ----------------------------------------------------------------------------
0F8C                MAKENEWVARIABLE:   
0F8C   A5 7D                  LDA   ARYTAB   
0F8E   A4 7E                  LDY   ARYTAB+1   
0F90   85 AA                  STA   LOWTR   
0F92   84 AB                  STY   LOWTR+1   
0F94   A5 7F                  LDA   STREND   
0F96   A4 80                  LDY   STREND+1   
0F98   85 A6                  STA   HIGHTR   
0F9A   84 A7                  STY   HIGHTR+1   
0F9C   18                     CLC   
0F9D   69 06                  ADC   #BYTES_PER_VARIABLE   
0F9F   90 01                  BCC   L2F68   
0FA1   C8                     INY   
0FA2                L2F68:    
0FA2   85 A4                  STA   HIGHDS   
0FA4   84 A5                  STY   HIGHDS+1   
0FA6   20 CF 03               JSR   BLTU   
0FA9   A5 A4                  LDA   HIGHDS   
0FAB   A4 A5                  LDY   HIGHDS+1   
0FAD   C8                     INY   
0FAE   85 7D                  STA   ARYTAB   
0FB0   84 7E                  STY   ARYTAB+1   
0FB2   A0 00                  LDY   #$00   
0FB4   A5 93                  LDA   VARNAM   
0FB6   91 AA                  STA   (LOWTR),y   
0FB8   C8                     INY   
0FB9   A5 94                  LDA   VARNAM+1   
0FBB   91 AA                  STA   (LOWTR),y   
0FBD   A9 00                  LDA   #$00   
0FBF   C8                     INY   
0FC0   91 AA                  STA   (LOWTR),y   
0FC2   C8                     INY   
0FC3   91 AA                  STA   (LOWTR),y   
0FC5   C8                     INY   
0FC6   91 AA                  STA   (LOWTR),y   
0FC8   C8                     INY   
0FC9   91 AA                  STA   (LOWTR),y   
0FCB                          ; ----------------------------------------------------------------------------
0FCB                          ; PUT ADDRESS OF VALUE OF VARIABLE IN VARPNT AND Y,A
0FCB                          ; ----------------------------------------------------------------------------
0FCB                SET_VARPNT_AND_YA:   
0FCB   A5 AA                  LDA   LOWTR   
0FCD   18                     CLC   
0FCE   69 02                  ADC   #$02   
0FD0   A4 AB                  LDY   LOWTR+1   
0FD2   90 01                  BCC   L2F9E   
0FD4   C8                     INY   
0FD5                L2F9E:    
0FD5   85 95                  STA   VARPNT   
0FD7   84 96                  STY   VARPNT+1   
0FD9   60                     RTS   
0FDA                          ; ----------------------------------------------------------------------------
0FDA                          ; COMPUTE ADDRESS OF FIRST VALUE IN ARRAY
0FDA                          ; ARYPNT = (LOWTR) + #DIMS*2 + 5
0FDA                          ; ----------------------------------------------------------------------------
0FDA                GETARY:   
0FDA   A5 5D                  LDA   EOLPNTR   
0FDC   0A                     ASL   a   
0FDD   69 05                  ADC   #$05   
0FDF   65 AA                  ADC   LOWTR   
0FE1   A4 AB                  LDY   LOWTR+1   
0FE3   90 01                  BCC   L2FAF   
0FE5   C8                     INY   
0FE6                L2FAF:    
0FE6   85 A4                  STA   HIGHDS   
0FE8   84 A5                  STY   HIGHDS+1   
0FEA   60                     RTS   
0FEB                          ; ----------------------------------------------------------------------------
0FEB                NEG32768:   
0FEB   90 80 00 00            DB   $90,$80,$00,$00   
0FEF                          ; ----------------------------------------------------------------------------
0FEF                          ; EVALUATE NUMERIC FORMULA AT TXTPTR
0FEF                          ; CONVERTING RESULT TO INTEGER 0 <= X <= 32767
0FEF                          ; IN FAC+3,4
0FEF                          ; ----------------------------------------------------------------------------
0FEF                MAKINT:   
0FEF   20 BC 00               JSR   CHRGET   
0FF2   20 A1 0C               JSR   FRMNUM   
0FF5                          ; ----------------------------------------------------------------------------
0FF5                          ; CONVERT FAC TO INTEGER
0FF5                          ; MUST BE POSITIVE AND LESS THAN 32768
0FF5                          ; ----------------------------------------------------------------------------
0FF5                MKINT:    
0FF5   A5 B0                  LDA   FACSIGN   
0FF7   30 0D                  BMI   MI1   
0FF9                          ; ----------------------------------------------------------------------------
0FF9                          ; CONVERT FAC TO INTEGER
0FF9                          ; MUST BE -32767 <= FAC <= 32767
0FF9                          ; ----------------------------------------------------------------------------
0FF9                AYINT:    
0FF9   A5 AC                  LDA   FAC   
0FFB   C9 90                  CMP   #$90   
0FFD   90 09                  BCC   MI2   
0FFF   A9 EB                  LDA   #<NEG32768   
1001   A0 0F                  LDY   #>NEG32768   
1003   20 EC 19               JSR   FCOMP   
1006                MI1:      
1006   D0 74                  BNE   IQERR   
1008                MI2:      
1008   4C 25 1A               JMP   QINT   
100B                          ; ----------------------------------------------------------------------------
100B                          ; LOCATE ARRAY ELEMENT OR CREATE AN ARRAY
100B                          ; ----------------------------------------------------------------------------
100B                ARRAY:    
100B   A5 5E                  LDA   DIMFLG   
100D   48                     PHA   
100E   A5 5F                  LDA   VALTYP   
1010   48                     PHA   
1011   A0 00                  LDY   #$00   
1013                L2FDE:    
1013   98                     TYA   
1014   48                     PHA   
1015   A5 94                  LDA   VARNAM+1   
1017   48                     PHA   
1018   A5 93                  LDA   VARNAM   
101A   48                     PHA   
101B   20 EF 0F               JSR   MAKINT   
101E   68                     PLA   
101F   85 93                  STA   VARNAM   
1021   68                     PLA   
1022   85 94                  STA   VARNAM+1   
1024   68                     PLA   
1025   A8                     TAY   
1026   BA                     TSX   
1027   BD 02 01               LDA   STACK+2,x   
102A   48                     PHA   
102B   BD 01 01               LDA   STACK+1,x   
102E   48                     PHA   
102F   A5 AE                  LDA   FAC_LAST-1   
1031   9D 02 01               STA   STACK+2,x   
1034   A5 AF                  LDA   FAC_LAST   
1036   9D 01 01               STA   STACK+1,x   
1039   C8                     INY   
103A   20 C2 00               JSR   CHRGOT   
103D   C9 2C                  CMP   #$2C   
103F   F0 D2                  BEQ   L2FDE   
1041   84 5D                  STY   EOLPNTR   
1043   20 EF 0D               JSR   CHKCLS   
1046   68                     PLA   
1047   85 5F                  STA   VALTYP   
1049   68                     PLA   
104A   85 5E                  STA   DIMFLG   
104C                          ; ----------------------------------------------------------------------------
104C                          ; SEARCH ARRAY TABLE FOR THIS ARRAY NAME
104C                          ; ----------------------------------------------------------------------------
104C   A6 7D                  LDX   ARYTAB   
104E   A5 7E                  LDA   ARYTAB+1   
1050                L301F:    
1050   86 AA                  STX   LOWTR   
1052   85 AB                  STA   LOWTR+1   
1054   C5 80                  CMP   STREND+1   
1056   D0 04                  BNE   L302B   
1058   E4 7F                  CPX   STREND   
105A   F0 39                  BEQ   MAKE_NEW_ARRAY   
105C                L302B:    
105C   A0 00                  LDY   #$00   
105E   B1 AA                  LDA   (LOWTR),y   
1060   C8                     INY   
1061   C5 93                  CMP   VARNAM   
1063   D0 06                  BNE   L303A   
1065   A5 94                  LDA   VARNAM+1   
1067   D1 AA                  CMP   (LOWTR),y   
1069   F0 16                  BEQ   USE_OLD_ARRAY   
106B                L303A:    
106B   C8                     INY   
106C   B1 AA                  LDA   (LOWTR),y   
106E   18                     CLC   
106F   65 AA                  ADC   LOWTR   
1071   AA                     TAX   
1072   C8                     INY   
1073   B1 AA                  LDA   (LOWTR),y   
1075   65 AB                  ADC   LOWTR+1   
1077   90 D7                  BCC   L301F   
1079                          ; ----------------------------------------------------------------------------
1079                          ; ERROR:  BAD SUBSCRIPTS
1079                          ; ----------------------------------------------------------------------------
1079                SUBERR:   
1079   A2 10                  LDX   #ERR_BADSUBS   
107B   2C                     DB   $2C   
107C                          ; ----------------------------------------------------------------------------
107C                          ; ERROR:  ILLEGAL QUANTITY
107C                          ; ----------------------------------------------------------------------------
107C                IQERR:    
107C   A2 08                  LDX   #ERR_ILLQTY   
107E                JER:      
107E   4C 4E 04               JMP   ERROR   
1081                          ; ----------------------------------------------------------------------------
1081                          ; FOUND THE ARRAY
1081                          ; ----------------------------------------------------------------------------
1081                USE_OLD_ARRAY:   
1081   A2 12                  LDX   #ERR_REDIMD   
1083   A5 5E                  LDA   DIMFLG   
1085   D0 F7                  BNE   JER   
1087   20 DA 0F               JSR   GETARY   
108A   A5 5D                  LDA   EOLPNTR   
108C   A0 04                  LDY   #$04   
108E   D1 AA                  CMP   (LOWTR),y   
1090   D0 E7                  BNE   SUBERR   
1092   4C 18 11               JMP   FIND_ARRAY_ELEMENT   
1095                          ; ----------------------------------------------------------------------------
1095                          ; CREATE A NEW ARRAY, UNLESS CALLED FROM GETARYPT
1095                          ; ----------------------------------------------------------------------------
1095                MAKE_NEW_ARRAY:   
1095   20 DA 0F               JSR   GETARY   
1098   20 1F 04               JSR   REASON   
109B   A9 00                  LDA   #$00   
109D   A8                     TAY   
109E   85 BB                  STA   STRNG2+1   
10A0   A2 04                  LDX   #BYTES_PER_ELEMENT   
10A2   86 BA                  STX   STRNG2   
10A4   A5 93                  LDA   VARNAM   
10A6   91 AA                  STA   (LOWTR),y   
10A8   C8                     INY   
10A9   A5 94                  LDA   VARNAM+1   
10AB   91 AA                  STA   (LOWTR),y   
10AD   A5 5D                  LDA   EOLPNTR   
10AF   C8                     INY   
10B0   C8                     INY   
10B1   C8                     INY   
10B2   91 AA                  STA   (LOWTR),y   
10B4                L308A:    
10B4   A2 0B                  LDX   #$0B   
10B6   A9 00                  LDA   #$00   
10B8   24 5E                  BIT   DIMFLG   
10BA   50 08                  BVC   L309A   
10BC   68                     PLA   
10BD   18                     CLC   
10BE   69 01                  ADC   #$01   
10C0   AA                     TAX   
10C1   68                     PLA   
10C2   69 00                  ADC   #$00   
10C4                L309A:    
10C4   C8                     INY   
10C5   91 AA                  STA   (LOWTR),y   
10C7   C8                     INY   
10C8   8A                     TXA   
10C9   91 AA                  STA   (LOWTR),y   
10CB   20 70 11               JSR   MULTIPLY_SUBSCRIPT   
10CE   86 BA                  STX   STRNG2   
10D0   85 BB                  STA   STRNG2+1   
10D2   A4 71                  LDY   INDEX   
10D4   C6 5D                  DEC   EOLPNTR   
10D6   D0 DC                  BNE   L308A   
10D8   65 A5                  ADC   HIGHDS+1   
10DA   B0 5D                  BCS   GME   
10DC   85 A5                  STA   HIGHDS+1   
10DE   A8                     TAY   
10DF   8A                     TXA   
10E0   65 A4                  ADC   HIGHDS   
10E2   90 03                  BCC   L30BD   
10E4   C8                     INY   
10E5   F0 52                  BEQ   GME   
10E7                L30BD:    
10E7   20 1F 04               JSR   REASON   
10EA   85 7F                  STA   STREND   
10EC   84 80                  STY   STREND+1   
10EE   A9 00                  LDA   #$00   
10F0   E6 BB                  INC   STRNG2+1   
10F2   A4 BA                  LDY   STRNG2   
10F4   F0 05                  BEQ   L30D1   
10F6                L30CC:    
10F6   88                     DEY   
10F7   91 A4                  STA   (HIGHDS),y   
10F9   D0 FB                  BNE   L30CC   
10FB                L30D1:    
10FB   C6 A5                  DEC   HIGHDS+1   
10FD   C6 BB                  DEC   STRNG2+1   
10FF   D0 F5                  BNE   L30CC   
1101   E6 A5                  INC   HIGHDS+1   
1103   38                     SEC   
1104   A5 7F                  LDA   STREND   
1106   E5 AA                  SBC   LOWTR   
1108   A0 02                  LDY   #$02   
110A   91 AA                  STA   (LOWTR),y   
110C   A5 80                  LDA   STREND+1   
110E   C8                     INY   
110F   E5 AB                  SBC   LOWTR+1   
1111   91 AA                  STA   (LOWTR),y   
1113   A5 5E                  LDA   DIMFLG   
1115   D0 58                  BNE   RTS9   
1117   C8                     INY   
1118                          ; ----------------------------------------------------------------------------
1118                          ; FIND SPECIFIED ARRAY ELEMENT
1118                          ; 
1118                          ; (LOWTR),Y POINTS AT # OF DIMS IN ARRAY DESCRIPTOR
1118                          ; THE SUBSCRIPTS ARE ALL ON THE STACK AS INTEGERS
1118                          ; ----------------------------------------------------------------------------
1118                FIND_ARRAY_ELEMENT:   
1118   B1 AA                  LDA   (LOWTR),y   
111A   85 5D                  STA   EOLPNTR   
111C   A9 00                  LDA   #$00   
111E   85 BA                  STA   STRNG2   
1120                L30F6:    
1120   85 BB                  STA   STRNG2+1   
1122   C8                     INY   
1123   68                     PLA   
1124   AA                     TAX   
1125   85 AE                  STA   FAC_LAST-1   
1127   68                     PLA   
1128   85 AF                  STA   FAC_LAST   
112A   D1 AA                  CMP   (LOWTR),y   
112C   90 0E                  BCC   FAE2   
112E   D0 06                  BNE   GSE   
1130   C8                     INY   
1131   8A                     TXA   
1132   D1 AA                  CMP   (LOWTR),y   
1134   90 07                  BCC   FAE3   
1136                          ; ----------------------------------------------------------------------------
1136                GSE:      
1136   4C 79 10               JMP   SUBERR   
1139                GME:      
1139   4C 4C 04               JMP   MEMERR   
113C                          ; ----------------------------------------------------------------------------
113C                FAE2:     
113C   C8                     INY   
113D                FAE3:     
113D   A5 BB                  LDA   STRNG2+1   
113F   05 BA                  ORA   STRNG2   
1141   18                     CLC   
1142   F0 0A                  BEQ   L3124   
1144   20 70 11               JSR   MULTIPLY_SUBSCRIPT   
1147   8A                     TXA   
1148   65 AE                  ADC   FAC_LAST-1   
114A   AA                     TAX   
114B   98                     TYA   
114C   A4 71                  LDY   INDEX   
114E                L3124:    
114E   65 AF                  ADC   FAC_LAST   
1150   86 BA                  STX   STRNG2   
1152   C6 5D                  DEC   EOLPNTR   
1154   D0 CA                  BNE   L30F6   
1156   06 BA                  ASL   STRNG2   
1158   2A                     ROL   a   
1159   B0 DB                  BCS   GSE   
115B   06 BA                  ASL   STRNG2   
115D   2A                     ROL   a   
115E   B0 D6                  BCS   GSE   
1160   A8                     TAY   
1161   A5 BA                  LDA   STRNG2   
1163   65 A4                  ADC   HIGHDS   
1165   85 95                  STA   VARPNT   
1167   98                     TYA   
1168   65 A5                  ADC   HIGHDS+1   
116A   85 96                  STA   VARPNT+1   
116C   A8                     TAY   
116D   A5 95                  LDA   VARPNT   
116F                RTS9:     
116F   60                     RTS   
1170                          ; ----------------------------------------------------------------------------
1170                          ; MULTIPLY (STRNG2) BY ((LOWTR),Y)
1170                          ; LEAVING PRODUCT IN A,X.  (HI-BYTE ALSO IN Y.)
1170                          ; USED ONLY BY ARRAY SUBSCRIPT ROUTINES
1170                          ; ----------------------------------------------------------------------------
1170                MULTIPLY_SUBSCRIPT:   
1170   84 71                  STY   INDEX   
1172   B1 AA                  LDA   (LOWTR),y   
1174   85 76                  STA   RESULT_LAST-2   
1176   88                     DEY   
1177   B1 AA                  LDA   (LOWTR),y   
1179   85 77                  STA   RESULT_LAST-1   
117B   A9 10                  LDA   #$10   
117D   85 A8                  STA   INDX   
117F   A2 00                  LDX   #$00   
1181   A0 00                  LDY   #$00   
1183                L3163:    
1183   8A                     TXA   
1184   0A                     ASL   a   
1185   AA                     TAX   
1186   98                     TYA   
1187   2A                     ROL   a   
1188   A8                     TAY   
1189   B0 AE                  BCS   GME   
118B   06 BA                  ASL   STRNG2   
118D   26 BB                  ROL   STRNG2+1   
118F   90 0B                  BCC   L317C   
1191   18                     CLC   
1192   8A                     TXA   
1193   65 76                  ADC   RESULT_LAST-2   
1195   AA                     TAX   
1196   98                     TYA   
1197   65 77                  ADC   RESULT_LAST-1   
1199   A8                     TAY   
119A   B0 9D                  BCS   GME   
119C                L317C:    
119C   C6 A8                  DEC   INDX   
119E   D0 E3                  BNE   L3163   
11A0   60                     RTS   
11A1                          ; ----------------------------------------------------------------------------
11A1                          ; "FRE" FUNCTION
11A1                          ; 
11A1                          ; COLLECTS GARBAGE AND RETURNS # BYTES OF MEMORY LEFT
11A1                          ; ----------------------------------------------------------------------------
11A1                FRE:      
11A1   A5 5F                  LDA   VALTYP   
11A3   F0 03                  BEQ   L3188   
11A5   20 AA 14               JSR   FREFAC   
11A8                L3188:    
11A8   20 3B 13               JSR   GARBAG   
11AB   38                     SEC   
11AC   A5 81                  LDA   FRETOP   
11AE   E5 7F                  SBC   STREND   
11B0   A8                     TAY   
11B1   A5 82                  LDA   FRETOP+1   
11B3   E5 80                  SBC   STREND+1   
11B5                          ; FALL INTO GIVAYF TO FLOAT THE VALUE
11B5                          ; NOTE THAT VALUES OVER 32767 WILL RETURN AS NEGATIVE
11B5                          ; ----------------------------------------------------------------------------
11B5                          ; FLOAT THE SIGNED INTEGER IN A,Y
11B5                          ; ----------------------------------------------------------------------------
11B5                GIVAYF:   
11B5   A2 00                  LDX   #$00   
11B7   86 5F                  STX   VALTYP   
11B9   85 AD                  STA   FAC+1   
11BB   84 AE                  STY   FAC+2   
11BD   A2 90                  LDX   #$90   
11BF   4C D7 19               JMP   FLOAT1   
11C2                POS:      
11C2   A4 0E                  LDY   POSX   
11C4                          ; ----------------------------------------------------------------------------
11C4                          ; FLOAT (Y) INTO FAC, GIVING VALUE 0-255
11C4                          ; ----------------------------------------------------------------------------
11C4                SNGFLT:   
11C4   A9 00                  LDA   #$00   
11C6   F0 ED                  BEQ   GIVAYF   
11C8                          ; ----------------------------------------------------------------------------
11C8                          ; CHECK FOR DIRECT OR RUNNING MODE
11C8                          ; GIVING ERROR IF DIRECT MODE
11C8                          ; ----------------------------------------------------------------------------
11C8                ERRDIR:   
11C8   A6 88                  LDX   CURLIN+1   
11CA   E8                     INX   
11CB   D0 A2                  BNE   RTS9   
11CD   A2 16                  LDX   #ERR_ILLDIR   
11CF                L31AF:    
11CF   4C 4E 04               JMP   ERROR   
11D2                DEF:      
11D2   20 FF 11               JSR   FNC   
11D5   20 C8 11               JSR   ERRDIR   
11D8   20 F2 0D               JSR   CHKOPN   
11DB   A9 80                  LDA   #$80   
11DD   85 61                  STA   SUBFLG   
11DF   20 FF 0E               JSR   PTRGET   
11E2   20 A4 0C               JSR   CHKNUM   
11E5   20 EF 0D               JSR   CHKCLS   
11E8   A9 AB                  LDA   #TOKEN_EQUAL   
11EA   20 F7 0D               JSR   SYNCHR   
11ED   A5 96                  LDA   VARPNT+1   
11EF   48                     PHA   
11F0   A5 95                  LDA   VARPNT   
11F2   48                     PHA   
11F3   A5 C4                  LDA   TXTPTR+1   
11F5   48                     PHA   
11F6   A5 C3                  LDA   TXTPTR   
11F8   48                     PHA   
11F9   20 00 09               JSR   DATA   
11FC   4C 6E 12               JMP   L3250   
11FF                FNC:      
11FF   A9 9E                  LDA   #TOKEN_FN   
1201   20 F7 0D               JSR   SYNCHR   
1204   09 80                  ORA   #$80   
1206   85 61                  STA   SUBFLG   
1208   20 06 0F               JSR   PTRGET3   
120B   85 9C                  STA   FNCNAM   
120D   84 9D                  STY   FNCNAM+1   
120F   4C A4 0C               JMP   CHKNUM   
1212                L31F3:    
1212   20 FF 11               JSR   FNC   
1215   A5 9D                  LDA   FNCNAM+1   
1217   48                     PHA   
1218   A5 9C                  LDA   FNCNAM   
121A   48                     PHA   
121B   20 E9 0D               JSR   PARCHK   
121E   20 A4 0C               JSR   CHKNUM   
1221   68                     PLA   
1222   85 9C                  STA   FNCNAM   
1224   68                     PLA   
1225   85 9D                  STA   FNCNAM+1   
1227   A0 02                  LDY   #$02   
1229   A2 20                  LDX   #ERR_UNDEFFN   
122B   B1 9C                  LDA   (FNCNAM),y   
122D   F0 A0                  BEQ   L31AF   
122F   85 95                  STA   VARPNT   
1231   AA                     TAX   
1232   C8                     INY   
1233   B1 9C                  LDA   (FNCNAM),y   
1235   85 96                  STA   VARPNT+1   
1237                L3219:    
1237   B1 95                  LDA   (VARPNT),y   
1239   48                     PHA   
123A   88                     DEY   
123B   10 FA                  BPL   L3219   
123D   A4 96                  LDY   VARPNT+1   
123F   20 6C 19               JSR   STORE_FAC_AT_YX_ROUNDED   
1242   A5 C4                  LDA   TXTPTR+1   
1244   48                     PHA   
1245   A5 C3                  LDA   TXTPTR   
1247   48                     PHA   
1248   B1 9C                  LDA   (FNCNAM),y   
124A   85 C3                  STA   TXTPTR   
124C   C8                     INY   
124D   B1 9C                  LDA   (FNCNAM),y   
124F   85 C4                  STA   TXTPTR+1   
1251   A5 96                  LDA   VARPNT+1   
1253   48                     PHA   
1254   A5 95                  LDA   VARPNT   
1256   48                     PHA   
1257   20 A1 0C               JSR   FRMNUM   
125A   68                     PLA   
125B   85 9C                  STA   FNCNAM   
125D   68                     PLA   
125E   85 9D                  STA   FNCNAM+1   
1260   20 C2 00               JSR   CHRGOT   
1263   F0 03                  BEQ   L324A   
1265   4C 00 0E               JMP   SYNERR   
1268                L324A:    
1268   68                     PLA   
1269   85 C3                  STA   TXTPTR   
126B   68                     PLA   
126C   85 C4                  STA   TXTPTR+1   
126E                L3250:    
126E   A0 00                  LDY   #$00   
1270   68                     PLA   
1271   91 9C                  STA   (FNCNAM),y   
1273   68                     PLA   
1274   C8                     INY   
1275   91 9C                  STA   (FNCNAM),y   
1277   68                     PLA   
1278   C8                     INY   
1279   91 9C                  STA   (FNCNAM),y   
127B   68                     PLA   
127C   C8                     INY   
127D   91 9C                  STA   (FNCNAM),y   
127F   60                     RTS   
1280                          ; ----------------------------------------------------------------------------
1280                          ; "STR$" FUNCTION
1280                          ; ----------------------------------------------------------------------------
1280                STR:      
1280   20 A4 0C               JSR   CHKNUM   
1283   A0 00                  LDY   #$00   
1285   20 64 1B               JSR   FOUT1   
1288   68                     PLA   
1289   68                     PLA   
128A   A9 FF                  LDA   #$FF   
128C   A0 00                  LDY   #$00   
128E   F0 12                  BEQ   STRLIT   
1290                          ; ----------------------------------------------------------------------------
1290                          ; GET SPACE AND MAKE DESCRIPTOR FOR STRING WHOSE
1290                          ; ADDRESS IS IN FAC+3,4 AND WHOSE LENGTH IS IN A-REG
1290                          ; ----------------------------------------------------------------------------
1290                STRINI:   
1290   A6 AE                  LDX   FAC_LAST-1   
1292   A4 AF                  LDY   FAC_LAST   
1294   86 9E                  STX   DSCPTR   
1296   84 9F                  STY   DSCPTR+1   
1298                          ; ----------------------------------------------------------------------------
1298                          ; GET SPACE AND MAKE DESCRIPTOR FOR STRING WHOSE
1298                          ; ADDRESS IS IN Y,X AND WHOSE LENGTH IS IN A-REG
1298                          ; ----------------------------------------------------------------------------
1298                STRSPA:   
1298   20 09 13               JSR   GETSPA   
129B   86 AD                  STX   FAC+1   
129D   84 AE                  STY   FAC+2   
129F   85 AC                  STA   FAC   
12A1   60                     RTS   
12A2                          ; ----------------------------------------------------------------------------
12A2                          ; BUILD A DESCRIPTOR FOR STRING STARTING AT Y,A
12A2                          ; AND TERMINATED BY $00 OR QUOTATION MARK
12A2                          ; RETURN WITH DESCRIPTOR IN A TEMPORARY
12A2                          ; AND ADDRESS OF DESCRIPTOR IN FAC+3,4
12A2                          ; ----------------------------------------------------------------------------
12A2                STRLIT:   
12A2   A2 22                  LDX   #$22   
12A4   86 5B                  STX   CHARAC   
12A6   86 5C                  STX   ENDCHR   
12A8                          ; ----------------------------------------------------------------------------
12A8                          ; BUILD A DESCRIPTOR FOR STRING STARTING AT Y,A
12A8                          ; AND TERMINATED BY $00, (CHARAC), OR (ENDCHR)
12A8                          ; 
12A8                          ; RETURN WITH DESCRIPTOR IN A TEMPORARY
12A8                          ; AND ADDRESS OF DESCRIPTOR IN FAC+3,4
12A8                          ; ----------------------------------------------------------------------------
12A8                STRLT2:   
12A8   85 B8                  STA   STRNG1   
12AA   84 B9                  STY   STRNG1+1   
12AC   85 AD                  STA   FAC+1   
12AE   84 AE                  STY   FAC+2   
12B0   A0 FF                  LDY   #$FF   
12B2                L3298:    
12B2   C8                     INY   
12B3   B1 B8                  LDA   (STRNG1),y   
12B5   F0 0C                  BEQ   L32A9   
12B7   C5 5B                  CMP   CHARAC   
12B9   F0 04                  BEQ   L32A5   
12BB   C5 5C                  CMP   ENDCHR   
12BD   D0 F3                  BNE   L3298   
12BF                L32A5:    
12BF   C9 22                  CMP   #$22   
12C1   F0 01                  BEQ   L32AA   
12C3                L32A9:    
12C3   18                     CLC   
12C4                L32AA:    
12C4   84 AC                  STY   FAC   
12C6   98                     TYA   
12C7   65 B8                  ADC   STRNG1   
12C9   85 BA                  STA   STRNG2   
12CB   A6 B9                  LDX   STRNG1+1   
12CD   90 01                  BCC   L32B6   
12CF   E8                     INX   
12D0                L32B6:    
12D0   86 BB                  STX   STRNG2+1   
12D2   A5 B9                  LDA   STRNG1+1   
12D4   D0 0B                  BNE   PUTNEW   
12D6   98                     TYA   
12D7   20 90 12               JSR   STRINI   
12DA   A6 B8                  LDX   STRNG1   
12DC   A4 B9                  LDY   STRNG1+1   
12DE   20 8C 14               JSR   MOVSTR   
12E1                          ; ----------------------------------------------------------------------------
12E1                          ; STORE DESCRIPTOR IN TEMPORARY DESCRIPTOR STACK
12E1                          ; 
12E1                          ; THE DESCRIPTOR IS NOW IN FAC, FAC+1, FAC+2
12E1                          ; PUT ADDRESS OF TEMP DESCRIPTOR IN FAC+3,4
12E1                          ; ----------------------------------------------------------------------------
12E1                PUTNEW:   
12E1   A6 65                  LDX   TEMPPT   
12E3   E0 71                  CPX   #TEMPST+9   
12E5   D0 05                  BNE   PUTEMP   
12E7   A2 1C                  LDX   #ERR_FRMCPX   
12E9                JERR:     
12E9   4C 4E 04               JMP   ERROR   
12EC                PUTEMP:   
12EC   A5 AC                  LDA   FAC   
12EE   95 00                  STA   0,x   
12F0   A5 AD                  LDA   FAC+1   
12F2   95 01                  STA   1,x   
12F4   A5 AE                  LDA   FAC+2   
12F6   95 02                  STA   2,x   
12F8   A0 00                  LDY   #$00   
12FA   86 AE                  STX   FAC_LAST-1   
12FC   84 AF                  STY   FAC_LAST   
12FE   88                     DEY   
12FF   84 5F                  STY   VALTYP   
1301   86 66                  STX   LASTPT   
1303   E8                     INX   
1304   E8                     INX   
1305   E8                     INX   
1306   86 65                  STX   TEMPPT   
1308   60                     RTS   
1309                          ; ----------------------------------------------------------------------------
1309                          ; MAKE SPACE FOR STRING AT BOTTOM OF STRING SPACE
1309                          ; (A)=# BYTES SPACE TO MAKE
1309                          ; 
1309                          ; RETURN WITH (A) SAME,
1309                          ; AND Y,X = ADDRESS OF SPACE ALLOCATED
1309                          ; ----------------------------------------------------------------------------
1309                GETSPA:   
1309   46 60                  LSR   DATAFLG   
130B                L32F1:    
130B   48                     PHA   
130C   49 FF                  EOR   #$FF   
130E   38                     SEC   
130F   65 81                  ADC   FRETOP   
1311   A4 82                  LDY   FRETOP+1   
1313   B0 01                  BCS   L32FC   
1315   88                     DEY   
1316                L32FC:    
1316   C4 80                  CPY   STREND+1   
1318   90 11                  BCC   L3311   
131A   D0 04                  BNE   L3306   
131C   C5 7F                  CMP   STREND   
131E   90 0B                  BCC   L3311   
1320                L3306:    
1320   85 81                  STA   FRETOP   
1322   84 82                  STY   FRETOP+1   
1324   85 83                  STA   FRESPC   
1326   84 84                  STY   FRESPC+1   
1328   AA                     TAX   
1329   68                     PLA   
132A   60                     RTS   
132B                L3311:    
132B   A2 0C                  LDX   #ERR_MEMFULL   
132D   A5 60                  LDA   DATAFLG   
132F   30 B8                  BMI   JERR   
1331   20 3B 13               JSR   GARBAG   
1334   A9 80                  LDA   #$80   
1336   85 60                  STA   DATAFLG   
1338   68                     PLA   
1339   D0 D0                  BNE   L32F1   
133B                          ; ----------------------------------------------------------------------------
133B                          ; SHOVE ALL REFERENCED STRINGS AS HIGH AS POSSIBLE
133B                          ; IN MEMORY (AGAINST HIMEM), FREEING UP SPACE
133B                          ; BELOW STRING AREA DOWN TO STREND.
133B                          ; ----------------------------------------------------------------------------
133B                GARBAG:   
133B   A6 85                  LDX   MEMSIZ   
133D   A5 86                  LDA   MEMSIZ+1   
133F                FINDHIGHESTSTRING:   
133F   86 81                  STX   FRETOP   
1341   85 82                  STA   FRETOP+1   
1343   A0 00                  LDY   #$00   
1345   84 9D                  STY   FNCNAM+1   
1347   A5 7F                  LDA   STREND   
1349   A6 80                  LDX   STREND+1   
134B   85 AA                  STA   LOWTR   
134D   86 AB                  STX   LOWTR+1   
134F   A9 68                  LDA   #TEMPST   
1351   A2 00                  LDX   #$00   
1353   85 71                  STA   INDEX   
1355   86 72                  STX   INDEX+1   
1357                L333D:    
1357   C5 65                  CMP   TEMPPT   
1359   F0 05                  BEQ   L3346   
135B   20 CD 13               JSR   CHECK_VARIABLE   
135E   F0 F7                  BEQ   L333D   
1360                L3346:    
1360   A9 06                  LDA   #BYTES_PER_VARIABLE   
1362   85 A0                  STA   DSCLEN   
1364   A5 7B                  LDA   VARTAB   
1366   A6 7C                  LDX   VARTAB+1   
1368   85 71                  STA   INDEX   
136A   86 72                  STX   INDEX+1   
136C                L3352:    
136C   E4 7E                  CPX   ARYTAB+1   
136E   D0 04                  BNE   L335A   
1370   C5 7D                  CMP   ARYTAB   
1372   F0 05                  BEQ   L335F   
1374                L335A:    
1374   20 C7 13               JSR   CHECK_SIMPLE_VARIABLE   
1377   F0 F3                  BEQ   L3352   
1379                L335F:    
1379   85 A4                  STA   HIGHDS   
137B   86 A5                  STX   HIGHDS+1   
137D   A9 03                  LDA   #$03   ; OSI GC bugfix -> $04 ???
137F   85 A0                  STA   DSCLEN   
1381                L3367:    
1381   A5 A4                  LDA   HIGHDS   
1383   A6 A5                  LDX   HIGHDS+1   
1385                L336B:    
1385   E4 80                  CPX   STREND+1   
1387   D0 07                  BNE   L3376   
1389   C5 7F                  CMP   STREND   
138B   D0 03                  BNE   L3376   
138D   4C 0C 14               JMP   MOVE_HIGHEST_STRING_TO_TOP   
1390                L3376:    
1390   85 71                  STA   INDEX   
1392   86 72                  STX   INDEX+1   
1394   A0 01                  LDY   #$01   
1396   B1 71                  LDA   (INDEX),y   
1398   08                     PHP   
1399   C8                     INY   
139A   B1 71                  LDA   (INDEX),y   
139C   65 A4                  ADC   HIGHDS   
139E   85 A4                  STA   HIGHDS   
13A0   C8                     INY   
13A1   B1 71                  LDA   (INDEX),y   
13A3   65 A5                  ADC   HIGHDS+1   
13A5   85 A5                  STA   HIGHDS+1   
13A7   28                     PLP   
13A8   10 D7                  BPL   L3367   
13AA   C8                     INY   
13AB   B1 71                  LDA   (INDEX),y   
13AD   0A                     ASL   a   
13AE   69 05                  ADC   #$05   
13B0   65 71                  ADC   INDEX   
13B2   85 71                  STA   INDEX   
13B4   90 02                  BCC   L33A7   
13B6   E6 72                  INC   INDEX+1   
13B8                L33A7:    
13B8   A6 72                  LDX   INDEX+1   
13BA                L33A9:    
13BA   E4 A5                  CPX   HIGHDS+1   
13BC   D0 04                  BNE   L33B1   
13BE   C5 A4                  CMP   HIGHDS   
13C0   F0 C3                  BEQ   L336B   
13C2                L33B1:    
13C2   20 CD 13               JSR   CHECK_VARIABLE   
13C5   F0 F3                  BEQ   L33A9   
13C7                          ; ----------------------------------------------------------------------------
13C7                          ; PROCESS A SIMPLE VARIABLE
13C7                          ; ----------------------------------------------------------------------------
13C7                CHECK_SIMPLE_VARIABLE:   
13C7   C8                     INY   
13C8   B1 71                  LDA   (INDEX),y   
13CA   10 30                  BPL   CHECK_BUMP   
13CC   C8                     INY   
13CD                          ; ----------------------------------------------------------------------------
13CD                          ; IF STRING IS NOT EMPTY, CHECK IF IT IS HIGHEST
13CD                          ; ----------------------------------------------------------------------------
13CD                CHECK_VARIABLE:   
13CD   B1 71                  LDA   (INDEX),y   
13CF   F0 2B                  BEQ   CHECK_BUMP   
13D1   C8                     INY   
13D2   B1 71                  LDA   (INDEX),y   
13D4   AA                     TAX   
13D5   C8                     INY   
13D6   B1 71                  LDA   (INDEX),y   
13D8   C5 82                  CMP   FRETOP+1   
13DA   90 06                  BCC   L33D5   
13DC   D0 1E                  BNE   CHECK_BUMP   
13DE   E4 81                  CPX   FRETOP   
13E0   B0 1A                  BCS   CHECK_BUMP   
13E2                L33D5:    
13E2   C5 AB                  CMP   LOWTR+1   
13E4   90 16                  BCC   CHECK_BUMP   
13E6   D0 04                  BNE   L33DF   
13E8   E4 AA                  CPX   LOWTR   
13EA   90 10                  BCC   CHECK_BUMP   
13EC                L33DF:    
13EC   86 AA                  STX   LOWTR   
13EE   85 AB                  STA   LOWTR+1   
13F0   A5 71                  LDA   INDEX   
13F2   A6 72                  LDX   INDEX+1   
13F4   85 9C                  STA   FNCNAM   
13F6   86 9D                  STX   FNCNAM+1   
13F8   A5 A0                  LDA   DSCLEN   
13FA   85 A2                  STA   Z52   
13FC                          ; ----------------------------------------------------------------------------
13FC                          ; ADD (DSCLEN) TO PNTR IN INDEX
13FC                          ; RETURN WITH Y=0, PNTR ALSO IN X,A
13FC                          ; ----------------------------------------------------------------------------
13FC                CHECK_BUMP:   
13FC   A5 A0                  LDA   DSCLEN   
13FE   18                     CLC   
13FF   65 71                  ADC   INDEX   
1401   85 71                  STA   INDEX   
1403   90 02                  BCC   L33FA   
1405   E6 72                  INC   INDEX+1   
1407                L33FA:    
1407   A6 72                  LDX   INDEX+1   
1409   A0 00                  LDY   #$00   
140B   60                     RTS   
140C                          ; ----------------------------------------------------------------------------
140C                          ; FOUND HIGHEST NON-EMPTY STRING, SO MOVE IT
140C                          ; TO TOP AND GO BACK FOR ANOTHER
140C                          ; ----------------------------------------------------------------------------
140C                MOVE_HIGHEST_STRING_TO_TOP:   
140C   A6 9D                  LDX   FNCNAM+1   
140E   F0 F7                  BEQ   L33FA   
1410   A5 A2                  LDA   Z52   
1412   29 04                  AND   #$04   
1414   4A                     LSR   a   
1415   A8                     TAY   
1416   85 A2                  STA   Z52   
1418   B1 9C                  LDA   (FNCNAM),y   
141A   65 AA                  ADC   LOWTR   
141C   85 A6                  STA   HIGHTR   
141E   A5 AB                  LDA   LOWTR+1   
1420   69 00                  ADC   #$00   
1422   85 A7                  STA   HIGHTR+1   
1424   A5 81                  LDA   FRETOP   
1426   A6 82                  LDX   FRETOP+1   
1428   85 A4                  STA   HIGHDS   
142A   86 A5                  STX   HIGHDS+1   
142C   20 D6 03               JSR   BLTU2   
142F   A4 A2                  LDY   Z52   
1431   C8                     INY   
1432   A5 A4                  LDA   HIGHDS   
1434   91 9C                  STA   (FNCNAM),y   
1436   AA                     TAX   
1437   E6 A5                  INC   HIGHDS+1   
1439   A5 A5                  LDA   HIGHDS+1   
143B   C8                     INY   
143C   91 9C                  STA   (FNCNAM),y   
143E   4C 3F 13               JMP   FINDHIGHESTSTRING   
1441                          ; ----------------------------------------------------------------------------
1441                          ; CONCATENATE TWO STRINGS
1441                          ; ----------------------------------------------------------------------------
1441                CAT:      
1441   A5 AF                  LDA   FAC_LAST   
1443   48                     PHA   
1444   A5 AE                  LDA   FAC_LAST-1   
1446   48                     PHA   
1447   20 94 0D               JSR   FRM_ELEMENT   
144A   20 A6 0C               JSR   CHKSTR   
144D   68                     PLA   
144E   85 B8                  STA   STRNG1   
1450   68                     PLA   
1451   85 B9                  STA   STRNG1+1   
1453   A0 00                  LDY   #$00   
1455   B1 B8                  LDA   (STRNG1),y   
1457   18                     CLC   
1458   71 AE                  ADC   (FAC_LAST-1),y   
145A   90 05                  BCC   L3454   
145C   A2 1A                  LDX   #ERR_STRLONG   
145E   4C 4E 04               JMP   ERROR   
1461                L3454:    
1461   20 90 12               JSR   STRINI   
1464   20 7E 14               JSR   MOVINS   
1467   A5 9E                  LDA   DSCPTR   
1469   A4 9F                  LDY   DSCPTR+1   
146B   20 AE 14               JSR   FRETMP   
146E   20 90 14               JSR   MOVSTR1   
1471   A5 B8                  LDA   STRNG1   
1473   A4 B9                  LDY   STRNG1+1   
1475   20 AE 14               JSR   FRETMP   
1478   20 E1 12               JSR   PUTNEW   
147B   4C CF 0C               JMP   FRMEVL2   
147E                          ; ----------------------------------------------------------------------------
147E                          ; GET STRING DESCRIPTOR POINTED AT BY (STRNG1)
147E                          ; AND MOVE DESCRIBED STRING TO (FRESPC)
147E                          ; ----------------------------------------------------------------------------
147E                MOVINS:   
147E   A0 00                  LDY   #$00   
1480   B1 B8                  LDA   (STRNG1),y   
1482   48                     PHA   
1483   C8                     INY   
1484   B1 B8                  LDA   (STRNG1),y   
1486   AA                     TAX   
1487   C8                     INY   
1488   B1 B8                  LDA   (STRNG1),y   
148A   A8                     TAY   
148B   68                     PLA   
148C                          ; ----------------------------------------------------------------------------
148C                          ; MOVE STRING AT (Y,X) WITH LENGTH (A)
148C                          ; TO DESTINATION WHOSE ADDRESS IS IN FRESPC,FRESPC+1
148C                          ; ----------------------------------------------------------------------------
148C                MOVSTR:   
148C   86 71                  STX   INDEX   
148E   84 72                  STY   INDEX+1   
1490                MOVSTR1:   
1490   A8                     TAY   
1491   F0 0A                  BEQ   L3490   
1493   48                     PHA   
1494                L3487:    
1494   88                     DEY   
1495   B1 71                  LDA   (INDEX),y   
1497   91 83                  STA   (FRESPC),y   
1499   98                     TYA   
149A   D0 F8                  BNE   L3487   
149C   68                     PLA   
149D                L3490:    
149D   18                     CLC   
149E   65 83                  ADC   FRESPC   
14A0   85 83                  STA   FRESPC   
14A2   90 02                  BCC   L3499   
14A4   E6 84                  INC   FRESPC+1   
14A6                L3499:    
14A6   60                     RTS   
14A7                          ; ----------------------------------------------------------------------------
14A7                          ; IF (FAC) IS A TEMPORARY STRING, RELEASE DESCRIPTOR
14A7                          ; ----------------------------------------------------------------------------
14A7                FRESTR:   
14A7   20 A6 0C               JSR   CHKSTR   
14AA                          ; ----------------------------------------------------------------------------
14AA                          ; IF STRING DESCRIPTOR POINTED TO BY FAC+3,4 IS
14AA                          ; A TEMPORARY STRING, RELEASE IT.
14AA                          ; ----------------------------------------------------------------------------
14AA                FREFAC:   
14AA   A5 AE                  LDA   FAC_LAST-1   
14AC   A4 AF                  LDY   FAC_LAST   
14AE                          ; ----------------------------------------------------------------------------
14AE                          ; IF STRING DESCRIPTOR WHOSE ADDRESS IS IN Y,A IS
14AE                          ; A TEMPORARY STRING, RELEASE IT.
14AE                          ; ----------------------------------------------------------------------------
14AE                FRETMP:   
14AE   85 71                  STA   INDEX   
14B0   84 72                  STY   INDEX+1   
14B2   20 DF 14               JSR   FRETMS   
14B5   08                     PHP   
14B6   A0 00                  LDY   #$00   
14B8   B1 71                  LDA   (INDEX),y   
14BA   48                     PHA   
14BB   C8                     INY   
14BC   B1 71                  LDA   (INDEX),y   
14BE   AA                     TAX   
14BF   C8                     INY   
14C0   B1 71                  LDA   (INDEX),y   
14C2   A8                     TAY   
14C3   68                     PLA   
14C4   28                     PLP   
14C5   D0 13                  BNE   L34CD   
14C7   C4 82                  CPY   FRETOP+1   
14C9   D0 0F                  BNE   L34CD   
14CB   E4 81                  CPX   FRETOP   
14CD   D0 0B                  BNE   L34CD   
14CF   48                     PHA   
14D0   18                     CLC   
14D1   65 81                  ADC   FRETOP   
14D3   85 81                  STA   FRETOP   
14D5   90 02                  BCC   L34CC   
14D7   E6 82                  INC   FRETOP+1   
14D9                L34CC:    
14D9   68                     PLA   
14DA                L34CD:    
14DA   86 71                  STX   INDEX   
14DC   84 72                  STY   INDEX+1   
14DE   60                     RTS   
14DF                          ; ----------------------------------------------------------------------------
14DF                          ; RELEASE TEMPORARY DESCRIPTOR IF Y,A = LASTPT
14DF                          ; ----------------------------------------------------------------------------
14DF                FRETMS:   
14DF   C4 67                  CPY   LASTPT+1   
14E1   D0 0C                  BNE   L34E2   
14E3   C5 66                  CMP   LASTPT   
14E5   D0 08                  BNE   L34E2   
14E7   85 65                  STA   TEMPPT   
14E9   E9 03                  SBC   #$03   
14EB   85 66                  STA   LASTPT   
14ED   A0 00                  LDY   #$00   
14EF                L34E2:    
14EF   60                     RTS   
14F0                          ; ----------------------------------------------------------------------------
14F0                          ; "CHR$" FUNCTION
14F0                          ; ----------------------------------------------------------------------------
14F0                CHRSTR:   
14F0   20 A5 15               JSR   CONINT   
14F3   8A                     TXA   
14F4   48                     PHA   
14F5   A9 01                  LDA   #$01   
14F7   20 98 12               JSR   STRSPA   
14FA   68                     PLA   
14FB   A0 00                  LDY   #$00   
14FD   91 AD                  STA   (FAC+1),y   
14FF   68                     PLA   
1500   68                     PLA   
1501   4C E1 12               JMP   PUTNEW   
1504                          ; ----------------------------------------------------------------------------
1504                          ; "LEFT$" FUNCTION
1504                          ; ----------------------------------------------------------------------------
1504                LEFTSTR:   
1504   20 63 15               JSR   SUBSTRING_SETUP   
1507   D1 9E                  CMP   (DSCPTR),y   
1509   98                     TYA   
150A                SUBSTRING1:   
150A   90 04                  BCC   L3503   
150C   B1 9E                  LDA   (DSCPTR),y   
150E   AA                     TAX   
150F   98                     TYA   
1510                L3503:    
1510   48                     PHA   
1511                SUBSTRING2:   
1511   8A                     TXA   
1512                SUBSTRING3:   
1512   48                     PHA   
1513   20 98 12               JSR   STRSPA   
1516   A5 9E                  LDA   DSCPTR   
1518   A4 9F                  LDY   DSCPTR+1   
151A   20 AE 14               JSR   FRETMP   
151D   68                     PLA   
151E   A8                     TAY   
151F   68                     PLA   
1520   18                     CLC   
1521   65 71                  ADC   INDEX   
1523   85 71                  STA   INDEX   
1525   90 02                  BCC   L351C   
1527   E6 72                  INC   INDEX+1   
1529                L351C:    
1529   98                     TYA   
152A   20 90 14               JSR   MOVSTR1   
152D   4C E1 12               JMP   PUTNEW   
1530                          ; ----------------------------------------------------------------------------
1530                          ; "RIGHT$" FUNCTION
1530                          ; ----------------------------------------------------------------------------
1530                RIGHTSTR:   
1530   20 63 15               JSR   SUBSTRING_SETUP   
1533   18                     CLC   
1534   F1 9E                  SBC   (DSCPTR),y   
1536   49 FF                  EOR   #$FF   
1538   4C 0A 15               JMP   SUBSTRING1   
153B                          ; ----------------------------------------------------------------------------
153B                          ; "MID$" FUNCTION
153B                          ; ----------------------------------------------------------------------------
153B                MIDSTR:   
153B   A9 FF                  LDA   #$FF   
153D   85 AF                  STA   FAC_LAST   
153F   20 C2 00               JSR   CHRGOT   
1542   C9 29                  CMP   #$29   
1544   F0 06                  BEQ   L353F   
1546   20 F5 0D               JSR   CHKCOM   
1549   20 A2 15               JSR   GETBYT   
154C                L353F:    
154C   20 63 15               JSR   SUBSTRING_SETUP   
154F   CA                     DEX   
1550   8A                     TXA   
1551   48                     PHA   
1552   18                     CLC   
1553   A2 00                  LDX   #$00   
1555   F1 9E                  SBC   (DSCPTR),y   
1557   B0 B8                  BCS   SUBSTRING2   
1559   49 FF                  EOR   #$FF   
155B   C5 AF                  CMP   FAC_LAST   
155D   90 B3                  BCC   SUBSTRING3   
155F   A5 AF                  LDA   FAC_LAST   
1561   B0 AF                  BCS   SUBSTRING3   
1563                          ; ----------------------------------------------------------------------------
1563                          ; COMMON SETUP ROUTINE FOR LEFT$, RIGHT$, MID$:
1563                          ; REQUIRE ")"; POP RETURN ADRS, GET DESCRIPTOR
1563                          ; ADDRESS, GET 1ST PARAMETER OF COMMAND
1563                          ; ----------------------------------------------------------------------------
1563                SUBSTRING_SETUP:   
1563   20 EF 0D               JSR   CHKCLS   
1566   68                     PLA   
1567   85 A2                  STA   JMPADRS+1   
1569   68                     PLA   
156A   85 A3                  STA   JMPADRS+2   
156C   68                     PLA   
156D   68                     PLA   
156E   68                     PLA   
156F   AA                     TAX   
1570   68                     PLA   
1571   85 9E                  STA   DSCPTR   
1573   68                     PLA   
1574   85 9F                  STA   DSCPTR+1   
1576   A0 00                  LDY   #$00   
1578   8A                     TXA   
1579   F0 21                  BEQ   GOIQ   
157B   E6 A2                  INC   JMPADRS+1   
157D   6C A2 00               JMP   (JMPADRS+1)   
1580                          ; ----------------------------------------------------------------------------
1580                          ; "LEN" FUNCTION
1580                          ; ----------------------------------------------------------------------------
1580                LEN:      
1580   20 86 15               JSR   GETSTR   
1583                SNGFLT1:   
1583   4C C4 11               JMP   SNGFLT   
1586                          ; ----------------------------------------------------------------------------
1586                          ; IF LAST RESULT IS A TEMPORARY STRING, FREE IT
1586                          ; MAKE VALTYP NUMERIC, RETURN LENGTH IN Y-REG
1586                          ; ----------------------------------------------------------------------------
1586                GETSTR:   
1586   20 A7 14               JSR   FRESTR   
1589   A2 00                  LDX   #$00   
158B   86 5F                  STX   VALTYP   
158D   A8                     TAY   
158E   60                     RTS   
158F                          ; ----------------------------------------------------------------------------
158F                          ; "ASC" FUNCTION
158F                          ; ----------------------------------------------------------------------------
158F                ASC:      
158F   20 86 15               JSR   GETSTR   
1592   F0 08                  BEQ   GOIQ   
1594   A0 00                  LDY   #$00   
1596   B1 71                  LDA   (INDEX),y   
1598   A8                     TAY   
1599   4C 83 15               JMP   SNGFLT1   
159C                          ; ----------------------------------------------------------------------------
159C                GOIQ:     
159C   4C 7C 10               JMP   IQERR   
159F                          ; ----------------------------------------------------------------------------
159F                          ; SCAN TO NEXT CHARACTER AND CONVERT EXPRESSION
159F                          ; TO SINGLE BYTE IN X-REG
159F                          ; ----------------------------------------------------------------------------
159F                GTBYTC:   
159F   20 BC 00               JSR   CHRGET   
15A2                          ; ----------------------------------------------------------------------------
15A2                          ; EVALUATE EXPRESSION AT TXTPTR, AND
15A2                          ; CONVERT IT TO SINGLE BYTE IN X-REG
15A2                          ; ----------------------------------------------------------------------------
15A2                GETBYT:   
15A2   20 A1 0C               JSR   FRMNUM   
15A5                          ; ----------------------------------------------------------------------------
15A5                          ; CONVERT (FAC) TO SINGLE BYTE INTEGER IN X-REG
15A5                          ; ----------------------------------------------------------------------------
15A5                CONINT:   
15A5   20 F5 0F               JSR   MKINT   
15A8   A6 AE                  LDX   FAC_LAST-1   
15AA   D0 F0                  BNE   GOIQ   
15AC   A6 AF                  LDX   FAC_LAST   
15AE   4C C2 00               JMP   CHRGOT   
15B1                          ; ----------------------------------------------------------------------------
15B1                          ; "VAL" FUNCTION
15B1                          ; ----------------------------------------------------------------------------
15B1                VAL:      
15B1   20 86 15               JSR   GETSTR   
15B4   D0 03                  BNE   L35AC   
15B6   4C E5 16               JMP   ZERO_FAC   
15B9                L35AC:    
15B9   A6 C3                  LDX   TXTPTR   
15BB   A4 C4                  LDY   TXTPTR+1   
15BD   86 BA                  STX   STRNG2   
15BF   84 BB                  STY   STRNG2+1   
15C1   A6 71                  LDX   INDEX   
15C3   86 C3                  STX   TXTPTR   
15C5   18                     CLC   
15C6   65 71                  ADC   INDEX   
15C8   85 73                  STA   DEST   
15CA   A6 72                  LDX   INDEX+1   
15CC   86 C4                  STX   TXTPTR+1   
15CE   90 01                  BCC   L35C4   
15D0   E8                     INX   
15D1                L35C4:    
15D1   86 74                  STX   DEST+1   
15D3   A0 00                  LDY   #$00   
15D5   B1 73                  LDA   (DEST),y   
15D7   48                     PHA   
15D8   A9 00                  LDA   #$00   
15DA   91 73                  STA   (DEST),y   
15DC   20 C2 00               JSR   CHRGOT   
15DF   20 7B 1A               JSR   FIN   
15E2   68                     PLA   
15E3   A0 00                  LDY   #$00   
15E5   91 73                  STA   (DEST),y   
15E7                          ; ----------------------------------------------------------------------------
15E7                          ; COPY STRNG2 INTO TXTPTR
15E7                          ; ----------------------------------------------------------------------------
15E7                POINT:    
15E7   A6 BA                  LDX   STRNG2   
15E9   A4 BB                  LDY   STRNG2+1   
15EB   86 C3                  STX   TXTPTR   
15ED   84 C4                  STY   TXTPTR+1   
15EF   60                     RTS   
15F0                          ; ----------------------------------------------------------------------------
15F0                          ; EVALUATE "EXP1,EXP2"
15F0                          ; 
15F0                          ; CONVERT EXP1 TO 16-BIT NUMBER IN LINNUM
15F0                          ; CONVERT EXP2 TO 8-BIT NUMBER IN X-REG
15F0                          ; ----------------------------------------------------------------------------
15F0                GTNUM:    
15F0   20 A1 0C               JSR   FRMNUM   
15F3   20 FC 15               JSR   GETADR   
15F6                          ; ----------------------------------------------------------------------------
15F6                          ; EVALUATE ",EXPRESSION"
15F6                          ; CONVERT EXPRESSION TO SINGLE BYTE IN X-REG
15F6                          ; ----------------------------------------------------------------------------
15F6                COMBYTE:   
15F6   20 F5 0D               JSR   CHKCOM   
15F9   4C A2 15               JMP   GETBYT   
15FC                          ; ----------------------------------------------------------------------------
15FC                          ; CONVERT (FAC) TO A 16-BIT VALUE IN LINNUM
15FC                          ; ----------------------------------------------------------------------------
15FC                GETADR:   
15FC   A5 B0                  LDA   FACSIGN   
15FE   30 9C                  BMI   GOIQ   
1600   A5 AC                  LDA   FAC   
1602   C9 91                  CMP   #$91   
1604   B0 96                  BCS   GOIQ   
1606   20 25 1A               JSR   QINT   
1609   A5 AE                  LDA   FAC_LAST-1   
160B   A4 AF                  LDY   FAC_LAST   
160D   84 11                  STY   LINNUM   
160F   85 12                  STA   LINNUM+1   
1611   60                     RTS   
1612                          ; ----------------------------------------------------------------------------
1612                          ; "PEEK" FUNCTION
1612                          ; ----------------------------------------------------------------------------
1612                PEEK:     
1612   20 FC 15               JSR   GETADR   
1615   A0 00                  LDY   #$00   
1617                          ; disallow PEEK between $C000 and $DFFF
1617   B1 11                  LDA   (LINNUM),y   
1619   A8                     TAY   
161A   4C C4 11               JMP   SNGFLT   
161D                          ; ----------------------------------------------------------------------------
161D                          ; "POKE" STATEMENT
161D                          ; ----------------------------------------------------------------------------
161D                POKE:     
161D   20 F0 15               JSR   GTNUM   
1620   8A                     TXA   
1621   A0 00                  LDY   #$00   
1623   91 11                  STA   (LINNUM),y   
1625   60                     RTS   
1626                          ; ----------------------------------------------------------------------------
1626                          ; "WAIT" STATEMENT
1626                          ; ----------------------------------------------------------------------------
1626                WAIT:     
1626   20 F0 15               JSR   GTNUM   
1629   86 97                  STX   FORPNT   
162B   A2 00                  LDX   #$00   
162D   20 C2 00               JSR   CHRGOT   
1630   F0 03                  BEQ   L3628   
1632   20 F6 15               JSR   COMBYTE   
1635                L3628:    
1635   86 98                  STX   FORPNT+1   
1637   A0 00                  LDY   #$00   
1639                L362C:    
1639   B1 11                  LDA   (LINNUM),y   
163B   45 98                  EOR   FORPNT+1   
163D   25 97                  AND   FORPNT   
163F   F0 F8                  BEQ   L362C   
1641                RTS3:     
1641   60                     RTS   
1642                TEMP1X:   =   TEMP1+(5-BYTES_FP)   
1642                          ; ----------------------------------------------------------------------------
1642                          ; ADD 0.5 TO FAC
1642                          ; ----------------------------------------------------------------------------
1642                FADDH:    
1642   A9 8A                  LDA   #<CON_HALF   
1644   A0 1C                  LDY   #>CON_HALF   
1646   4C 60 16               JMP   FADD   
1649                          ; ----------------------------------------------------------------------------
1649                          ; FAC = (Y,A) - FAC
1649                          ; ----------------------------------------------------------------------------
1649                FSUB:     
1649   20 41 18               JSR   LOAD_ARG_FROM_YA   
164C                          ; ----------------------------------------------------------------------------
164C                          ; FAC = ARG - FAC
164C                          ; ----------------------------------------------------------------------------
164C                FSUBT:    
164C   A5 B0                  LDA   FACSIGN   
164E   49 FF                  EOR   #$FF   
1650   85 B0                  STA   FACSIGN   
1652   45 B7                  EOR   ARGSIGN   
1654   85 B8                  STA   SGNCPR   
1656   A5 AC                  LDA   FAC   
1658   4C 63 16               JMP   FADDT   
165B                          ; ----------------------------------------------------------------------------
165B                          ; Commodore BASIC V2 Easter Egg
165B                          ; ----------------------------------------------------------------------------
165B                          ; ----------------------------------------------------------------------------
165B                          ; SHIFT SMALLER ARGUMENT MORE THAN 7 BITS
165B                          ; ----------------------------------------------------------------------------
165B                FADD1:    
165B   20 6F 17               JSR   SHIFT_RIGHT   
165E   90 3C                  BCC   FADD3   
1660                          ; ----------------------------------------------------------------------------
1660                          ; FAC = (Y,A) + FAC
1660                          ; ----------------------------------------------------------------------------
1660                FADD:     
1660   20 41 18               JSR   LOAD_ARG_FROM_YA   
1663                          ; ----------------------------------------------------------------------------
1663                          ; FAC = ARG + FAC
1663                          ; ----------------------------------------------------------------------------
1663                FADDT:    
1663   D0 03                  BNE   L365B   
1665   4C 8F 19               JMP   COPY_ARG_TO_FAC   
1668                L365B:    
1668   A6 B9                  LDX   FACEXTENSION   
166A   86 A3                  STX   ARGEXTENSION   
166C   A2 B3                  LDX   #ARG   
166E   A5 B3                  LDA   ARG   
1670                FADD2:    
1670   A8                     TAY   
1671   F0 CE                  BEQ   RTS3   
1673   38                     SEC   
1674   E5 AC                  SBC   FAC   
1676   F0 24                  BEQ   FADD3   
1678   90 12                  BCC   L367F   
167A   84 AC                  STY   FAC   
167C   A4 B7                  LDY   ARGSIGN   
167E   84 B0                  STY   FACSIGN   
1680   49 FF                  EOR   #$FF   
1682   69 00                  ADC   #$00   
1684   A0 00                  LDY   #$00   
1686   84 A3                  STY   ARGEXTENSION   
1688   A2 AC                  LDX   #FAC   
168A   D0 04                  BNE   L3683   
168C                L367F:    
168C   A0 00                  LDY   #$00   
168E   84 B9                  STY   FACEXTENSION   
1690                L3683:    
1690   C9 F9                  CMP   #$F9   
1692   30 C7                  BMI   FADD1   
1694   A8                     TAY   
1695   A5 B9                  LDA   FACEXTENSION   
1697   56 01                  LSR   1,x   
1699   20 86 17               JSR   SHIFT_RIGHT4   
169C                FADD3:    
169C   24 B8                  BIT   SGNCPR   
169E   10 4C                  BPL   FADD4   
16A0   A0 AC                  LDY   #FAC   
16A2   E0 B3                  CPX   #ARG   
16A4   F0 02                  BEQ   L369B   
16A6   A0 B3                  LDY   #ARG   
16A8                L369B:    
16A8   38                     SEC   
16A9   49 FF                  EOR   #$FF   
16AB   65 A3                  ADC   ARGEXTENSION   
16AD   85 B9                  STA   FACEXTENSION   
16AF   B9 03 00               LDA   3,y   
16B2   F5 03                  SBC   3,x   
16B4   85 AF                  STA   FAC+3   
16B6   B9 02 00               LDA   2,y   
16B9   F5 02                  SBC   2,x   
16BB   85 AE                  STA   FAC+2   
16BD   B9 01 00               LDA   1,y   
16C0   F5 01                  SBC   1,x   
16C2   85 AD                  STA   FAC+1   
16C4                          ; ----------------------------------------------------------------------------
16C4                          ; NORMALIZE VALUE IN FAC
16C4                          ; ----------------------------------------------------------------------------
16C4                NORMALIZE_FAC1:   
16C4   B0 03                  BCS   NORMALIZE_FAC2   
16C6   20 2B 17               JSR   COMPLEMENT_FAC   
16C9                NORMALIZE_FAC2:   
16C9   A0 00                  LDY   #$00   
16CB   98                     TYA   
16CC   18                     CLC   
16CD                L36C7:    
16CD   A6 AD                  LDX   FAC+1   
16CF   D0 3E                  BNE   NORMALIZE_FAC4   
16D1   A6 AE                  LDX   FAC+2   
16D3   86 AD                  STX   FAC+1   
16D5   A6 AF                  LDX   FAC+3   
16D7   86 AE                  STX   FAC+2   
16D9   A6 B9                  LDX   FACEXTENSION   
16DB   86 AF                  STX   FAC+3   
16DD   84 B9                  STY   FACEXTENSION   
16DF   69 08                  ADC   #$08   
16E1                          ; bugfix?
16E1                          ; fix does not exist on AppleSoft 2
16E1   C9 18                  CMP   #MANTISSA_BYTES*8   
16E3   D0 E8                  BNE   L36C7   
16E5                          ; ----------------------------------------------------------------------------
16E5                          ; SET FAC = 0
16E5                          ; (ONLY NECESSARY TO ZERO EXPONENT AND SIGN CELLS)
16E5                          ; ----------------------------------------------------------------------------
16E5                ZERO_FAC:   
16E5   A9 00                  LDA   #$00   
16E7                STA_IN_FAC_SIGN_AND_EXP:   
16E7   85 AC                  STA   FAC   
16E9                STA_IN_FAC_SIGN:   
16E9   85 B0                  STA   FACSIGN   
16EB   60                     RTS   
16EC                          ; ----------------------------------------------------------------------------
16EC                          ; ADD MANTISSAS OF FAC AND ARG INTO FAC
16EC                          ; ----------------------------------------------------------------------------
16EC                FADD4:    
16EC   65 A3                  ADC   ARGEXTENSION   
16EE   85 B9                  STA   FACEXTENSION   
16F0   A5 AF                  LDA   FAC+3   
16F2   65 B6                  ADC   ARG+3   
16F4   85 AF                  STA   FAC+3   
16F6   A5 AE                  LDA   FAC+2   
16F8   65 B5                  ADC   ARG+2   
16FA   85 AE                  STA   FAC+2   
16FC   A5 AD                  LDA   FAC+1   
16FE   65 B4                  ADC   ARG+1   
1700   85 AD                  STA   FAC+1   
1702   4C 1C 17               JMP   NORMALIZE_FAC5   
1705                          ; ----------------------------------------------------------------------------
1705                          ; FINISH NORMALIZING FAC
1705                          ; ----------------------------------------------------------------------------
1705                NORMALIZE_FAC3:   
1705   69 01                  ADC   #$01   
1707   06 B9                  ASL   FACEXTENSION   
1709   26 AF                  ROL   FAC+3   
170B   26 AE                  ROL   FAC+2   
170D   26 AD                  ROL   FAC+1   
170F                NORMALIZE_FAC4:   
170F   10 F4                  BPL   NORMALIZE_FAC3   
1711   38                     SEC   
1712   E5 AC                  SBC   FAC   
1714   B0 CF                  BCS   ZERO_FAC   
1716   49 FF                  EOR   #$FF   
1718   69 01                  ADC   #$01   
171A   85 AC                  STA   FAC   
171C                NORMALIZE_FAC5:   
171C   90 0C                  BCC   L3764   
171E                NORMALIZE_FAC6:   
171E   E6 AC                  INC   FAC   
1720   F0 36                  BEQ   OVERFLOW   
1722   66 AD                  ROR   FAC+1   
1724   66 AE                  ROR   FAC+2   
1726   66 AF                  ROR   FAC+3   
1728   66 B9                  ROR   FACEXTENSION   
172A                L3764:    
172A   60                     RTS   
172B                          ; ----------------------------------------------------------------------------
172B                          ; 2'S COMPLEMENT OF FAC
172B                          ; ----------------------------------------------------------------------------
172B                COMPLEMENT_FAC:   
172B   A5 B0                  LDA   FACSIGN   
172D   49 FF                  EOR   #$FF   
172F   85 B0                  STA   FACSIGN   
1731                          ; ----------------------------------------------------------------------------
1731                          ; 2'S COMPLEMENT OF FAC MANTISSA ONLY
1731                          ; ----------------------------------------------------------------------------
1731                COMPLEMENT_FAC_MANTISSA:   
1731   A5 AD                  LDA   FAC+1   
1733   49 FF                  EOR   #$FF   
1735   85 AD                  STA   FAC+1   
1737   A5 AE                  LDA   FAC+2   
1739   49 FF                  EOR   #$FF   
173B   85 AE                  STA   FAC+2   
173D   A5 AF                  LDA   FAC+3   
173F   49 FF                  EOR   #$FF   
1741   85 AF                  STA   FAC+3   
1743   A5 B9                  LDA   FACEXTENSION   
1745   49 FF                  EOR   #$FF   
1747   85 B9                  STA   FACEXTENSION   
1749   E6 B9                  INC   FACEXTENSION   
174B   D0 0A                  BNE   RTS12   
174D                          ; ----------------------------------------------------------------------------
174D                          ; INCREMENT FAC MANTISSA
174D                          ; ----------------------------------------------------------------------------
174D                INCREMENT_FAC_MANTISSA:   
174D   E6 AF                  INC   FAC+3   
174F   D0 06                  BNE   RTS12   
1751   E6 AE                  INC   FAC+2   
1753   D0 02                  BNE   RTS12   
1755   E6 AD                  INC   FAC+1   
1757                RTS12:    
1757   60                     RTS   
1758                OVERFLOW:   
1758   A2 0A                  LDX   #ERR_OVERFLOW   
175A   4C 4E 04               JMP   ERROR   
175D                          ; ----------------------------------------------------------------------------
175D                          ; SHIFT 1,X THRU 5,X RIGHT
175D                          ; (A) = NEGATIVE OF SHIFT COUNT
175D                          ; (X) = POINTER TO BYTES TO BE SHIFTED
175D                          ; 
175D                          ; RETURN WITH (Y)=0, CARRY=0, EXTENSION BITS IN A-REG
175D                          ; ----------------------------------------------------------------------------
175D                SHIFT_RIGHT1:   
175D   A2 74                  LDX   #RESULT-1   
175F                SHIFT_RIGHT2:   
175F   B4 03                  LDY   3,x   
1761   84 B9                  STY   FACEXTENSION   
1763   B4 02                  LDY   2,x   
1765   94 03                  STY   *3,x   
1767   B4 01                  LDY   1,x   
1769   94 02                  STY   *2,x   
176B   A4 B2                  LDY   SHIFTSIGNEXT   
176D   94 01                  STY   *1,x   
176F                          ; ----------------------------------------------------------------------------
176F                          ; MAIN ENTRY TO RIGHT SHIFT SUBROUTINE
176F                          ; ----------------------------------------------------------------------------
176F                SHIFT_RIGHT:   
176F   69 08                  ADC   #$08   
1771   30 EC                  BMI   SHIFT_RIGHT2   
1773   F0 EA                  BEQ   SHIFT_RIGHT2   
1775   E9 08                  SBC   #$08   
1777   A8                     TAY   
1778   A5 B9                  LDA   FACEXTENSION   
177A   B0 12                  BCS   SHIFT_RIGHT5   
177C                LB588:    
177C   16 01                  ASL   1,x   
177E   90 02                  BCC   LB58E   
1780   F6 01                  INC   1,x   
1782                LB58E:    
1782   76 01                  ROR   1,x   
1784   76 01                  ROR   1,x   
1786                          ; ----------------------------------------------------------------------------
1786                          ; ENTER HERE FOR SHORT SHIFTS WITH NO SIGN EXTENSION
1786                          ; ----------------------------------------------------------------------------
1786                SHIFT_RIGHT4:   
1786   76 02                  ROR   2,x   
1788   76 03                  ROR   3,x   
178A   6A                     ROR   a   
178B   C8                     INY   
178C   D0 EE                  BNE   LB588   
178E                SHIFT_RIGHT5:   
178E   18                     CLC   
178F   60                     RTS   
1790                          ; ----------------------------------------------------------------------------
1790                CON_ONE:   
1790   81 00 00 00            DB   $81,$00,$00,$00   
1794                POLY_LOG:   
1794   02                     DB   $02   
1795   80 19 56 62            DB   $80,$19,$56,$62   
1799   80 76 22 F3            DB   $80,$76,$22,$F3   
179D   82 38 AA 40            DB   $82,$38,$AA,$40   
17A1                CON_SQR_HALF:   
17A1   80 35 04 F3            DB   $80,$35,$04,$F3   
17A5                CON_SQR_TWO:   
17A5   81 35 04 F3            DB   $81,$35,$04,$F3   
17A9                CON_NEG_HALF:   
17A9   80 80 00 00            DB   $80,$80,$00,$00   
17AD                CON_LOG_TWO:   
17AD   80 31 72 18            DB   $80,$31,$72,$18   
17B1                          ; ----------------------------------------------------------------------------
17B1                          ; "LOG" FUNCTION
17B1                          ; ----------------------------------------------------------------------------
17B1                LOG:      
17B1   20 BE 19               JSR   SIGN   
17B4   F0 02                  BEQ   GIQ   
17B6   10 03                  BPL   LOG2   
17B8                GIQ:      
17B8   4C 7C 10               JMP   IQERR   
17BB                LOG2:     
17BB   A5 AC                  LDA   FAC   
17BD   E9 7F                  SBC   #$7F   
17BF   48                     PHA   
17C0   A9 80                  LDA   #$80   
17C2   85 AC                  STA   FAC   
17C4   A9 A1                  LDA   #<CON_SQR_HALF   
17C6   A0 17                  LDY   #>CON_SQR_HALF   
17C8   20 60 16               JSR   FADD   
17CB   A9 A5                  LDA   #<CON_SQR_TWO   
17CD   A0 17                  LDY   #>CON_SQR_TWO   
17CF   20 BE 18               JSR   FDIV   
17D2   A9 90                  LDA   #<CON_ONE   
17D4   A0 17                  LDY   #>CON_ONE   
17D6   20 49 16               JSR   FSUB   
17D9   A9 94                  LDA   #<POLY_LOG   
17DB   A0 17                  LDY   #>POLY_LOG   
17DD   20 62 1D               JSR   POLYNOMIAL_ODD   
17E0   A9 A9                  LDA   #<CON_NEG_HALF   
17E2   A0 17                  LDY   #>CON_NEG_HALF   
17E4   20 60 16               JSR   FADD   
17E7   68                     PLA   
17E8   20 06 1B               JSR   ADDACC   
17EB   A9 AD                  LDA   #<CON_LOG_TWO   
17ED   A0 17                  LDY   #>CON_LOG_TWO   
17EF                          ; ----------------------------------------------------------------------------
17EF                          ; FAC = (Y,A) * FAC
17EF                          ; ----------------------------------------------------------------------------
17EF                FMULT:    
17EF   20 41 18               JSR   LOAD_ARG_FROM_YA   
17F2                          ; ----------------------------------------------------------------------------
17F2                          ; FAC = ARG * FAC
17F2                          ; ----------------------------------------------------------------------------
17F2                FMULTT:   
17F2   F0 4C                  BEQ   L3903   
17F4   20 67 18               JSR   ADD_EXPONENTS   
17F7   A9 00                  LDA   #$00   
17F9   85 75                  STA   RESULT   
17FB   85 76                  STA   RESULT+1   
17FD   85 77                  STA   RESULT+2   
17FF   A5 B9                  LDA   FACEXTENSION   
1801   20 16 18               JSR   MULTIPLY1   
1804   A5 AF                  LDA   FAC+3   
1806   20 16 18               JSR   MULTIPLY1   
1809   A5 AE                  LDA   FAC+2   
180B   20 16 18               JSR   MULTIPLY1   
180E   A5 AD                  LDA   FAC+1   
1810   20 1B 18               JSR   MULTIPLY2   
1813   4C 30 19               JMP   COPY_RESULT_INTO_FAC   
1816                          ; ----------------------------------------------------------------------------
1816                          ; MULTIPLY ARG BY (A) INTO RESULT
1816                          ; ----------------------------------------------------------------------------
1816                MULTIPLY1:   
1816   D0 03                  BNE   MULTIPLY2   
1818   4C 5D 17               JMP   SHIFT_RIGHT1   
181B                MULTIPLY2:   
181B   4A                     LSR   a   
181C   09 80                  ORA   #$80   
181E                L38A7:    
181E   A8                     TAY   
181F   90 13                  BCC   L38C3   
1821   18                     CLC   
1822   A5 77                  LDA   RESULT+2   
1824   65 B6                  ADC   ARG+3   
1826   85 77                  STA   RESULT+2   
1828   A5 76                  LDA   RESULT+1   
182A   65 B5                  ADC   ARG+2   
182C   85 76                  STA   RESULT+1   
182E   A5 75                  LDA   RESULT   
1830   65 B4                  ADC   ARG+1   
1832   85 75                  STA   RESULT   
1834                L38C3:    
1834   66 75                  ROR   RESULT   
1836   66 76                  ROR   RESULT+1   
1838                          ; this seems to be a bad byte in the dump
1838   66 77                  ROR   RESULT+2   
183A   66 B9                  ROR   FACEXTENSION   
183C   98                     TYA   
183D   4A                     LSR   a   
183E   D0 DE                  BNE   L38A7   
1840                L3903:    
1840   60                     RTS   
1841                          ; ----------------------------------------------------------------------------
1841                          ; UNPACK NUMBER AT (Y,A) INTO ARG
1841                          ; ----------------------------------------------------------------------------
1841                LOAD_ARG_FROM_YA:   
1841   85 71                  STA   INDEX   
1843   84 72                  STY   INDEX+1   
1845   A0 03                  LDY   #BYTES_FP-1   
1847   B1 71                  LDA   (INDEX),y   
1849   85 B6                  STA   ARG+3   
184B   88                     DEY   
184C   B1 71                  LDA   (INDEX),y   
184E   85 B5                  STA   ARG+2   
1850   88                     DEY   
1851   B1 71                  LDA   (INDEX),y   
1853   85 B7                  STA   ARGSIGN   
1855   45 B0                  EOR   FACSIGN   
1857   85 B8                  STA   SGNCPR   
1859   A5 B7                  LDA   ARGSIGN   
185B   09 80                  ORA   #$80   
185D   85 B4                  STA   ARG+1   
185F   88                     DEY   
1860   B1 71                  LDA   (INDEX),y   
1862   85 B3                  STA   ARG   
1864   A5 AC                  LDA   FAC   
1866   60                     RTS   
1867                          ; ----------------------------------------------------------------------------
1867                          ; ADD EXPONENTS OF ARG AND FAC
1867                          ; (CALLED BY FMULT AND FDIV)
1867                          ; 
1867                          ; ALSO CHECK FOR OVERFLOW, AND SET RESULT SIGN
1867                          ; ----------------------------------------------------------------------------
1867                ADD_EXPONENTS:   
1867   A5 B3                  LDA   ARG   
1869                ADD_EXPONENTS1:   
1869   F0 1F                  BEQ   ZERO   
186B   18                     CLC   
186C   65 AC                  ADC   FAC   
186E   90 04                  BCC   L393C   
1870   30 1D                  BMI   JOV   
1872   18                     CLC   
1873   2C                     DB   $2C   
1874                L393C:    
1874   10 14                  BPL   ZERO   
1876   69 80                  ADC   #$80   
1878   85 AC                  STA   FAC   
187A   D0 03                  BNE   L3947   
187C   4C E9 16               JMP   STA_IN_FAC_SIGN   
187F                L3947:    
187F   A5 B8                  LDA   SGNCPR   
1881   85 B0                  STA   FACSIGN   
1883   60                     RTS   
1884                          ; ----------------------------------------------------------------------------
1884                          ; IF (FAC) IS POSITIVE, GIVE "OVERFLOW" ERROR
1884                          ; IF (FAC) IS NEGATIVE, SET FAC=0, POP ONE RETURN, AND RTS
1884                          ; CALLED FROM "EXP" FUNCTION
1884                          ; ----------------------------------------------------------------------------
1884                OUTOFRNG:   
1884   A5 B0                  LDA   FACSIGN   
1886   49 FF                  EOR   #$FF   
1888   30 05                  BMI   JOV   
188A                          ; ----------------------------------------------------------------------------
188A                          ; POP RETURN ADDRESS AND SET FAC=0
188A                          ; ----------------------------------------------------------------------------
188A                ZERO:     
188A   68                     PLA   
188B   68                     PLA   
188C   4C E5 16               JMP   ZERO_FAC   
188F                JOV:      
188F   4C 58 17               JMP   OVERFLOW   
1892                          ; ----------------------------------------------------------------------------
1892                          ; MULTIPLY FAC BY 10
1892                          ; ----------------------------------------------------------------------------
1892                MUL10:    
1892   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
1895   AA                     TAX   
1896   F0 10                  BEQ   L3970   
1898   18                     CLC   
1899   69 02                  ADC   #$02   
189B   B0 F2                  BCS   JOV   
189D   A2 00                  LDX   #$00   
189F   86 B8                  STX   SGNCPR   
18A1   20 70 16               JSR   FADD2   
18A4   E6 AC                  INC   FAC   
18A6   F0 E7                  BEQ   JOV   
18A8                L3970:    
18A8   60                     RTS   
18A9                          ; ----------------------------------------------------------------------------
18A9                CONTEN:   
18A9   84 20 00 00            DB   $84,$20,$00,$00   
18AD                          ; ----------------------------------------------------------------------------
18AD                          ; DIVIDE FAC BY 10
18AD                          ; ----------------------------------------------------------------------------
18AD                DIV10:    
18AD   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
18B0   A9 A9                  LDA   #<CONTEN   
18B2   A0 18                  LDY   #>CONTEN   
18B4   A2 00                  LDX   #$00   
18B6                          ; ----------------------------------------------------------------------------
18B6                          ; FAC = ARG / (Y,A)
18B6                          ; ----------------------------------------------------------------------------
18B6                DIV:      
18B6   86 B8                  STX   SGNCPR   
18B8   20 3F 19               JSR   LOAD_FAC_FROM_YA   
18BB   4C C1 18               JMP   FDIVT   
18BE                          ; ----------------------------------------------------------------------------
18BE                          ; FAC = (Y,A) / FAC
18BE                          ; ----------------------------------------------------------------------------
18BE                FDIV:     
18BE   20 41 18               JSR   LOAD_ARG_FROM_YA   
18C1                          ; ----------------------------------------------------------------------------
18C1                          ; FAC = ARG / FAC
18C1                          ; ----------------------------------------------------------------------------
18C1                FDIVT:    
18C1   F0 68                  BEQ   L3A02   
18C3   20 AE 19               JSR   ROUND_FAC   
18C6   A9 00                  LDA   #$00   
18C8   38                     SEC   
18C9   E5 AC                  SBC   FAC   
18CB   85 AC                  STA   FAC   
18CD   20 67 18               JSR   ADD_EXPONENTS   
18D0   E6 AC                  INC   FAC   
18D2   F0 BB                  BEQ   JOV   
18D4   A2 FD                  LDX   #-MANTISSA_BYTES   
18D6   A9 01                  LDA   #$01   
18D8                L39A1:    
18D8   A4 B4                  LDY   ARG+1   
18DA   C4 AD                  CPY   FAC+1   
18DC   D0 0A                  BNE   L39B7   
18DE   A4 B5                  LDY   ARG+2   
18E0   C4 AE                  CPY   FAC+2   
18E2   D0 04                  BNE   L39B7   
18E4   A4 B6                  LDY   ARG+3   
18E6   C4 AF                  CPY   FAC+3   
18E8                L39B7:    
18E8   08                     PHP   
18E9   2A                     ROL   a   
18EA   90 09                  BCC   L39C4   
18EC   E8                     INX   
18ED   95 77                  STA   RESULT_LAST-1,x   
18EF   F0 2A                  BEQ   L39F2   
18F1   10 2C                  BPL   L39F6   
18F3   A9 01                  LDA   #$01   
18F5                L39C4:    
18F5   28                     PLP   
18F6   B0 0C                  BCS   L39D5   
18F8                L39C7:    
18F8   06 B6                  ASL   ARG_LAST   
18FA   26 B5                  ROL   ARG+2   
18FC   26 B4                  ROL   ARG+1   
18FE   B0 E8                  BCS   L39B7   
1900   30 D6                  BMI   L39A1   
1902   10 E4                  BPL   L39B7   
1904                L39D5:    
1904   A8                     TAY   
1905   A5 B6                  LDA   ARG+3   
1907   E5 AF                  SBC   FAC+3   
1909   85 B6                  STA   ARG+3   
190B   A5 B5                  LDA   ARG+2   
190D   E5 AE                  SBC   FAC+2   
190F   85 B5                  STA   ARG+2   
1911   A5 B4                  LDA   ARG+1   
1913   E5 AD                  SBC   FAC+1   
1915   85 B4                  STA   ARG+1   
1917   98                     TYA   
1918   4C F8 18               JMP   L39C7   
191B                L39F2:    
191B   A9 40                  LDA   #$40   
191D   D0 D6                  BNE   L39C4   
191F                L39F6:    
191F   0A                     ASL   a   
1920   0A                     ASL   a   
1921   0A                     ASL   a   
1922   0A                     ASL   a   
1923   0A                     ASL   a   
1924   0A                     ASL   a   
1925   85 B9                  STA   FACEXTENSION   
1927   28                     PLP   
1928   4C 30 19               JMP   COPY_RESULT_INTO_FAC   
192B                L3A02:    
192B   A2 14                  LDX   #ERR_ZERODIV   
192D   4C 4E 04               JMP   ERROR   
1930                          ; ----------------------------------------------------------------------------
1930                          ; COPY RESULT INTO FAC MANTISSA, AND NORMALIZE
1930                          ; ----------------------------------------------------------------------------
1930                COPY_RESULT_INTO_FAC:   
1930   A5 75                  LDA   RESULT   
1932   85 AD                  STA   FAC+1   
1934   A5 76                  LDA   RESULT+1   
1936   85 AE                  STA   FAC+2   
1938   A5 77                  LDA   RESULT+2   
193A   85 AF                  STA   FAC+3   
193C   4C C9 16               JMP   NORMALIZE_FAC2   
193F                          ; ----------------------------------------------------------------------------
193F                          ; UNPACK (Y,A) INTO FAC
193F                          ; ----------------------------------------------------------------------------
193F                LOAD_FAC_FROM_YA:   
193F   85 71                  STA   INDEX   
1941   84 72                  STY   INDEX+1   
1943   A0 03                  LDY   #MANTISSA_BYTES   
1945   B1 71                  LDA   (INDEX),y   
1947   85 AF                  STA   FAC+3   
1949   88                     DEY   
194A   B1 71                  LDA   (INDEX),y   
194C   85 AE                  STA   FAC+2   
194E   88                     DEY   
194F   B1 71                  LDA   (INDEX),y   
1951   85 B0                  STA   FACSIGN   
1953   09 80                  ORA   #$80   
1955   85 AD                  STA   FAC+1   
1957   88                     DEY   
1958   B1 71                  LDA   (INDEX),y   
195A   85 AC                  STA   FAC   
195C   84 B9                  STY   FACEXTENSION   
195E   60                     RTS   
195F                          ; ----------------------------------------------------------------------------
195F                          ; ROUND FAC, STORE IN TEMP2
195F                          ; ----------------------------------------------------------------------------
195F                STORE_FAC_IN_TEMP2_ROUNDED:   
195F   A2 A8                  LDX   #TEMP2   
1961   2C                     DB   $2C   
1962                          ; ----------------------------------------------------------------------------
1962                          ; ROUND FAC, STORE IN TEMP1
1962                          ; ----------------------------------------------------------------------------
1962                STORE_FAC_IN_TEMP1_ROUNDED:   
1962   A2 A4                  LDX   #TEMP1X   
1964   A0 00                  LDY   #$00   
1966   F0 04                  BEQ   STORE_FAC_AT_YX_ROUNDED   
1968                          ; ----------------------------------------------------------------------------
1968                          ; ROUND FAC, AND STORE WHERE FORPNT POINTS
1968                          ; ----------------------------------------------------------------------------
1968                SETFOR:   
1968   A6 97                  LDX   FORPNT   
196A   A4 98                  LDY   FORPNT+1   
196C                          ; ----------------------------------------------------------------------------
196C                          ; ROUND FAC, AND STORE AT (Y,X)
196C                          ; ----------------------------------------------------------------------------
196C                STORE_FAC_AT_YX_ROUNDED:   
196C   20 AE 19               JSR   ROUND_FAC   
196F   86 71                  STX   INDEX   
1971   84 72                  STY   INDEX+1   
1973   A0 03                  LDY   #MANTISSA_BYTES   
1975   A5 AF                  LDA   FAC+3   
1977   91 71                  STA   (INDEX),y   
1979   88                     DEY   
197A   A5 AE                  LDA   FAC+2   
197C   91 71                  STA   (INDEX),y   
197E   88                     DEY   
197F   A5 B0                  LDA   FACSIGN   
1981   09 7F                  ORA   #$7F   
1983   25 AD                  AND   FAC+1   
1985   91 71                  STA   (INDEX),y   
1987   88                     DEY   
1988   A5 AC                  LDA   FAC   
198A   91 71                  STA   (INDEX),y   
198C   84 B9                  STY   FACEXTENSION   
198E   60                     RTS   
198F                          ; ----------------------------------------------------------------------------
198F                          ; COPY ARG INTO FAC
198F                          ; ----------------------------------------------------------------------------
198F                COPY_ARG_TO_FAC:   
198F   A5 B7                  LDA   ARGSIGN   
1991                MFA:      
1991   85 B0                  STA   FACSIGN   
1993   A2 04                  LDX   #BYTES_FP   
1995                L3A7A:    
1995   B5 B2                  LDA   SHIFTSIGNEXT,x   
1997   95 AB                  STA   EXPSGN,x   
1999   CA                     DEX   
199A   D0 F9                  BNE   L3A7A   
199C   86 B9                  STX   FACEXTENSION   
199E   60                     RTS   
199F                          ; ----------------------------------------------------------------------------
199F                          ; ROUND FAC AND COPY TO ARG
199F                          ; ----------------------------------------------------------------------------
199F                COPY_FAC_TO_ARG_ROUNDED:   
199F   20 AE 19               JSR   ROUND_FAC   
19A2                MAF:      
19A2   A2 05                  LDX   #BYTES_FP+1   
19A4                L3A89:    
19A4   B5 AB                  LDA   EXPSGN,x   
19A6   95 B2                  STA   SHIFTSIGNEXT,x   
19A8   CA                     DEX   
19A9   D0 F9                  BNE   L3A89   
19AB   86 B9                  STX   FACEXTENSION   
19AD                RTS14:    
19AD   60                     RTS   
19AE                          ; ----------------------------------------------------------------------------
19AE                          ; ROUND FAC USING EXTENSION BYTE
19AE                          ; ----------------------------------------------------------------------------
19AE                ROUND_FAC:   
19AE   A5 AC                  LDA   FAC   
19B0   F0 FB                  BEQ   RTS14   
19B2   06 B9                  ASL   FACEXTENSION   
19B4   90 F7                  BCC   RTS14   
19B6                          ; ----------------------------------------------------------------------------
19B6                          ; INCREMENT MANTISSA AND RE-NORMALIZE IF CARRY
19B6                          ; ----------------------------------------------------------------------------
19B6                INCREMENT_MANTISSA:   
19B6   20 4D 17               JSR   INCREMENT_FAC_MANTISSA   
19B9   D0 F2                  BNE   RTS14   
19BB   4C 1E 17               JMP   NORMALIZE_FAC6   
19BE                          ; ----------------------------------------------------------------------------
19BE                          ; TEST FAC FOR ZERO AND SIGN
19BE                          ; 
19BE                          ; FAC > 0, RETURN +1
19BE                          ; FAC = 0, RETURN  0
19BE                          ; FAC < 0, RETURN -1
19BE                          ; ----------------------------------------------------------------------------
19BE                SIGN:     
19BE   A5 AC                  LDA   FAC   
19C0   F0 09                  BEQ   RTS15   
19C2                L3AA7:    
19C2   A5 B0                  LDA   FACSIGN   
19C4                SIGN2:    
19C4   2A                     ROL   a   
19C5   A9 FF                  LDA   #$FF   
19C7   B0 02                  BCS   RTS15   
19C9   A9 01                  LDA   #$01   
19CB                RTS15:    
19CB   60                     RTS   
19CC                          ; ----------------------------------------------------------------------------
19CC                          ; "SGN" FUNCTION
19CC                          ; ----------------------------------------------------------------------------
19CC                SGN:      
19CC   20 BE 19               JSR   SIGN   
19CF                          ; ----------------------------------------------------------------------------
19CF                          ; CONVERT (A) INTO FAC, AS SIGNED VALUE -128 TO +127
19CF                          ; ----------------------------------------------------------------------------
19CF                FLOAT:    
19CF   85 AD                  STA   FAC+1   
19D1   A9 00                  LDA   #$00   
19D3   85 AE                  STA   FAC+2   
19D5   A2 88                  LDX   #$88   
19D7                          ; ----------------------------------------------------------------------------
19D7                          ; FLOAT UNSIGNED VALUE IN FAC+1,2
19D7                          ; (X) = EXPONENT
19D7                          ; ----------------------------------------------------------------------------
19D7                FLOAT1:   
19D7   A5 AD                  LDA   FAC+1   
19D9   49 FF                  EOR   #$FF   
19DB   2A                     ROL   a   
19DC                          ; ----------------------------------------------------------------------------
19DC                          ; FLOAT UNSIGNED VALUE IN FAC+1,2
19DC                          ; (X) = EXPONENT
19DC                          ; C=0 TO MAKE VALUE NEGATIVE
19DC                          ; C=1 TO MAKE VALUE POSITIVE
19DC                          ; ----------------------------------------------------------------------------
19DC                FLOAT2:   
19DC   A9 00                  LDA   #$00   
19DE   85 AF                  STA   FAC+3   
19E0   86 AC                  STX   FAC   
19E2   85 B9                  STA   FACEXTENSION   
19E4   85 B0                  STA   FACSIGN   
19E6   4C C4 16               JMP   NORMALIZE_FAC1   
19E9                          ; ----------------------------------------------------------------------------
19E9                          ; "ABS" FUNCTION
19E9                          ; ----------------------------------------------------------------------------
19E9                ABS:      
19E9   46 B0                  LSR   FACSIGN   
19EB   60                     RTS   
19EC                          ; ----------------------------------------------------------------------------
19EC                          ; COMPARE FAC WITH PACKED # AT (Y,A)
19EC                          ; RETURN A=1,0,-1 AS (Y,A) IS <,=,> FAC
19EC                          ; ----------------------------------------------------------------------------
19EC                FCOMP:    
19EC   85 73                  STA   DEST   
19EE                          ; ----------------------------------------------------------------------------
19EE                          ; SPECIAL ENTRY FROM "NEXT" PROCESSOR
19EE                          ; "DEST" ALREADY SET UP
19EE                          ; ----------------------------------------------------------------------------
19EE                FCOMP2:   
19EE   84 74                  STY   DEST+1   
19F0   A0 00                  LDY   #$00   
19F2   B1 73                  LDA   (DEST),y   
19F4   C8                     INY   
19F5   AA                     TAX   
19F6   F0 C6                  BEQ   SIGN   
19F8   B1 73                  LDA   (DEST),y   
19FA   45 B0                  EOR   FACSIGN   
19FC   30 C4                  BMI   L3AA7   
19FE   E4 AC                  CPX   FAC   
1A00   D0 1A                  BNE   L3B0A   
1A02   B1 73                  LDA   (DEST),y   
1A04   09 80                  ORA   #$80   
1A06   C5 AD                  CMP   FAC+1   
1A08   D0 12                  BNE   L3B0A   
1A0A   C8                     INY   
1A0B   B1 73                  LDA   (DEST),y   
1A0D   C5 AE                  CMP   FAC+2   
1A0F   D0 0B                  BNE   L3B0A   
1A11   C8                     INY   
1A12   A9 7F                  LDA   #$7F   
1A14   C5 B9                  CMP   FACEXTENSION   
1A16   B1 73                  LDA   (DEST),y   
1A18   E5 AF                  SBC   FAC_LAST   
1A1A   F0 28                  BEQ   L3B32   
1A1C                L3B0A:    
1A1C   A5 B0                  LDA   FACSIGN   
1A1E   90 02                  BCC   L3B10   
1A20   49 FF                  EOR   #$FF   
1A22                L3B10:    
1A22   4C C4 19               JMP   SIGN2   
1A25                          ; ----------------------------------------------------------------------------
1A25                          ; QUICK INTEGER FUNCTION
1A25                          ; 
1A25                          ; CONVERTS FP VALUE IN FAC TO INTEGER VALUE
1A25                          ; IN FAC+1...FAC+4, BY SHIFTING RIGHT WITH SIGN
1A25                          ; EXTENSION UNTIL FRACTIONAL BITS ARE OUT.
1A25                          ; 
1A25                          ; THIS SUBROUTINE ASSUMES THE EXPONENT < 32.
1A25                          ; ----------------------------------------------------------------------------
1A25                QINT:     
1A25   A5 AC                  LDA   FAC   
1A27   F0 4A                  BEQ   QINT3   
1A29   38                     SEC   
1A2A   E9 98                  SBC   #120+8*BYTES_FP   
1A2C   24 B0                  BIT   FACSIGN   
1A2E   10 09                  BPL   L3B27   
1A30   AA                     TAX   
1A31   A9 FF                  LDA   #$FF   
1A33   85 B2                  STA   SHIFTSIGNEXT   
1A35   20 31 17               JSR   COMPLEMENT_FAC_MANTISSA   
1A38   8A                     TXA   
1A39                L3B27:    
1A39   A2 AC                  LDX   #FAC   
1A3B   C9 F9                  CMP   #$F9   
1A3D   10 06                  BPL   QINT2   
1A3F   20 6F 17               JSR   SHIFT_RIGHT   
1A42   84 B2                  STY   SHIFTSIGNEXT   
1A44                L3B32:    
1A44   60                     RTS   
1A45                QINT2:    
1A45   A8                     TAY   
1A46   A5 B0                  LDA   FACSIGN   
1A48   29 80                  AND   #$80   
1A4A   46 AD                  LSR   FAC+1   
1A4C   05 AD                  ORA   FAC+1   
1A4E   85 AD                  STA   FAC+1   
1A50   20 86 17               JSR   SHIFT_RIGHT4   
1A53   84 B2                  STY   SHIFTSIGNEXT   
1A55   60                     RTS   
1A56                          ; ----------------------------------------------------------------------------
1A56                          ; "INT" FUNCTION
1A56                          ; 
1A56                          ; USES QINT TO CONVERT (FAC) TO INTEGER FORM,
1A56                          ; AND THEN REFLOATS THE INTEGER.
1A56                          ; ----------------------------------------------------------------------------
1A56                INT:      
1A56   A5 AC                  LDA   FAC   
1A58   C9 98                  CMP   #120+8*BYTES_FP   
1A5A   B0 1E                  BCS   RTS17   
1A5C   20 25 1A               JSR   QINT   
1A5F   84 B9                  STY   FACEXTENSION   
1A61   A5 B0                  LDA   FACSIGN   
1A63   84 B0                  STY   FACSIGN   
1A65   49 80                  EOR   #$80   
1A67   2A                     ROL   a   
1A68   A9 98                  LDA   #120+8*BYTES_FP   
1A6A   85 AC                  STA   FAC   
1A6C   A5 AF                  LDA   FAC_LAST   
1A6E   85 5B                  STA   CHARAC   
1A70   4C C4 16               JMP   NORMALIZE_FAC1   
1A73                QINT3:    
1A73   85 AD                  STA   FAC+1   
1A75   85 AE                  STA   FAC+2   
1A77   85 AF                  STA   FAC+3   
1A79   A8                     TAY   
1A7A                RTS17:    
1A7A   60                     RTS   
1A7B                          ; ----------------------------------------------------------------------------
1A7B                          ; CONVERT STRING TO FP VALUE IN FAC
1A7B                          ; 
1A7B                          ; STRING POINTED TO BY TXTPTR
1A7B                          ; FIRST CHAR ALREADY SCANNED BY CHRGET
1A7B                          ; (A) = FIRST CHAR, C=0 IF DIGIT.
1A7B                          ; ----------------------------------------------------------------------------
1A7B                FIN:      
1A7B   A0 00                  LDY   #$00   
1A7D   A2 09                  LDX   #SERLEN-TMPEXP   
1A7F                L3B6F:    
1A7F   94 A8                  STY   *TMPEXP,x   
1A81   CA                     DEX   
1A82   10 FB                  BPL   L3B6F   
1A84   90 0F                  BCC   FIN2   
1A86   C9 2D                  CMP   #$2D   
1A88   D0 04                  BNE   L3B7E   
1A8A   86 B1                  STX   SERLEN   
1A8C   F0 04                  BEQ   FIN1   
1A8E                L3B7E:    
1A8E   C9 2B                  CMP   #$2B   
1A90   D0 05                  BNE   FIN3   
1A92                FIN1:     
1A92   20 BC 00               JSR   CHRGET   
1A95                FIN2:     
1A95   90 5B                  BCC   FIN9   
1A97                FIN3:     
1A97   C9 2E                  CMP   #$2E   
1A99   F0 2E                  BEQ   FIN10   
1A9B   C9 45                  CMP   #$45   
1A9D   D0 30                  BNE   FIN7   
1A9F   20 BC 00               JSR   CHRGET   
1AA2   90 17                  BCC   FIN5   
1AA4   C9 A4                  CMP   #TOKEN_MINUS   
1AA6   F0 0E                  BEQ   L3BA6   
1AA8   C9 2D                  CMP   #$2D   
1AAA   F0 0A                  BEQ   L3BA6   
1AAC   C9 A3                  CMP   #TOKEN_PLUS   
1AAE   F0 08                  BEQ   FIN4   
1AB0   C9 2B                  CMP   #$2B   
1AB2   F0 04                  BEQ   FIN4   
1AB4   D0 07                  BNE   FIN6   
1AB6                L3BA6:    
1AB6   66 AB                  ROR   EXPSGN   
1AB8                FIN4:     
1AB8   20 BC 00               JSR   CHRGET   
1ABB                FIN5:     
1ABB   90 5C                  BCC   GETEXP   
1ABD                FIN6:     
1ABD   24 AB                  BIT   EXPSGN   
1ABF   10 0E                  BPL   FIN7   
1AC1   A9 00                  LDA   #$00   
1AC3   38                     SEC   
1AC4   E5 A9                  SBC   EXPON   
1AC6   4C D1 1A               JMP   FIN8   
1AC9                          ; ----------------------------------------------------------------------------
1AC9                          ; FOUND A DECIMAL POINT
1AC9                          ; ----------------------------------------------------------------------------
1AC9                FIN10:    
1AC9   66 AA                  ROR   LOWTR   
1ACB   24 AA                  BIT   LOWTR   
1ACD   50 C3                  BVC   FIN1   
1ACF                          ; ----------------------------------------------------------------------------
1ACF                          ; NUMBER TERMINATED, ADJUST EXPONENT NOW
1ACF                          ; ----------------------------------------------------------------------------
1ACF                FIN7:     
1ACF   A5 A9                  LDA   EXPON   
1AD1                FIN8:     
1AD1   38                     SEC   
1AD2   E5 A8                  SBC   INDX   
1AD4   85 A9                  STA   EXPON   
1AD6   F0 12                  BEQ   L3BEE   
1AD8   10 09                  BPL   L3BE7   
1ADA                L3BDE:    
1ADA   20 AD 18               JSR   DIV10   
1ADD   E6 A9                  INC   EXPON   
1ADF   D0 F9                  BNE   L3BDE   
1AE1   F0 07                  BEQ   L3BEE   
1AE3                L3BE7:    
1AE3   20 92 18               JSR   MUL10   
1AE6   C6 A9                  DEC   EXPON   
1AE8   D0 F9                  BNE   L3BE7   
1AEA                L3BEE:    
1AEA   A5 B1                  LDA   SERLEN   
1AEC   30 01                  BMI   L3BF3   
1AEE   60                     RTS   
1AEF                L3BF3:    
1AEF   4C E3 1C               JMP   NEGOP   
1AF2                          ; ----------------------------------------------------------------------------
1AF2                          ; ACCUMULATE A DIGIT INTO FAC
1AF2                          ; ----------------------------------------------------------------------------
1AF2                FIN9:     
1AF2   48                     PHA   
1AF3   24 AA                  BIT   LOWTR   
1AF5   10 02                  BPL   L3BFD   
1AF7   E6 A8                  INC   INDX   
1AF9                L3BFD:    
1AF9   20 92 18               JSR   MUL10   
1AFC   68                     PLA   
1AFD   38                     SEC   
1AFE   E9 30                  SBC   #$30   
1B00   20 06 1B               JSR   ADDACC   
1B03   4C 92 1A               JMP   FIN1   
1B06                          ; ----------------------------------------------------------------------------
1B06                          ; ADD (A) TO FAC
1B06                          ; ----------------------------------------------------------------------------
1B06                ADDACC:   
1B06   48                     PHA   
1B07   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
1B0A   68                     PLA   
1B0B   20 CF 19               JSR   FLOAT   
1B0E   A5 B7                  LDA   ARGSIGN   
1B10   45 B0                  EOR   FACSIGN   
1B12   85 B8                  STA   SGNCPR   
1B14   A6 AC                  LDX   FAC   
1B16   4C 63 16               JMP   FADDT   
1B19                          ; ----------------------------------------------------------------------------
1B19                          ; ACCUMULATE DIGIT OF EXPONENT
1B19                          ; ----------------------------------------------------------------------------
1B19                GETEXP:   
1B19   A5 A9                  LDA   EXPON   
1B1B   C9 0A                  CMP   #MAX_EXPON   
1B1D   90 09                  BCC   L3C2C   
1B1F   A9 64                  LDA   #$64   
1B21   24 AB                  BIT   EXPSGN   
1B23   30 11                  BMI   L3C3A   
1B25   4C 58 17               JMP   OVERFLOW   
1B28                L3C2C:    
1B28   0A                     ASL   a   
1B29   0A                     ASL   a   
1B2A   18                     CLC   
1B2B   65 A9                  ADC   EXPON   
1B2D   0A                     ASL   a   
1B2E   18                     CLC   
1B2F   A0 00                  LDY   #$00   
1B31   71 C3                  ADC   (TXTPTR),y   
1B33   38                     SEC   
1B34   E9 30                  SBC   #$30   
1B36                L3C3A:    
1B36   85 A9                  STA   EXPON   
1B38   4C B8 1A               JMP   FIN4   
1B3B                          ; ----------------------------------------------------------------------------
1B3B                          ; these values are /1000 of what the labels say
1B3B                CON_99999999_9:   
1B3B   91 43 4F F8            DB   $91,$43,$4F,$F8   
1B3F                CON_999999999:   
1B3F   94 74 23 F7            DB   $94,$74,$23,$F7   
1B43                CON_BILLION:   
1B43   94 74 24 00            DB   $94,$74,$24,$00   
1B47                          ; ----------------------------------------------------------------------------
1B47                          ; PRINT "IN <LINE #>"
1B47                          ; ----------------------------------------------------------------------------
1B47                INPRT:    
1B47   A9 8D                  LDA   #<QT_IN   
1B49   A0 03                  LDY   #>QT_IN   
1B4B   20 5F 1B               JSR   GOSTROUT2   
1B4E   A5 88                  LDA   CURLIN+1   
1B50   A6 87                  LDX   CURLIN   
1B52                          ; ----------------------------------------------------------------------------
1B52                          ; PRINT A,X AS DECIMAL INTEGER
1B52                          ; ----------------------------------------------------------------------------
1B52                LINPRT:   
1B52   85 AD                  STA   FAC+1   
1B54   86 AE                  STX   FAC+2   
1B56   A2 90                  LDX   #$90   
1B58   38                     SEC   
1B59   20 DC 19               JSR   FLOAT2   
1B5C   20 62 1B               JSR   FOUT   
1B5F                GOSTROUT2:   
1B5F   4C B7 0A               JMP   STROUT   
1B62                          ; ----------------------------------------------------------------------------
1B62                          ; CONVERT (FAC) TO STRING STARTING AT STACK
1B62                          ; RETURN WITH (Y,A) POINTING AT STRING
1B62                          ; ----------------------------------------------------------------------------
1B62                FOUT:     
1B62   A0 01                  LDY   #$01   
1B64                          ; ----------------------------------------------------------------------------
1B64                          ; "STR$" FUNCTION ENTERS HERE, WITH (Y)=0
1B64                          ; SO THAT RESULT STRING STARTS AT STACK-1
1B64                          ; (THIS IS USED AS A FLAG)
1B64                          ; ----------------------------------------------------------------------------
1B64                FOUT1:    
1B64   A9 20                  LDA   #$20   
1B66   24 B0                  BIT   FACSIGN   
1B68   10 02                  BPL   L3C73   
1B6A   A9 2D                  LDA   #$2D   
1B6C                L3C73:    
1B6C   99 FF 00               STA   0xFF,y   
1B6F   85 B0                  STA   FACSIGN   
1B71   84 BA                  STY   STRNG2   
1B73   C8                     INY   
1B74   A9 30                  LDA   #$30   
1B76   A6 AC                  LDX   FAC   
1B78   D0 03                  BNE   L3C84   
1B7A   4C 7D 1C               JMP   FOUT4   
1B7D                L3C84:    
1B7D   A9 00                  LDA   #$00   
1B7F   E0 80                  CPX   #$80   
1B81   F0 02                  BEQ   L3C8C   
1B83   B0 09                  BCS   L3C95   
1B85                L3C8C:    
1B85   A9 43                  LDA   #<CON_BILLION   
1B87   A0 1B                  LDY   #>CON_BILLION   
1B89   20 EF 17               JSR   FMULT   
1B8C   A9 FA                  LDA   #-6   ; exponent adjustment
1B8E                L3C95:    
1B8E   85 A8                  STA   INDX   
1B90                          ; ----------------------------------------------------------------------------
1B90                          ; ADJUST UNTIL 1E8 <= (FAC) <1E9
1B90                          ; ----------------------------------------------------------------------------
1B90                L3C97:    
1B90   A9 3F                  LDA   #<CON_999999999   
1B92   A0 1B                  LDY   #>CON_999999999   
1B94   20 EC 19               JSR   FCOMP   
1B97   F0 1E                  BEQ   L3CBE   
1B99   10 12                  BPL   L3CB4   
1B9B                L3CA2:    
1B9B   A9 3B                  LDA   #<CON_99999999_9   
1B9D   A0 1B                  LDY   #>CON_99999999_9   
1B9F   20 EC 19               JSR   FCOMP   
1BA2   F0 02                  BEQ   L3CAD   
1BA4   10 0E                  BPL   L3CBB   
1BA6                L3CAD:    
1BA6   20 92 18               JSR   MUL10   
1BA9   C6 A8                  DEC   INDX   
1BAB   D0 EE                  BNE   L3CA2   
1BAD                L3CB4:    
1BAD   20 AD 18               JSR   DIV10   
1BB0   E6 A8                  INC   INDX   
1BB2   D0 DC                  BNE   L3C97   
1BB4                L3CBB:    
1BB4   20 42 16               JSR   FADDH   
1BB7                L3CBE:    
1BB7   20 25 1A               JSR   QINT   
1BBA                          ; ----------------------------------------------------------------------------
1BBA                          ; FAC+1...FAC+4 IS NOW IN INTEGER FORM
1BBA                          ; WITH POWER OF TEN ADJUSTMENT IN TMPEXP
1BBA                          ; 
1BBA                          ; IF -10 < TMPEXP > 1, PRINT IN DECIMAL FORM
1BBA                          ; OTHERWISE, PRINT IN EXPONENTIAL FORM
1BBA                          ; ----------------------------------------------------------------------------
1BBA   A2 01                  LDX   #$01   
1BBC   A5 A8                  LDA   INDX   
1BBE   18                     CLC   
1BBF   69 07                  ADC   #3*BYTES_FP-5   
1BC1   30 09                  BMI   L3CD3   
1BC3   C9 08                  CMP   #3*BYTES_FP-4   
1BC5   B0 06                  BCS   L3CD4   
1BC7   69 FF                  ADC   #$FF   
1BC9   AA                     TAX   
1BCA   A9 02                  LDA   #$02   
1BCC                L3CD3:    
1BCC   38                     SEC   
1BCD                L3CD4:    
1BCD   E9 02                  SBC   #$02   
1BCF   85 A9                  STA   EXPON   
1BD1   86 A8                  STX   INDX   
1BD3   8A                     TXA   
1BD4   F0 02                  BEQ   L3CDF   
1BD6   10 13                  BPL   L3CF2   
1BD8                L3CDF:    
1BD8   A4 BA                  LDY   STRNG2   
1BDA   A9 2E                  LDA   #$2E   
1BDC   C8                     INY   
1BDD   99 FF 00               STA   0xFF,y   
1BE0   8A                     TXA   
1BE1   F0 06                  BEQ   L3CF0   
1BE3   A9 30                  LDA   #$30   
1BE5   C8                     INY   
1BE6   99 FF 00               STA   0xFF,y   
1BE9                L3CF0:    
1BE9   84 BA                  STY   STRNG2   
1BEB                          ; ----------------------------------------------------------------------------
1BEB                          ; NOW DIVIDE BY POWERS OF TEN TO GET SUCCESSIVE DIGITS
1BEB                          ; ----------------------------------------------------------------------------
1BEB                L3CF2:    
1BEB   A0 00                  LDY   #$00   
1BED   A2 80                  LDX   #$80   
1BEF                L3CF6:    
1BEF   A5 AF                  LDA   FAC_LAST   
1BF1   18                     CLC   
1BF2   79 90 1C               ADC   DECTBL+2,y   
1BF5   85 AF                  STA   FAC+3   
1BF7   A5 AE                  LDA   FAC+2   
1BF9   79 8F 1C               ADC   DECTBL+1,y   
1BFC   85 AE                  STA   FAC+2   
1BFE   A5 AD                  LDA   FAC+1   
1C00   79 8E 1C               ADC   DECTBL,y   
1C03   85 AD                  STA   FAC+1   
1C05   E8                     INX   
1C06   B0 04                  BCS   L3D1A   
1C08   10 E5                  BPL   L3CF6   
1C0A   30 02                  BMI   L3D1C   
1C0C                L3D1A:    
1C0C   30 E1                  BMI   L3CF6   
1C0E                L3D1C:    
1C0E   8A                     TXA   
1C0F   90 04                  BCC   L3D23   
1C11   49 FF                  EOR   #$FF   
1C13   69 0A                  ADC   #$0A   
1C15                L3D23:    
1C15   69 2F                  ADC   #$2F   
1C17   C8                     INY   
1C18   C8                     INY   
1C19   C8                     INY   
1C1A   84 95                  STY   VARPNT   
1C1C   A4 BA                  LDY   STRNG2   
1C1E   C8                     INY   
1C1F   AA                     TAX   
1C20   29 7F                  AND   #$7F   
1C22   99 FF 00               STA   0xFF,y   
1C25   C6 A8                  DEC   INDX   
1C27   D0 06                  BNE   L3D3E   
1C29   A9 2E                  LDA   #$2E   
1C2B   C8                     INY   
1C2C   99 FF 00               STA   0xFF,y   
1C2F                L3D3E:    
1C2F   84 BA                  STY   STRNG2   
1C31   A4 95                  LDY   VARPNT   
1C33   8A                     TXA   
1C34   49 FF                  EOR   #$FF   
1C36   29 80                  AND   #$80   
1C38   AA                     TAX   
1C39   C0 12                  CPY   #DECTBL_END-DECTBL   
1C3B   D0 B2                  BNE   L3CF6   
1C3D                          ; ----------------------------------------------------------------------------
1C3D                          ; NINE DIGITS HAVE BEEN STORED IN STRING.  NOW LOOK
1C3D                          ; BACK AND LOP OFF TRAILING ZEROES AND A TRAILING
1C3D                          ; DECIMAL POINT.
1C3D                          ; ----------------------------------------------------------------------------
1C3D   A4 BA                  LDY   STRNG2   
1C3F                L3D4E:    
1C3F   B9 FF 00               LDA   0xFF,y   
1C42   88                     DEY   
1C43   C9 30                  CMP   #$30   
1C45   F0 F8                  BEQ   L3D4E   
1C47   C9 2E                  CMP   #$2E   
1C49   F0 01                  BEQ   L3D5B   
1C4B   C8                     INY   
1C4C                L3D5B:    
1C4C   A9 2B                  LDA   #$2B   
1C4E   A6 A9                  LDX   EXPON   
1C50   F0 2E                  BEQ   L3D8F   
1C52   10 08                  BPL   L3D6B   
1C54   A9 00                  LDA   #$00   
1C56   38                     SEC   
1C57   E5 A9                  SBC   EXPON   
1C59   AA                     TAX   
1C5A   A9 2D                  LDA   #$2D   
1C5C                L3D6B:    
1C5C   99 01 01               STA   STACK+1,y   
1C5F   A9 45                  LDA   #$45   
1C61   99 00 01               STA   STACK,y   
1C64   8A                     TXA   
1C65   A2 2F                  LDX   #$2F   
1C67   38                     SEC   
1C68                L3D77:    
1C68   E8                     INX   
1C69   E9 0A                  SBC   #$0A   
1C6B   B0 FB                  BCS   L3D77   
1C6D   69 3A                  ADC   #$3A   
1C6F   99 03 01               STA   STACK+3,y   
1C72   8A                     TXA   
1C73   99 02 01               STA   STACK+2,y   
1C76   A9 00                  LDA   #$00   
1C78   99 04 01               STA   STACK+4,y   
1C7B   F0 08                  BEQ   L3D94   
1C7D                FOUT4:    
1C7D   99 FF 00               STA   0xFF,y   
1C80                L3D8F:    
1C80   A9 00                  LDA   #$00   
1C82   99 00 01               STA   STACK,y   
1C85                L3D94:    
1C85   A9 00                  LDA   #$00   
1C87   A0 01                  LDY   #$01   
1C89   60                     RTS   
1C8A                          ; ----------------------------------------------------------------------------
1C8A                CON_HALF:   
1C8A   80 00 00 00            DB   $80,$00,$00,$00   
1C8E                          ; ----------------------------------------------------------------------------
1C8E                          ; POWERS OF 10 FROM 1E8 DOWN TO 1,
1C8E                          ; AS 32-BIT INTEGERS, WITH ALTERNATING SIGNS
1C8E                          ; ----------------------------------------------------------------------------
1C8E                DECTBL:   
1C8E   FE 79 60               DB   $FE,$79,$60   ; -100000
1C91   00 27 10               DB   $00,$27,$10   ; 10000
1C94   FF FC 18               DB   $FF,$FC,$18   ; -1000
1C97   00 00 64               DB   $00,$00,$64   ; 100
1C9A   FF FF F6               DB   $FF,$FF,$F6   ; -10
1C9D   00 00 01               DB   $00,$00,$01   ; 1
1CA0                DECTBL_END:   
1CA0                          ; ----------------------------------------------------------------------------
1CA0                          ; "SQR" FUNCTION
1CA0                          ; ----------------------------------------------------------------------------
1CA0                SQR:      
1CA0   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
1CA3   A9 8A                  LDA   #<CON_HALF   
1CA5   A0 1C                  LDY   #>CON_HALF   
1CA7   20 3F 19               JSR   LOAD_FAC_FROM_YA   
1CAA                          ; ----------------------------------------------------------------------------
1CAA                          ; EXPONENTIATION OPERATION
1CAA                          ; 
1CAA                          ; ARG ^ FAC  =  EXP( LOG(ARG) * FAC )
1CAA                          ; ----------------------------------------------------------------------------
1CAA                FPWRT:    
1CAA   F0 63                  BEQ   EXP   
1CAC   A5 B3                  LDA   ARG   
1CAE   D0 03                  BNE   L3DD5   
1CB0   4C E7 16               JMP   STA_IN_FAC_SIGN_AND_EXP   
1CB3                L3DD5:    
1CB3   A2 9C                  LDX   #TEMP3   
1CB5   A0 00                  LDY   #$00   
1CB7   20 6C 19               JSR   STORE_FAC_AT_YX_ROUNDED   
1CBA   A5 B7                  LDA   ARGSIGN   
1CBC   10 0F                  BPL   L3DEF   
1CBE   20 56 1A               JSR   INT   
1CC1   A9 9C                  LDA   #TEMP3   
1CC3   A0 00                  LDY   #$00   
1CC5   20 EC 19               JSR   FCOMP   
1CC8   D0 03                  BNE   L3DEF   
1CCA   98                     TYA   
1CCB   A4 5B                  LDY   CHARAC   
1CCD                L3DEF:    
1CCD   20 91 19               JSR   MFA   
1CD0   98                     TYA   
1CD1   48                     PHA   
1CD2   20 B1 17               JSR   LOG   
1CD5   A9 9C                  LDA   #TEMP3   
1CD7   A0 00                  LDY   #$00   
1CD9   20 EF 17               JSR   FMULT   
1CDC   20 0F 1D               JSR   EXP   
1CDF   68                     PLA   
1CE0   4A                     LSR   a   
1CE1   90 0A                  BCC   L3E0F   
1CE3                          ; ----------------------------------------------------------------------------
1CE3                          ; NEGATE VALUE IN FAC
1CE3                          ; ----------------------------------------------------------------------------
1CE3                NEGOP:    
1CE3   A5 AC                  LDA   FAC   
1CE5   F0 06                  BEQ   L3E0F   
1CE7   A5 B0                  LDA   FACSIGN   
1CE9   49 FF                  EOR   #$FF   
1CEB   85 B0                  STA   FACSIGN   
1CED                L3E0F:    
1CED   60                     RTS   
1CEE                          ; ----------------------------------------------------------------------------
1CEE                CON_LOG_E:   
1CEE   81 38 AA 3B            DB   $81,$38,$AA,$3B   
1CF2                POLY_EXP:   
1CF2   06                     DB   $06   
1CF3   74 63 90 8C            DB   $74,$63,$90,$8C   
1CF7   77 23 0C AB            DB   $77,$23,$0C,$AB   
1CFB   7A 1E 94 00            DB   $7A,$1E,$94,$00   
1CFF   7C 63 42 80            DB   $7C,$63,$42,$80   
1D03   7E 75 FE D0            DB   $7E,$75,$FE,$D0   
1D07   80 31 72 15            DB   $80,$31,$72,$15   
1D0B   81 00 00 00            DB   $81,$00,$00,$00   
1D0F                          ; ----------------------------------------------------------------------------
1D0F                          ; "EXP" FUNCTION
1D0F                          ; 
1D0F                          ; FAC = E ^ FAC
1D0F                          ; ----------------------------------------------------------------------------
1D0F                EXP:      
1D0F   A9 EE                  LDA   #<CON_LOG_E   
1D11   A0 1C                  LDY   #>CON_LOG_E   
1D13   20 EF 17               JSR   FMULT   
1D16   A5 B9                  LDA   FACEXTENSION   
1D18   69 50                  ADC   #$50   
1D1A   90 03                  BCC   L3E4E   
1D1C   20 B6 19               JSR   INCREMENT_MANTISSA   
1D1F                L3E4E:    
1D1F   85 A3                  STA   ARGEXTENSION   
1D21   20 A2 19               JSR   MAF   
1D24   A5 AC                  LDA   FAC   
1D26   C9 88                  CMP   #$88   
1D28   90 03                  BCC   L3E5C   
1D2A                L3E59:    
1D2A   20 84 18               JSR   OUTOFRNG   
1D2D                L3E5C:    
1D2D   20 56 1A               JSR   INT   
1D30   A5 5B                  LDA   CHARAC   
1D32   18                     CLC   
1D33   69 81                  ADC   #$81   
1D35   F0 F3                  BEQ   L3E59   
1D37   38                     SEC   
1D38   E9 01                  SBC   #$01   
1D3A   48                     PHA   
1D3B   A2 04                  LDX   #BYTES_FP   
1D3D                L3E6C:    
1D3D   B5 B3                  LDA   ARG,x   
1D3F   B4 AC                  LDY   FAC,x   
1D41   95 AC                  STA   FAC,x   
1D43   94 B3                  STY   *ARG,x   
1D45   CA                     DEX   
1D46   10 F5                  BPL   L3E6C   
1D48   A5 A3                  LDA   ARGEXTENSION   
1D4A   85 B9                  STA   FACEXTENSION   
1D4C   20 4C 16               JSR   FSUBT   
1D4F   20 E3 1C               JSR   NEGOP   
1D52   A9 F2                  LDA   #<POLY_EXP   
1D54   A0 1C                  LDY   #>POLY_EXP   
1D56   20 78 1D               JSR   POLYNOMIAL   
1D59   A9 00                  LDA   #$00   
1D5B   85 B8                  STA   SGNCPR   
1D5D   68                     PLA   
1D5E   20 69 18               JSR   ADD_EXPONENTS1   
1D61   60                     RTS   
1D62                          ; ----------------------------------------------------------------------------
1D62                          ; ODD POLYNOMIAL SUBROUTINE
1D62                          ; 
1D62                          ; F(X) = X * P(X^2)
1D62                          ; 
1D62                          ; WHERE:  X IS VALUE IN FAC
1D62                          ; Y,A POINTS AT COEFFICIENT TABLE
1D62                          ; FIRST BYTE OF COEFF. TABLE IS N
1D62                          ; COEFFICIENTS FOLLOW, HIGHEST POWER FIRST
1D62                          ; 
1D62                          ; P(X^2) COMPUTED USING NORMAL POLYNOMIAL SUBROUTINE
1D62                          ; ----------------------------------------------------------------------------
1D62                POLYNOMIAL_ODD:   
1D62   85 BA                  STA   STRNG2   
1D64   84 BB                  STY   STRNG2+1   
1D66   20 62 19               JSR   STORE_FAC_IN_TEMP1_ROUNDED   
1D69   A9 A4                  LDA   #TEMP1X   
1D6B   20 EF 17               JSR   FMULT   
1D6E   20 7C 1D               JSR   SERMAIN   
1D71   A9 A4                  LDA   #TEMP1X   
1D73   A0 00                  LDY   #$00   
1D75   4C EF 17               JMP   FMULT   
1D78                          ; ----------------------------------------------------------------------------
1D78                          ; NORMAL POLYNOMIAL SUBROUTINE
1D78                          ; 
1D78                          ; P(X) = C(0)*X^N + C(1)*X^(N-1) + ... + C(N)
1D78                          ; 
1D78                          ; WHERE:  X IS VALUE IN FAC
1D78                          ; Y,A POINTS AT COEFFICIENT TABLE
1D78                          ; FIRST BYTE OF COEFF. TABLE IS N
1D78                          ; COEFFICIENTS FOLLOW, HIGHEST POWER FIRST
1D78                          ; ----------------------------------------------------------------------------
1D78                POLYNOMIAL:   
1D78   85 BA                  STA   STRNG2   
1D7A   84 BB                  STY   STRNG2+1   
1D7C                SERMAIN:   
1D7C   20 5F 19               JSR   STORE_FAC_IN_TEMP2_ROUNDED   
1D7F   B1 BA                  LDA   (STRNG2),y   
1D81   85 B1                  STA   SERLEN   
1D83   A4 BA                  LDY   STRNG2   
1D85   C8                     INY   
1D86   98                     TYA   
1D87   D0 02                  BNE   L3EBA   
1D89   E6 BB                  INC   STRNG2+1   
1D8B                L3EBA:    
1D8B   85 BA                  STA   STRNG2   
1D8D   A4 BB                  LDY   STRNG2+1   
1D8F                L3EBE:    
1D8F   20 EF 17               JSR   FMULT   
1D92   A5 BA                  LDA   STRNG2   
1D94   A4 BB                  LDY   STRNG2+1   
1D96   18                     CLC   
1D97   69 04                  ADC   #BYTES_FP   
1D99   90 01                  BCC   L3ECB   
1D9B   C8                     INY   
1D9C                L3ECB:    
1D9C   85 BA                  STA   STRNG2   
1D9E   84 BB                  STY   STRNG2+1   
1DA0   20 60 16               JSR   FADD   
1DA3   A9 A8                  LDA   #TEMP2   
1DA5   A0 00                  LDY   #$00   
1DA7   C6 B1                  DEC   SERLEN   
1DA9   D0 E4                  BNE   L3EBE   
1DAB                RTS19:    
1DAB   60                     RTS   
1DAC                          ; ----------------------------------------------------------------------------
1DAC                          ; "RND" FUNCTION
1DAC                          ; ----------------------------------------------------------------------------
1DAC                CONRND1:   
1DAC   98 35 44 7A            DB   $98,$35,$44,$7A   
1DB0                CONRND2:   
1DB0   68 28 B1 46            DB   $68,$28,$B1,$46   
1DB4                RND:      
1DB4   20 BE 19               JSR   SIGN   
1DB7   AA                     TAX   
1DB8   30 18                  BMI   L3F01   
1DBA   A9 D4                  LDA   #<RNDSEED   
1DBC   A0 00                  LDY   #>RNDSEED   
1DBE   20 3F 19               JSR   LOAD_FAC_FROM_YA   
1DC1   8A                     TXA   
1DC2   F0 E7                  BEQ   RTS19   
1DC4   A9 AC                  LDA   #<CONRND1   
1DC6   A0 1D                  LDY   #>CONRND1   
1DC8   20 EF 17               JSR   FMULT   
1DCB   A9 B0                  LDA   #<CONRND2   
1DCD   A0 1D                  LDY   #>CONRND2   
1DCF   20 60 16               JSR   FADD   
1DD2                L3F01:    
1DD2   A6 AF                  LDX   FAC_LAST   
1DD4   A5 AD                  LDA   FAC+1   
1DD6   85 AF                  STA   FAC_LAST   
1DD8   86 AD                  STX   FAC+1   
1DDA   A9 00                  LDA   #$00   
1DDC   85 B0                  STA   FACSIGN   
1DDE   A5 AC                  LDA   FAC   
1DE0   85 B9                  STA   FACEXTENSION   
1DE2   A9 80                  LDA   #$80   
1DE4   85 AC                  STA   FAC   
1DE6   20 C9 16               JSR   NORMALIZE_FAC2   
1DE9   A2 D4                  LDX   #<RNDSEED   
1DEB   A0 00                  LDY   #>RNDSEED   
1DED                GOMOVMF:   
1DED   4C 6C 19               JMP   STORE_FAC_AT_YX_ROUNDED   
1DF0                          ; ----------------------------------------------------------------------------
1DF0                          ; "COS" FUNCTION
1DF0                          ; ----------------------------------------------------------------------------
1DF0                COS:      
1DF0   A9 6C                  LDA   #<CON_PI_HALF   
1DF2   A0 1E                  LDY   #>CON_PI_HALF   
1DF4   20 60 16               JSR   FADD   
1DF7                          ; ----------------------------------------------------------------------------
1DF7                          ; "SIN" FUNCTION
1DF7                          ; ----------------------------------------------------------------------------
1DF7                SIN:      
1DF7   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
1DFA   A9 70                  LDA   #<CON_PI_DOUB   
1DFC   A0 1E                  LDY   #>CON_PI_DOUB   
1DFE   A6 B7                  LDX   ARGSIGN   
1E00   20 B6 18               JSR   DIV   
1E03   20 9F 19               JSR   COPY_FAC_TO_ARG_ROUNDED   
1E06   20 56 1A               JSR   INT   
1E09   A9 00                  LDA   #$00   
1E0B   85 B8                  STA   STRNG1   
1E0D   20 4C 16               JSR   FSUBT   
1E10                          ; ----------------------------------------------------------------------------
1E10                          ; (FAC) = ANGLE AS A FRACTION OF A FULL CIRCLE
1E10                          ; 
1E10                          ; NOW FOLD THE RANGE INTO A QUARTER CIRCLE
1E10                          ; 
1E10                          ; <<< THERE ARE MUCH SIMPLER WAYS TO DO THIS >>>
1E10                          ; ----------------------------------------------------------------------------
1E10   A9 74                  LDA   #<QUARTER   
1E12   A0 1E                  LDY   #>QUARTER   
1E14   20 49 16               JSR   FSUB   
1E17   A5 B0                  LDA   FACSIGN   
1E19   48                     PHA   
1E1A   10 0D                  BPL   SIN1   
1E1C   20 42 16               JSR   FADDH   
1E1F   A5 B0                  LDA   FACSIGN   
1E21   30 09                  BMI   L3F5B   
1E23   A5 63                  LDA   CPRMASK   
1E25   49 FF                  EOR   #$FF   
1E27   85 63                  STA   CPRMASK   
1E29                          ; ----------------------------------------------------------------------------
1E29                          ; IF FALL THRU, RANGE IS 0...1/2
1E29                          ; IF BRANCH HERE, RANGE IS 0...1/4
1E29                          ; ----------------------------------------------------------------------------
1E29                SIN1:     
1E29   20 E3 1C               JSR   NEGOP   
1E2C                          ; ----------------------------------------------------------------------------
1E2C                          ; IF FALL THRU, RANGE IS -1/2...0
1E2C                          ; IF BRANCH HERE, RANGE IS -1/4...0
1E2C                          ; ----------------------------------------------------------------------------
1E2C                L3F5B:    
1E2C   A9 74                  LDA   #<QUARTER   
1E2E   A0 1E                  LDY   #>QUARTER   
1E30   20 60 16               JSR   FADD   
1E33   68                     PLA   
1E34   10 03                  BPL   L3F68   
1E36   20 E3 1C               JSR   NEGOP   
1E39                L3F68:    
1E39   A9 78                  LDA   #<POLY_SIN   
1E3B   A0 1E                  LDY   #>POLY_SIN   
1E3D   4C 62 1D               JMP   POLYNOMIAL_ODD   
1E40                          ; ----------------------------------------------------------------------------
1E40                          ; "TAN" FUNCTION
1E40                          ; 
1E40                          ; COMPUTE TAN(X) = SIN(X) / COS(X)
1E40                          ; ----------------------------------------------------------------------------
1E40                TAN:      
1E40   20 62 19               JSR   STORE_FAC_IN_TEMP1_ROUNDED   
1E43   A9 00                  LDA   #$00   
1E45   85 63                  STA   CPRMASK   
1E47   20 F7 1D               JSR   SIN   
1E4A   A2 9C                  LDX   #TEMP3   
1E4C   A0 00                  LDY   #$00   
1E4E   20 ED 1D               JSR   GOMOVMF   
1E51   A9 A4                  LDA   #TEMP1+(5-BYTES_FP)   
1E53   A0 00                  LDY   #$00   
1E55   20 3F 19               JSR   LOAD_FAC_FROM_YA   
1E58   A9 00                  LDA   #$00   
1E5A   85 B0                  STA   FACSIGN   
1E5C   A5 63                  LDA   CPRMASK   
1E5E   20 68 1E               JSR   TAN1   
1E61   A9 9C                  LDA   #TEMP3   
1E63   A0 00                  LDY   #$00   
1E65   4C BE 18               JMP   FDIV   
1E68                TAN1:     
1E68   48                     PHA   
1E69   4C 29 1E               JMP   SIN1   
1E6C                          ; ----------------------------------------------------------------------------
1E6C                CON_PI_HALF:   
1E6C   81 49 0F DB            DB   $81,$49,$0F,$DB   
1E70                CON_PI_DOUB:   
1E70   83 49 0F DB            DB   $83,$49,$0F,$DB   
1E74                QUARTER:   
1E74   7F 00 00 00            DB   $7F,$00,$00,$00   
1E78                POLY_SIN:   
1E78   04 86 1E D7 FB 87 99 26 DB   $04,$86,$1E,$D7,$FB,$87,$99,$26   
1E80   65 87 23 34 58 86 A5 5D DB   $65,$87,$23,$34,$58,$86,$A5,$5D   
1E88   E1 83 49 0F DB         DB   $E1,$83,$49,$0F,$DB   
1E8D                          ; ----------------------------------------------------------------------------
1E8D                          ; "ATN" FUNCTION
1E8D                          ; ----------------------------------------------------------------------------
1E8D                ATN:      
1E8D   A5 B0                  LDA   FACSIGN   
1E8F   48                     PHA   
1E90   10 03                  BPL   L3FDB   
1E92   20 E3 1C               JSR   NEGOP   
1E95                L3FDB:    
1E95   A5 AC                  LDA   FAC   
1E97   48                     PHA   
1E98   C9 81                  CMP   #$81   
1E9A   90 07                  BCC   L3FE9   
1E9C   A9 90                  LDA   #<CON_ONE   
1E9E   A0 17                  LDY   #>CON_ONE   
1EA0   20 BE 18               JSR   FDIV   
1EA3                          ; ----------------------------------------------------------------------------
1EA3                          ; 0 <= X <= 1
1EA3                          ; 0 <= ATN(X) <= PI/8
1EA3                          ; ----------------------------------------------------------------------------
1EA3                L3FE9:    
1EA3   A9 BD                  LDA   #<POLY_ATN   
1EA5   A0 1E                  LDY   #>POLY_ATN   
1EA7   20 62 1D               JSR   POLYNOMIAL_ODD   
1EAA   68                     PLA   
1EAB   C9 81                  CMP   #$81   
1EAD   90 07                  BCC   L3FFC   
1EAF   A9 6C                  LDA   #<CON_PI_HALF   
1EB1   A0 1E                  LDY   #>CON_PI_HALF   
1EB3   20 49 16               JSR   FSUB   
1EB6                L3FFC:    
1EB6   68                     PLA   
1EB7   10 03                  BPL   L4002   
1EB9   4C E3 1C               JMP   NEGOP   
1EBC                L4002:    
1EBC   60                     RTS   
1EBD                          ; ----------------------------------------------------------------------------
1EBD                POLY_ATN:   
1EBD   08                     DB   $08   
1EBE   78 3A C5 37            DB   $78,$3A,$C5,$37   
1EC2   7B 83 A2 5C            DB   $7B,$83,$A2,$5C   
1EC6   7C 2E DD 4D            DB   $7C,$2E,$DD,$4D   
1ECA   7D 99 B0 1E            DB   $7D,$99,$B0,$1E   
1ECE   7D 59 ED 24            DB   $7D,$59,$ED,$24   
1ED2   7E 91 72 00            DB   $7E,$91,$72,$00   
1ED6   7E 4C B9 73            DB   $7E,$4C,$B9,$73   
1EDA   7F AA AA 53            DB   $7F,$AA,$AA,$53   
1EDE   81 00 00 00            DB   $81,$00,$00,$00   
1EE2                GENERIC_CHRGET:   
1EE2   E6 C3                  INC   TXTPTR   
1EE4   D0 02                  BNE   GENERIC_CHRGOT   
1EE6   E6 C4                  INC   TXTPTR+1   
1EE8                GENERIC_CHRGOT:   
1EE8                GENERIC_TXTPTR:   =   GENERIC_CHRGOT + 1   
1EE8   AD 60 EA               LDA   $EA60   
1EEB   C9 3A                  CMP   #$3A   
1EED   B0 0A                  BCS   L4058   
1EEF                GENERIC_CHRGOT2:   
1EEF   C9 20                  CMP   #$20   
1EF1   F0 EF                  BEQ   GENERIC_CHRGET   
1EF3   38                     SEC   
1EF4   E9 30                  SBC   #$30   
1EF6   38                     SEC   
1EF7   E9 D0                  SBC   #$D0   
1EF9                L4058:    
1EF9   60                     RTS   
1EFA                GENERIC_RNDSEED:   
1EFA                          ; random number seed
1EFA   80 4F C7 52            DB   $80,$4F,$C7,$52   
1EFE                GENERIC_CHRGET_END:   
1EFE                          ; ----------------------------------------------------------------------------
1EFE                PR_WRITTEN_BY:   
1EFE   A9 42                  LDA   #<QT_WRITTEN_BY   
1F00   A0 20                  LDY   #>QT_WRITTEN_BY   
1F02   20 B7 0A               JSR   STROUT   
1F05                COLD_START:   
1F05   A2 FF                  LDX   #$FF   
1F07   86 88                  STX   CURLIN+1   
1F09   9A                     TXS   
1F0A   A9 05                  LDA   #<COLD_START   
1F0C   A0 1F                  LDY   #>COLD_START   
1F0E   85 01                  STA   GORESTART+1   
1F10   84 02                  STY   GORESTART+2   
1F12   85 04                  STA   GOSTROUT+1   
1F14   84 05                  STY   GOSTROUT+2   
1F16   A9 F9                  LDA   #<AYINT   
1F18   A0 0F                  LDY   #>AYINT   
1F1A   85 06                  STA   GOAYINT   
1F1C   84 07                  STY   GOAYINT+1   
1F1E   A9 B5                  LDA   #<GIVAYF   
1F20   A0 11                  LDY   #>GIVAYF   
1F22   85 08                  STA   GOGIVEAYF   
1F24   84 09                  STY   GOGIVEAYF+1   
1F26   A9 4C                  LDA   #$4C   
1F28   85 00                  STA   GORESTART   
1F2A   85 03                  STA   GOSTROUT   
1F2C   85 A1                  STA   JMPADRS   
1F2E   85 0A                  STA   USR   
1F30   A9 7C                  LDA   #<IQERR   
1F32   A0 10                  LDY   #>IQERR   
1F34   85 0B                  STA   USR+1   
1F36   84 0C                  STY   USR+2   
1F38   A9 48                  LDA   #WIDTH   
1F3A   85 0F                  STA   Z17   
1F3C   A9 38                  LDA   #WIDTH2   
1F3E   85 10                  STA   Z18   
1F40   A2 1C                  LDX   #GENERIC_CHRGET_END-GENERIC_CHRGET   
1F42                L4098:    
1F42   BD E1 1E               LDA   GENERIC_CHRGET-1,x   
1F45   95 BB                  STA   CHRGET-1,x   
1F47   CA                     DEX   
1F48   D0 F8                  BNE   L4098   
1F4A   8A                     TXA   
1F4B   85 B2                  STA   SHIFTSIGNEXT   
1F4D   85 67                  STA   LASTPT+1   
1F4F   85 0D                  STA   Z15   
1F51   85 0E                  STA   POSX   
1F53   48                     PHA   
1F54   85 64                  STA   Z14   
1F56   A9 03                  LDA   #$03   
1F58   85 A0                  STA   DSCLEN   
1F5A   A9 2C                  LDA   #$2C   
1F5C   85 12                  STA   LINNUM+1   
1F5E   20 60 0A               JSR   CRDO   
1F61   A2 68                  LDX   #TEMPST   
1F63   86 65                  STX   TEMPPT   
1F65   A9 66                  LDA   #<QT_MEMORY_SIZE   
1F67   A0 20                  LDY   #>QT_MEMORY_SIZE   
1F69   20 B7 0A               JSR   STROUT   
1F6C   20 3A 0B               JSR   NXIN   
1F6F   86 C3                  STX   TXTPTR   
1F71   84 C4                  STY   TXTPTR+1   
1F73   20 BC 00               JSR   CHRGET   
1F76   C9 41                  CMP   #$41   
1F78   F0 84                  BEQ   PR_WRITTEN_BY   
1F7A   A8                     TAY   
1F7B   D0 21                  BNE   L40EE   
1F7D   A9 00                  LDA   #<RAMSTART2   
1F7F   A0 22                  LDY   #>RAMSTART2   
1F81   85 11                  STA   LINNUM   
1F83   84 12                  STY   LINNUM+1   
1F85   A0 00                  LDY   #$00   
1F87                L40D7:    
1F87   E6 11                  INC   LINNUM   
1F89   D0 02                  BNE   L40DD   
1F8B   E6 12                  INC   LINNUM+1   
1F8D                L40DD:    
1F8D   A9 92                  LDA   #$92   ; 10010010 / 00100100
1F8F   91 11                  STA   (LINNUM),y   
1F91   D1 11                  CMP   (LINNUM),y   
1F93   D0 15                  BNE   L40FA   
1F95   0A                     ASL   a   
1F96   91 11                  STA   (LINNUM),y   
1F98   D1 11                  CMP   (LINNUM),y   
1F9A   F0 EB                  BEQ   L40D7   ; old: faster
1F9C   D0 0C                  BNE   L40FA   
1F9E                L40EE:    
1F9E   20 C2 00               JSR   CHRGOT   
1FA1   20 73 09               JSR   LINGET   
1FA4   A8                     TAY   
1FA5   F0 03                  BEQ   L40FA   
1FA7   4C 00 0E               JMP   SYNERR   
1FAA                L40FA:    
1FAA   A5 11                  LDA   LINNUM   
1FAC   A4 12                  LDY   LINNUM+1   
1FAE   85 85                  STA   MEMSIZ   
1FB0   84 86                  STY   MEMSIZ+1   
1FB2   85 81                  STA   FRETOP   
1FB4   84 82                  STY   FRETOP+1   
1FB6                L4106:    
1FB6   A9 72                  LDA   #<QT_TERMINAL_WIDTH   
1FB8   A0 20                  LDY   #>QT_TERMINAL_WIDTH   
1FBA   20 B7 0A               JSR   STROUT   
1FBD   20 3A 0B               JSR   NXIN   
1FC0   86 C3                  STX   TXTPTR   
1FC2   84 C4                  STY   TXTPTR+1   
1FC4   20 BC 00               JSR   CHRGET   
1FC7   A8                     TAY   
1FC8   F0 1C                  BEQ   L4136   
1FCA   20 73 09               JSR   LINGET   
1FCD   A5 12                  LDA   LINNUM+1   
1FCF   D0 E5                  BNE   L4106   
1FD1   A5 11                  LDA   LINNUM   
1FD3   C9 10                  CMP   #$10   
1FD5   90 DF                  BCC   L4106   
1FD7   85 0F                  STA   Z17   
1FD9                L4129:    
1FD9   E9 0E                  SBC   #$0E   
1FDB   B0 FC                  BCS   L4129   
1FDD   49 FF                  EOR   #$FF   
1FDF   E9 0C                  SBC   #$0C   
1FE1   18                     CLC   
1FE2   65 0F                  ADC   Z17   
1FE4   85 10                  STA   Z18   
1FE6                L4136:    
1FE6   A2 00                  LDX   #<RAMSTART2   
1FE8   A0 22                  LDY   #>RAMSTART2   
1FEA   86 79                  STX   TXTTAB   
1FEC   84 7A                  STY   TXTTAB+1   
1FEE   A0 00                  LDY   #$00   
1FF0   98                     TYA   
1FF1   91 79                  STA   (TXTTAB),y   
1FF3   E6 79                  INC   TXTTAB   
1FF5   D0 02                  BNE   L4192   
1FF7   E6 7A                  INC   TXTTAB+1   
1FF9                L4192:    
1FF9   A5 79                  LDA   TXTTAB   
1FFB   A4 7A                  LDY   TXTTAB+1   
1FFD   20 1F 04               JSR   REASON   
2000   20 60 0A               JSR   CRDO   
2003   A5 85                  LDA   MEMSIZ   
2005   38                     SEC   
2006   E5 79                  SBC   TXTTAB   
2008   AA                     TAX   
2009   A5 86                  LDA   MEMSIZ+1   
200B   E5 7A                  SBC   TXTTAB+1   
200D   20 52 1B               JSR   LINPRT   
2010   A9 81                  LDA   #<QT_BYTES_FREE   
2012   A0 20                  LDY   #>QT_BYTES_FREE   
2014   20 B7 0A               JSR   STROUT   
2017   A9 B7                  LDA   #<STROUT   
2019   A0 0A                  LDY   #>STROUT   
201B   85 04                  STA   GOSTROUT+1   
201D   84 05                  STY   GOSTROUT+2   
201F   20 63 06               JSR   SCRTCH   
2022   A9 74                  LDA   #<RESTART   
2024   A0 04                  LDY   #>RESTART   
2026   85 01                  STA   GORESTART+1   
2028   84 02                  STY   GORESTART+2   
202A   6C 01 00               JMP   (GORESTART+1)   
202D                          ; OSI is compiled for ROM, but includes
202D                          ; this unused string
202D   57 41 4E 54 20 53 49 4E 2D 43 4F 53 2D 54 41 4E 2D 41 54 4E DB   "WANT SIN-COS-TAN-ATN"   
2041   00                     DB   0   
2042                QT_WRITTEN_BY:   
2042   0D 0A 0C               DB   CR,LF,$0C   ; FORM FEED
2045   57 52 49 54 54 45 4E 20 42 59 20 52 49 43 48 41 52 44 20 57 2E 20 57 45 49 4C 41 4E 44 2E DB   "WRITTEN BY RICHARD W. WEILAND."   
2063   0D 0A 00               DB   CR,LF,0   
2066                QT_MEMORY_SIZE:   
2066   4D 45 4D 4F 52 59 20 53 49 5A 45 DB   "MEMORY SIZE"   
2071   00                     DB   0   
2072                QT_TERMINAL_WIDTH:   
2072   54 45 52 4D 49 4E 41 4C 20 57 49 44 54 48 DB   "TERMINAL WIDTH"   
2080   00                     DB   0   
2081                QT_BYTES_FREE:   
2081   20 42 59 54 45 53 20 46 52 45 45 DB   " BYTES FREE"   
208C   0D 0A 0D 0A            DB   CR,LF,CR,LF   
2090   4F 53 49 20 36 35 30 32 20 42 41 53 49 43 20 56 45 52 53 49 4F 4E 20 31 2E 30 20 52 45 56 20 33 2E 32 DB   "OSI 6502 BASIC VERSION 1.0 REV 3.2"   
20B2   0D 0A                  DB   CR,LF   
20B4   43 4F 50 59 52 49 47 48 54 20 31 39 37 37 20 42 59 20 4D 49 43 52 4F 53 4F 46 54 20 43 4F 2E DB   "COPYRIGHT 1977 BY MICROSOFT CO."   
20D3   0D 0A 00               DB   CR,LF,0   
20D6                          ; STARTUP AND SERIAL I/O ROUTINES ===========================================================
20D6                          ; BY G. SEARLE 2013 =========================================================================
20D6                NIO0:     EQU   $8000   
20D6                NIO1:     EQU   $9000   
20D6                NIO2:     EQU   $8800   
20D6                NIO3:     EQU   $9800   
20D6                NIO4:     EQU   $8400   
20D6                NIO5:     EQU   $9400   
20D6                NIO6:     EQU   $8C00   
20D6                NIO7:     EQU   $9C00   
20D6                ACIA_BASE:   EQU   nIO0   
20D6                SDR:      EQU   ACIA_BASE   
20D6                SSR:      EQU   ACIA_BASE+1   
20D6                SCMD:     EQU   ACIA_BASE+2   
20D6                SCTL:     EQU   ACIA_BASE+3   
20D6                SCTL_V:   EQU   00011111b   
20D6                SCMD_V:   EQU   00001011b   
20D6                TX_RDY:   EQU   00010000b   
20D6                RX_RDY:   EQU   00001000b   
20D6                          ;.segment "IOHANDLER"
FF00                          .ORG   $FF00   
FF00                RESET:    
FF00                          ; SEI
FF00                          ; CLD
FF00   A2 FC                  LDX   #STACK_TOP   
FF02   9A                     TXS   
FF03   A9 1F                  LDA   #SCTL_V   
FF05   8D 03 80               STA   SCTL   
FF08   A9 0B                  LDA   #SCMD_V   
FF0A   8D 02 80               STA   SCMD   
FF0D                          ; Display startup message
FF0D   A0 00                  LDY   #0   
FF0F                SHOWSTARTMSG:   
FF0F   B9 5B FF               LDA   StartupMessage,Y   
FF12   F0 06                  BEQ   WaitForKeypress   
FF14   20 2F FF               JSR   MONCOUT   
FF17   C8                     INY   
FF18   D0 F5                  BNE   ShowStartMsg   
FF1A                          ; Wait for a cold/warm start selection
FF1A                WAITFORKEYPRESS:   
FF1A   20 3E FF               JSR   MONRDKEY   
FF1D   90 FB                  BCC   WaitForKeypress   
FF1F   29 DF                  AND   #$DF   ; Make upper case
FF21   C9 57                  CMP   #'W'   ; compare with [W]arm start
FF23   F0 07                  BEQ   WarmStart   
FF25   C9 43                  CMP   #'C'   ; compare with [C]old start
FF27   D0 D7                  BNE   Reset   
FF29   4C 05 1F               JMP   COLD_START   ; BASIC cold start
FF2C                WARMSTART:   
FF2C   4C 74 04               JMP   RESTART   ; BASIC warm start
FF2F                MONCOUT:   
FF2F   48                     PHA   
FF30                SERIALOUTWAIT:   
FF30   AD 01 80               LDA   SSR   
FF33   29 10                  AND   #TX_RDY   
FF35   C9 10                  CMP   #TX_RDY   
FF37   D0 F7                  BNE   SerialOutWait   
FF39   68                     PLA   
FF3A   8D 00 80               STA   SDR   
FF3D   60                     RTS   
FF3E                MONRDKEY:   
FF3E   AD 01 80               LDA   SSR   
FF41   29 08                  AND   #RX_RDY   
FF43   C9 08                  CMP   #RX_RDY   
FF45   D0 05                  BNE   NoDataIn   
FF47   AD 00 80               LDA   SDR   
FF4A   38                     SEC   ; Carry set if key available
FF4B   60                     RTS   
FF4C                NODATAIN:   
FF4C   18                     CLC   ; Carry clear if no key pressed
FF4D   60                     RTS   
FF4E                MONISCNTC:   
FF4E   20 3E FF               JSR   MONRDKEY   
FF51   90 06                  BCC   NotCTRLC   ; If no key pressed then exit
FF53   C9 03                  CMP   #3   
FF55   D0 02                  BNE   NotCTRLC   ; if CTRL-C not pressed then exit
FF57   38                     SEC   ; Carry set if control C pressed
FF58   60                     RTS   
FF59                NOTCTRLC:   
FF59   18                     CLC   ; Carry clear if control C not pressed
FF5A   60                     RTS   
FF5B                STARTUPMESSAGE:   
FF5B   0C 43 6F 6C 64 20 5B 43 5D 20 6F 72 20 77 61 72 6D 20 5B 57 5D 20 73 74 61 72 74 3F 0D 0A 00 DB   $0C,"Cold [C] or warm [W] start?",$0D,$0A,$00   
FF7A                LOAD:     
FF7A   60                     RTS   
FF7B                SAVE:     
FF7B   60                     RTS   
FF7C                          ;.segment "VECTS"
FFFA                          .ORG   $FFFA   
FFFA   00 FF                  DW   Reset   ; NMI
FFFC   00 FF                  DW   Reset   ; RESET
FFFE   00 FF                  DW   Reset   ; IRQ


ZP_START1:          0000 DEFINED AT LINE 44
                    > USED AT LINE 82
ZP_START2:          000D DEFINED AT LINE 45
                    > USED AT LINE 92
ZP_START3:          005B DEFINED AT LINE 46
                    > USED AT LINE 106
ZP_START4:          0065 DEFINED AT LINE 47
                    > USED AT LINE 128
USR:                000A DEFINED AT LINE 50
                    > USED AT LINE 286
                    > USED AT LINE 5621
                    > USED AT LINE 5624
                    > USED AT LINE 5625
STACK_TOP:          00FC DEFINED AT LINE 53
                    > USED AT LINE 1025
                    > USED AT LINE 1027
SPACE_FOR_GOSUB:    0033 DEFINED AT LINE 54
NULL_MAX:           000A DEFINED AT LINE 55
WIDTH:              0048 DEFINED AT LINE 56
WIDTH2:             0038 DEFINED AT LINE 57
RAMSTART2:          2200 DEFINED AT LINE 60
BYTES_FP:           0004 DEFINED AT LINE 61
                    > USED AT LINE 62
                    > USED AT LINE 63
                    > USED AT LINE 64
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 140
                    > USED AT LINE 141
                    > USED AT LINE 208
                    > USED AT LINE 209
                    > USED AT LINE 217
                    > USED AT LINE 218
                    > USED AT LINE 2083
                    > USED AT LINE 2093
                    > USED AT LINE 2095
                    > USED AT LINE 2097
                    > USED AT LINE 2099
                    > USED AT LINE 2101
                    > USED AT LINE 3976
BYTES_PER_ELEMENT:  0004 DEFINED AT LINE 62
BYTES_PER_VARIABLE: 0006 DEFINED AT LINE 63
MANTISSA_BYTES:     0003 DEFINED AT LINE 64
BYTES_PER_FRAME:    0010 DEFINED AT LINE 65
FOR_STACK1:         000D DEFINED AT LINE 66
FOR_STACK2:         0008 DEFINED AT LINE 67
MAX_EXPON:          000A DEFINED AT LINE 68
STACK:              0100 DEFINED AT LINE 69
                    > USED AT LINE 475
                    > USED AT LINE 480
                    > USED AT LINE 482
                    > USED AT LINE 485
                    > USED AT LINE 488
                    > USED AT LINE 1025
                    > USED AT LINE 1027
                    > USED AT LINE 2083
                    > USED AT LINE 2093
                    > USED AT LINE 2095
                    > USED AT LINE 2097
                    > USED AT LINE 2099
                    > USED AT LINE 2101
                    > USED AT LINE 2829
                    > USED AT LINE 2831
                    > USED AT LINE 2834
                    > USED AT LINE 2836
                    > USED AT LINE 5165
                    > USED AT LINE 5167
                    > USED AT LINE 5176
                    > USED AT LINE 5178
                    > USED AT LINE 5180
                    > USED AT LINE 5186
INPUTBUFFERX:       0000 DEFINED AT LINE 71
                    > USED AT LINE 843
                    > USED AT LINE 876
                    > USED AT LINE 913
                    > USED AT LINE 934
CR:                 000D DEFINED AT LINE 73
                    > USED AT LINE 76
                    > USED AT LINE 445
                    > USED AT LINE 448
                    > USED AT LINE 5759
                    > USED AT LINE 5761
                    > USED AT LINE 5770
                    > USED AT LINE 5772
                    > USED AT LINE 5774
LF:                 000A DEFINED AT LINE 74
                    > USED AT LINE 77
                    > USED AT LINE 445
                    > USED AT LINE 448
                    > USED AT LINE 5759
                    > USED AT LINE 5761
                    > USED AT LINE 5770
                    > USED AT LINE 5772
                    > USED AT LINE 5774
CRLF_1:             000D DEFINED AT LINE 76
CRLF_2:             000A DEFINED AT LINE 77
GORESTART:          0000 DEFINED AT LINE 83
                    > USED AT LINE 5605
                    > USED AT LINE 5606
                    > USED AT LINE 5618
                    > USED AT LINE 5751
                    > USED AT LINE 5752
                    > USED AT LINE 5753
GOSTROUT:           0003 DEFINED AT LINE 85
                    > USED AT LINE 637
                    > USED AT LINE 5607
                    > USED AT LINE 5608
                    > USED AT LINE 5619
                    > USED AT LINE 5746
                    > USED AT LINE 5747
GOAYINT:            0006 DEFINED AT LINE 87
                    > USED AT LINE 5611
                    > USED AT LINE 5612
GOGIVEAYF:          0008 DEFINED AT LINE 89
                    > USED AT LINE 5615
                    > USED AT LINE 5616
Z15:                000D DEFINED AT LINE 93
                    > USED AT LINE 1365
                    > USED AT LINE 1731
                    > USED AT LINE 5639
POSX:               000E DEFINED AT LINE 95
                    > USED AT LINE 1710
                    > USED AT LINE 1724
                    > USED AT LINE 1739
                    > USED AT LINE 1745
                    > USED AT LINE 1767
                    > USED AT LINE 1818
                    > USED AT LINE 1823
                    > USED AT LINE 3122
                    > USED AT LINE 5640
Z17:                000F DEFINED AT LINE 97
                    > USED AT LINE 1711
                    > USED AT LINE 1819
                    > USED AT LINE 5627
                    > USED AT LINE 5709
                    > USED AT LINE 5716
Z18:                0010 DEFINED AT LINE 99
                    > USED AT LINE 1746
                    > USED AT LINE 5629
                    > USED AT LINE 5717
LINNUM:             0011 DEFINED AT LINE 101
                    > USED AT LINE 962
                    > USED AT LINE 969
                    > USED AT LINE 1069
                    > USED AT LINE 1070
                    > USED AT LINE 1073
                    > USED AT LINE 1074
                    > USED AT LINE 1087
                    > USED AT LINE 1089
                    > USED AT LINE 1415
                    > USED AT LINE 1568
                    > USED AT LINE 1569
                    > USED AT LINE 1574
                    > USED AT LINE 1590
                    > USED AT LINE 1595
                    > USED AT LINE 1596
                    > USED AT LINE 1598
                    > USED AT LINE 1599
                    > USED AT LINE 1600
                    > USED AT LINE 1601
                    > USED AT LINE 1602
                    > USED AT LINE 1604
                    > USED AT LINE 1606
                    > USED AT LINE 3934
                    > USED AT LINE 3935
                    > USED AT LINE 3944
                    > USED AT LINE 3954
                    > USED AT LINE 3970
                    > USED AT LINE 5646
                    > USED AT LINE 5663
                    > USED AT LINE 5664
                    > USED AT LINE 5667
                    > USED AT LINE 5669
                    > USED AT LINE 5672
                    > USED AT LINE 5673
                    > USED AT LINE 5676
                    > USED AT LINE 5677
                    > USED AT LINE 5687
                    > USED AT LINE 5688
                    > USED AT LINE 5704
                    > USED AT LINE 5706
TXPSV:              0011 DEFINED AT LINE 102
                    > USED AT LINE 1924
                    > USED AT LINE 1925
                    > USED AT LINE 1991
                    > USED AT LINE 1992
INPUTBUFFER:        0013 DEFINED AT LINE 104
                    > USED AT LINE 71
                    > USED AT LINE 704
                    > USED AT LINE 729
                    > USED AT LINE 799
                    > USED AT LINE 893
                    > USED AT LINE 894
                    > USED AT LINE 919
                    > USED AT LINE 938
                    > USED AT LINE 1884
                    > USED AT LINE 1886
CHARAC:             005B DEFINED AT LINE 107
                    > USED AT LINE 1494
                    > USED AT LINE 1499
                    > USED AT LINE 1500
                    > USED AT LINE 1573
                    > USED AT LINE 1603
                    > USED AT LINE 1956
                    > USED AT LINE 1960
                    > USED AT LINE 2490
                    > USED AT LINE 2503
                    > USED AT LINE 3277
                    > USED AT LINE 3296
                    > USED AT LINE 4806
                    > USED AT LINE 5236
                    > USED AT LINE 5295
ENDCHR:             005C DEFINED AT LINE 109
                    > USED AT LINE 846
                    > USED AT LINE 907
                    > USED AT LINE 915
                    > USED AT LINE 1496
                    > USED AT LINE 1498
                    > USED AT LINE 1501
                    > USED AT LINE 1505
                    > USED AT LINE 1964
                    > USED AT LINE 2493
                    > USED AT LINE 2498
                    > USED AT LINE 3278
                    > USED AT LINE 3298
EOLPNTR:            005D DEFINED AT LINE 111
                    > USED AT LINE 658
                    > USED AT LINE 712
                    > USED AT LINE 725
                    > USED AT LINE 867
                    > USED AT LINE 884
                    > USED AT LINE 927
                    > USED AT LINE 2486
                    > USED AT LINE 2489
                    > USED AT LINE 2492
                    > USED AT LINE 2497
                    > USED AT LINE 2499
                    > USED AT LINE 2502
                    > USED AT LINE 2504
                    > USED AT LINE 2761
                    > USED AT LINE 2841
                    > USED AT LINE 2899
                    > USED AT LINE 2920
                    > USED AT LINE 2946
                    > USED AT LINE 2994
                    > USED AT LINE 3034
DIMFLG:             005E DEFINED AT LINE 113
                    > USED AT LINE 2604
                    > USED AT LINE 2809
                    > USED AT LINE 2846
                    > USED AT LINE 2896
                    > USED AT LINE 2928
                    > USED AT LINE 2983
VALTYP:             005F DEFINED AT LINE 115
                    > USED AT LINE 1622
                    > USED AT LINE 1703
                    > USED AT LINE 1954
                    > USED AT LINE 2137
                    > USED AT LINE 2193
                    > USED AT LINE 2221
                    > USED AT LINE 2334
                    > USED AT LINE 2435
                    > USED AT LINE 2526
                    > USED AT LINE 2613
                    > USED AT LINE 2629
                    > USED AT LINE 2811
                    > USED AT LINE 2844
                    > USED AT LINE 3098
                    > USED AT LINE 3116
                    > USED AT LINE 3346
                    > USED AT LINE 3827
DATAFLG:            0060 DEFINED AT LINE 117
                    > USED AT LINE 841
                    > USED AT LINE 849
                    > USED AT LINE 902
                    > USED AT LINE 1077
                    > USED AT LINE 1105
                    > USED AT LINE 1107
                    > USED AT LINE 1126
                    > USED AT LINE 3361
                    > USED AT LINE 3386
                    > USED AT LINE 3390
SUBFLG:             0061 DEFINED AT LINE 119
                    > USED AT LINE 1032
                    > USED AT LINE 1161
                    > USED AT LINE 2637
                    > USED AT LINE 2643
                    > USED AT LINE 3145
                    > USED AT LINE 3165
INPUTFLG:           0062 DEFINED AT LINE 121
                    > USED AT LINE 1844
                    > USED AT LINE 1915
                    > USED AT LINE 1932
                    > USED AT LINE 2027
CPRMASK:            0063 DEFINED AT LINE 123
                    > USED AT LINE 2310
                    > USED AT LINE 2569
                    > USED AT LINE 5462
                    > USED AT LINE 5464
                    > USED AT LINE 5494
                    > USED AT LINE 5504
Z14:                0064 DEFINED AT LINE 125
                    > USED AT LINE 609
                    > USED AT LINE 634
                    > USED AT LINE 829
                    > USED AT LINE 831
                    > USED AT LINE 1334
                    > USED AT LINE 1812
                    > USED AT LINE 1874
                    > USED AT LINE 5642
TEMPPT:             0065 DEFINED AT LINE 129
                    > USED AT LINE 1023
                    > USED AT LINE 3329
                    > USED AT LINE 3351
                    > USED AT LINE 3415
                    > USED AT LINE 3700
                    > USED AT LINE 5649
LASTPT:             0066 DEFINED AT LINE 131
                    > USED AT LINE 3347
                    > USED AT LINE 3696
                    > USED AT LINE 3698
                    > USED AT LINE 3702
                    > USED AT LINE 5638
TEMPST:             0068 DEFINED AT LINE 133
INDEX:              0071 DEFINED AT LINE 135
                    > USED AT LINE 514
                    > USED AT LINE 524
                    > USED AT LINE 531
                    > USED AT LINE 558
                    > USED AT LINE 560
                    > USED AT LINE 663
                    > USED AT LINE 665
                    > USED AT LINE 689
                    > USED AT LINE 691
                    > USED AT LINE 694
                    > USED AT LINE 698
                    > USED AT LINE 741
                    > USED AT LINE 742
                    > USED AT LINE 746
                    > USED AT LINE 754
                    > USED AT LINE 758
                    > USED AT LINE 761
                    > USED AT LINE 762
                    > USED AT LINE 765
                    > USED AT LINE 766
                    > USED AT LINE 767
                    > USED AT LINE 1196
                    > USED AT LINE 1197
                    > USED AT LINE 1575
                    > USED AT LINE 1592
                    > USED AT LINE 1594
                    > USED AT LINE 1597
                    > USED AT LINE 1795
                    > USED AT LINE 2198
                    > USED AT LINE 2200
                    > USED AT LINE 2266
                    > USED AT LINE 2267
                    > USED AT LINE 2270
                    > USED AT LINE 2287
                    > USED AT LINE 2945
                    > USED AT LINE 3030
                    > USED AT LINE 3059
                    > USED AT LINE 3412
                    > USED AT LINE 3413
                    > USED AT LINE 3424
                    > USED AT LINE 3425
                    > USED AT LINE 3449
                    > USED AT LINE 3450
                    > USED AT LINE 3452
                    > USED AT LINE 3455
                    > USED AT LINE 3459
                    > USED AT LINE 3465
                    > USED AT LINE 3468
                    > USED AT LINE 3469
                    > USED AT LINE 3471
                    > USED AT LINE 3473
                    > USED AT LINE 3487
                    > USED AT LINE 3494
                    > USED AT LINE 3497
                    > USED AT LINE 3500
                    > USED AT LINE 3515
                    > USED AT LINE 3516
                    > USED AT LINE 3528
                    > USED AT LINE 3529
                    > USED AT LINE 3531
                    > USED AT LINE 3533
                    > USED AT LINE 3622
                    > USED AT LINE 3623
                    > USED AT LINE 3630
                    > USED AT LINE 3660
                    > USED AT LINE 3661
                    > USED AT LINE 3665
                    > USED AT LINE 3668
                    > USED AT LINE 3671
                    > USED AT LINE 3689
                    > USED AT LINE 3690
                    > USED AT LINE 3747
                    > USED AT LINE 3748
                    > USED AT LINE 3750
                    > USED AT LINE 3837
                    > USED AT LINE 3876
                    > USED AT LINE 3879
                    > USED AT LINE 3881
                    > USED AT LINE 4350
                    > USED AT LINE 4351
                    > USED AT LINE 4353
                    > USED AT LINE 4356
                    > USED AT LINE 4359
                    > USED AT LINE 4367
                    > USED AT LINE 4542
                    > USED AT LINE 4543
                    > USED AT LINE 4545
                    > USED AT LINE 4548
                    > USED AT LINE 4551
                    > USED AT LINE 4556
                    > USED AT LINE 4584
                    > USED AT LINE 4585
                    > USED AT LINE 4588
                    > USED AT LINE 4591
                    > USED AT LINE 4596
                    > USED AT LINE 4599
DEST:               0073 DEFINED AT LINE 137
                    > USED AT LINE 667
                    > USED AT LINE 674
                    > USED AT LINE 686
                    > USED AT LINE 695
                    > USED AT LINE 699
                    > USED AT LINE 2079
                    > USED AT LINE 3880
                    > USED AT LINE 3886
                    > USED AT LINE 3888
                    > USED AT LINE 3891
                    > USED AT LINE 3896
                    > USED AT LINE 4711
                    > USED AT LINE 4717
                    > USED AT LINE 4719
                    > USED AT LINE 4723
                    > USED AT LINE 4728
                    > USED AT LINE 4733
                    > USED AT LINE 4739
RESULT:             0075 DEFINED AT LINE 139
                    > USED AT LINE 141
                    > USED AT LINE 4301
                    > USED AT LINE 4302
                    > USED AT LINE 4303
                    > USED AT LINE 4326
                    > USED AT LINE 4328
                    > USED AT LINE 4329
                    > USED AT LINE 4331
                    > USED AT LINE 4332
                    > USED AT LINE 4334
                    > USED AT LINE 4336
                    > USED AT LINE 4337
                    > USED AT LINE 4339
                    > USED AT LINE 4531
                    > USED AT LINE 4533
                    > USED AT LINE 4535
RESULT_LAST:        0078 DEFINED AT LINE 141
                    > USED AT LINE 3061
                    > USED AT LINE 3064
                    > USED AT LINE 3082
                    > USED AT LINE 3085
                    > USED AT LINE 4484
TXTTAB:             0079 DEFINED AT LINE 142
                    > USED AT LINE 739
                    > USED AT LINE 740
                    > USED AT LINE 952
                    > USED AT LINE 953
                    > USED AT LINE 993
                    > USED AT LINE 995
                    > USED AT LINE 996
                    > USED AT LINE 999
                    > USED AT LINE 1040
                    > USED AT LINE 1043
                    > USED AT LINE 1288
                    > USED AT LINE 1290
                    > USED AT LINE 1425
                    > USED AT LINE 1426
                    > USED AT LINE 5721
                    > USED AT LINE 5722
                    > USED AT LINE 5725
                    > USED AT LINE 5726
                    > USED AT LINE 5728
                    > USED AT LINE 5730
                    > USED AT LINE 5731
                    > USED AT LINE 5736
                    > USED AT LINE 5739
VARTAB:             007B DEFINED AT LINE 144
                    > USED AT LINE 664
                    > USED AT LINE 672
                    > USED AT LINE 673
                    > USED AT LINE 675
                    > USED AT LINE 677
                    > USED AT LINE 682
                    > USED AT LINE 710
                    > USED AT LINE 714
                    > USED AT LINE 723
                    > USED AT LINE 724
                    > USED AT LINE 998
                    > USED AT LINE 1001
                    > USED AT LINE 1013
                    > USED AT LINE 1014
                    > USED AT LINE 1648
                    > USED AT LINE 1652
                    > USED AT LINE 2644
                    > USED AT LINE 2645
                    > USED AT LINE 3422
                    > USED AT LINE 3423
ARYTAB:             007D DEFINED AT LINE 146
                    > USED AT LINE 1015
                    > USED AT LINE 1016
                    > USED AT LINE 2651
                    > USED AT LINE 2653
                    > USED AT LINE 2706
                    > USED AT LINE 2707
                    > USED AT LINE 2725
                    > USED AT LINE 2726
                    > USED AT LINE 2850
                    > USED AT LINE 2851
                    > USED AT LINE 3427
                    > USED AT LINE 3429
STREND:             007F DEFINED AT LINE 148
                    > USED AT LINE 508
                    > USED AT LINE 509
                    > USED AT LINE 721
                    > USED AT LINE 722
                    > USED AT LINE 1017
                    > USED AT LINE 1018
                    > USED AT LINE 2710
                    > USED AT LINE 2711
                    > USED AT LINE 2855
                    > USED AT LINE 2857
                    > USED AT LINE 2959
                    > USED AT LINE 2960
                    > USED AT LINE 2975
                    > USED AT LINE 2979
                    > USED AT LINE 3105
                    > USED AT LINE 3108
                    > USED AT LINE 3371
                    > USED AT LINE 3374
                    > USED AT LINE 3406
                    > USED AT LINE 3407
                    > USED AT LINE 3443
                    > USED AT LINE 3445
FRETOP:             0081 DEFINED AT LINE 150
                    > USED AT LINE 568
                    > USED AT LINE 571
                    > USED AT LINE 592
                    > USED AT LINE 595
                    > USED AT LINE 708
                    > USED AT LINE 709
                    > USED AT LINE 1011
                    > USED AT LINE 1012
                    > USED AT LINE 1639
                    > USED AT LINE 1644
                    > USED AT LINE 3104
                    > USED AT LINE 3107
                    > USED AT LINE 3366
                    > USED AT LINE 3367
                    > USED AT LINE 3377
                    > USED AT LINE 3378
                    > USED AT LINE 3402
                    > USED AT LINE 3403
                    > USED AT LINE 3501
                    > USED AT LINE 3504
                    > USED AT LINE 3554
                    > USED AT LINE 3555
                    > USED AT LINE 3676
                    > USED AT LINE 3678
                    > USED AT LINE 3682
                    > USED AT LINE 3683
                    > USED AT LINE 3685
                    > USED AT LINE 5691
                    > USED AT LINE 5692
FRESPC:             0083 DEFINED AT LINE 152
                    > USED AT LINE 3379
                    > USED AT LINE 3380
                    > USED AT LINE 3631
                    > USED AT LINE 3637
                    > USED AT LINE 3638
                    > USED AT LINE 3640
MEMSIZ:             0085 DEFINED AT LINE 154
                    > USED AT LINE 706
                    > USED AT LINE 707
                    > USED AT LINE 1009
                    > USED AT LINE 1010
                    > USED AT LINE 3399
                    > USED AT LINE 3400
                    > USED AT LINE 5689
                    > USED AT LINE 5690
                    > USED AT LINE 5734
                    > USED AT LINE 5738
CURLIN:             0087 DEFINED AT LINE 156
                    > USED AT LINE 626
                    > USED AT LINE 648
                    > USED AT LINE 1182
                    > USED AT LINE 1184
                    > USED AT LINE 1245
                    > USED AT LINE 1248
                    > USED AT LINE 1323
                    > USED AT LINE 1324
                    > USED AT LINE 1354
                    > USED AT LINE 1355
                    > USED AT LINE 1397
                    > USED AT LINE 1399
                    > USED AT LINE 1414
                    > USED AT LINE 1461
                    > USED AT LINE 1463
                    > USED AT LINE 1850
                    > USED AT LINE 1851
                    > USED AT LINE 2096
                    > USED AT LINE 2098
                    > USED AT LINE 3134
                    > USED AT LINE 4971
                    > USED AT LINE 4972
                    > USED AT LINE 5601
OLDLIN:             0089 DEFINED AT LINE 158
                    > USED AT LINE 1325
                    > USED AT LINE 1326
                    > USED AT LINE 1352
                    > USED AT LINE 1353
OLDTEXT:            008B DEFINED AT LINE 160
                    > USED AT LINE 1031
                    > USED AT LINE 1228
                    > USED AT LINE 1229
                    > USED AT LINE 1320
                    > USED AT LINE 1321
                    > USED AT LINE 1345
                    > USED AT LINE 1349
                    > USED AT LINE 1858
                    > USED AT LINE 1859
Z8C:                008D DEFINED AT LINE 162
                    > USED AT LINE 1848
                    > USED AT LINE 1849
                    > USED AT LINE 2011
                    > USED AT LINE 2015
DATPTR:             008F DEFINED AT LINE 164
                    > USED AT LINE 1294
                    > USED AT LINE 1295
                    > USED AT LINE 1901
                    > USED AT LINE 1902
INPTR:              0091 DEFINED AT LINE 166
                    > USED AT LINE 1916
                    > USED AT LINE 1917
                    > USED AT LINE 1926
                    > USED AT LINE 1927
                    > USED AT LINE 1989
                    > USED AT LINE 1990
                    > USED AT LINE 2025
                    > USED AT LINE 2026
                    > USED AT LINE 2032
VARNAM:             0093 DEFINED AT LINE 168
                    > USED AT LINE 2606
                    > USED AT LINE 2635
                    > USED AT LINE 2656
                    > USED AT LINE 2659
                    > USED AT LINE 2728
                    > USED AT LINE 2731
                    > USED AT LINE 2817
                    > USED AT LINE 2819
                    > USED AT LINE 2823
                    > USED AT LINE 2825
                    > USED AT LINE 2863
                    > USED AT LINE 2865
                    > USED AT LINE 2915
                    > USED AT LINE 2918
VARPNT:             0095 DEFINED AT LINE 170
                    > USED AT LINE 2753
                    > USED AT LINE 2754
                    > USED AT LINE 3045
                    > USED AT LINE 3048
                    > USED AT LINE 3050
                    > USED AT LINE 3151
                    > USED AT LINE 3153
                    > USED AT LINE 3186
                    > USED AT LINE 3190
                    > USED AT LINE 3192
                    > USED AT LINE 3196
                    > USED AT LINE 3207
                    > USED AT LINE 3209
                    > USED AT LINE 5120
                    > USED AT LINE 5133
FORPNT:             0097 DEFINED AT LINE 172
                    > USED AT LINE 478
                    > USED AT LINE 481
                    > USED AT LINE 483
                    > USED AT LINE 487
                    > USED AT LINE 1095
                    > USED AT LINE 1099
                    > USED AT LINE 1131
                    > USED AT LINE 1214
                    > USED AT LINE 1216
                    > USED AT LINE 1444
                    > USED AT LINE 1618
                    > USED AT LINE 1619
                    > USED AT LINE 1675
                    > USED AT LINE 1678
                    > USED AT LINE 1681
                    > USED AT LINE 1920
                    > USED AT LINE 1921
                    > USED AT LINE 2060
                    > USED AT LINE 2061
                    > USED AT LINE 2085
                    > USED AT LINE 2086
                    > USED AT LINE 3961
                    > USED AT LINE 3967
                    > USED AT LINE 3971
                    > USED AT LINE 3972
                    > USED AT LINE 4577
                    > USED AT LINE 4578
LASTOP:             0099 DEFINED AT LINE 174
                    > USED AT LINE 2212
                    > USED AT LINE 2306
CPRTYP:             009B DEFINED AT LINE 176
                    > USED AT LINE 2169
                    > USED AT LINE 2181
                    > USED AT LINE 2182
                    > USED AT LINE 2184
                    > USED AT LINE 2188
                    > USED AT LINE 2230
                    > USED AT LINE 2246
                    > USED AT LINE 2527
FNCNAM:             009C DEFINED AT LINE 178
                    > USED AT LINE 3167
                    > USED AT LINE 3168
                    > USED AT LINE 3172
                    > USED AT LINE 3174
                    > USED AT LINE 3179
                    > USED AT LINE 3181
                    > USED AT LINE 3184
                    > USED AT LINE 3189
                    > USED AT LINE 3202
                    > USED AT LINE 3205
                    > USED AT LINE 3213
                    > USED AT LINE 3215
                    > USED AT LINE 3227
                    > USED AT LINE 3230
                    > USED AT LINE 3233
                    > USED AT LINE 3236
                    > USED AT LINE 3405
                    > USED AT LINE 3517
                    > USED AT LINE 3518
                    > USED AT LINE 3541
                    > USED AT LINE 3548
                    > USED AT LINE 3562
                    > USED AT LINE 3567
TEMP3:              009C DEFINED AT LINE 179
DSCPTR:             009E DEFINED AT LINE 181
                    > USED AT LINE 1662
                    > USED AT LINE 1663
                    > USED AT LINE 1670
                    > USED AT LINE 1671
                    > USED AT LINE 1674
                    > USED AT LINE 1677
                    > USED AT LINE 1680
                    > USED AT LINE 3257
                    > USED AT LINE 3258
                    > USED AT LINE 3593
                    > USED AT LINE 3594
                    > USED AT LINE 3726
                    > USED AT LINE 3730
                    > USED AT LINE 3740
                    > USED AT LINE 3741
                    > USED AT LINE 3761
                    > USED AT LINE 3782
                    > USED AT LINE 3805
                    > USED AT LINE 3807
DSCLEN:             00A0 DEFINED AT LINE 183
                    > USED AT LINE 185
                    > USED AT LINE 3421
                    > USED AT LINE 3438
                    > USED AT LINE 3519
                    > USED AT LINE 3526
                    > USED AT LINE 5644
JMPADRS:            00A1 DEFINED AT LINE 185
                    > USED AT LINE 2474
                    > USED AT LINE 2476
                    > USED AT LINE 2477
                    > USED AT LINE 3797
                    > USED AT LINE 3799
                    > USED AT LINE 3811
                    > USED AT LINE 3812
                    > USED AT LINE 5620
Z52:                00A2 DEFINED AT LINE 187
                    > USED AT LINE 3520
                    > USED AT LINE 3543
                    > USED AT LINE 3547
                    > USED AT LINE 3559
ARGEXTENSION:       00A3 DEFINED AT LINE 189
                    > USED AT LINE 4022
                    > USED AT LINE 4038
                    > USED AT LINE 4061
                    > USED AT LINE 4112
                    > USED AT LINE 5286
                    > USED AT LINE 5310
TEMP1:              00A3 DEFINED AT LINE 190
                    > USED AT LINE 579
                    > USED AT LINE 3976
HIGHDS:             00A4 DEFINED AT LINE 192
                    > USED AT LINE 530
                    > USED AT LINE 532
                    > USED AT LINE 534
                    > USED AT LINE 538
                    > USED AT LINE 543
                    > USED AT LINE 546
                    > USED AT LINE 713
                    > USED AT LINE 719
                    > USED AT LINE 2719
                    > USED AT LINE 2720
                    > USED AT LINE 2722
                    > USED AT LINE 2723
                    > USED AT LINE 2769
                    > USED AT LINE 2770
                    > USED AT LINE 2948
                    > USED AT LINE 2950
                    > USED AT LINE 2953
                    > USED AT LINE 2967
                    > USED AT LINE 2970
                    > USED AT LINE 2973
                    > USED AT LINE 3044
                    > USED AT LINE 3047
                    > USED AT LINE 3435
                    > USED AT LINE 3436
                    > USED AT LINE 3440
                    > USED AT LINE 3441
                    > USED AT LINE 3456
                    > USED AT LINE 3457
                    > USED AT LINE 3460
                    > USED AT LINE 3461
                    > USED AT LINE 3475
                    > USED AT LINE 3477
                    > USED AT LINE 3556
                    > USED AT LINE 3557
                    > USED AT LINE 3561
                    > USED AT LINE 3564
                    > USED AT LINE 3565
HIGHTR:             00A6 DEFINED AT LINE 194
                    > USED AT LINE 512
                    > USED AT LINE 516
                    > USED AT LINE 522
                    > USED AT LINE 525
                    > USED AT LINE 527
                    > USED AT LINE 537
                    > USED AT LINE 542
                    > USED AT LINE 545
                    > USED AT LINE 711
                    > USED AT LINE 715
                    > USED AT LINE 2712
                    > USED AT LINE 2713
                    > USED AT LINE 3550
                    > USED AT LINE 3553
INDX:               00A8 DEFINED AT LINE 196
                    > USED AT LINE 3066
                    > USED AT LINE 3089
                    > USED AT LINE 4884
                    > USED AT LINE 4910
                    > USED AT LINE 5021
                    > USED AT LINE 5039
                    > USED AT LINE 5043
                    > USED AT LINE 5057
                    > USED AT LINE 5071
                    > USED AT LINE 5126
TMPEXP:             00A8 DEFINED AT LINE 197
TEMP2:              00A8 DEFINED AT LINE 198
EXPON:              00A9 DEFINED AT LINE 200
                    > USED AT LINE 4868
                    > USED AT LINE 4881
                    > USED AT LINE 4885
                    > USED AT LINE 4890
                    > USED AT LINE 4895
                    > USED AT LINE 4935
                    > USED AT LINE 4946
                    > USED AT LINE 4954
                    > USED AT LINE 5070
                    > USED AT LINE 5156
                    > USED AT LINE 5161
LOWTR:              00AA DEFINED AT LINE 202
                    > USED AT LINE 513
                    > USED AT LINE 517
                    > USED AT LINE 662
                    > USED AT LINE 666
                    > USED AT LINE 668
                    > USED AT LINE 670
                    > USED AT LINE 678
                    > USED AT LINE 681
                    > USED AT LINE 730
                    > USED AT LINE 956
                    > USED AT LINE 957
                    > USED AT LINE 958
                    > USED AT LINE 963
                    > USED AT LINE 971
                    > USED AT LINE 976
                    > USED AT LINE 979
                    > USED AT LINE 2648
                    > USED AT LINE 2650
                    > USED AT LINE 2657
                    > USED AT LINE 2661
                    > USED AT LINE 2666
                    > USED AT LINE 2708
                    > USED AT LINE 2709
                    > USED AT LINE 2729
                    > USED AT LINE 2732
                    > USED AT LINE 2735
                    > USED AT LINE 2737
                    > USED AT LINE 2739
                    > USED AT LINE 2741
                    > USED AT LINE 2746
                    > USED AT LINE 2749
                    > USED AT LINE 2764
                    > USED AT LINE 2765
                    > USED AT LINE 2853
                    > USED AT LINE 2854
                    > USED AT LINE 2861
                    > USED AT LINE 2866
                    > USED AT LINE 2870
                    > USED AT LINE 2872
                    > USED AT LINE 2875
                    > USED AT LINE 2876
                    > USED AT LINE 2901
                    > USED AT LINE 2916
                    > USED AT LINE 2919
                    > USED AT LINE 2924
                    > USED AT LINE 2938
                    > USED AT LINE 2941
                    > USED AT LINE 2976
                    > USED AT LINE 2978
                    > USED AT LINE 2981
                    > USED AT LINE 2982
                    > USED AT LINE 2993
                    > USED AT LINE 3005
                    > USED AT LINE 3010
                    > USED AT LINE 3060
                    > USED AT LINE 3063
                    > USED AT LINE 3408
                    > USED AT LINE 3409
                    > USED AT LINE 3507
                    > USED AT LINE 3510
                    > USED AT LINE 3513
                    > USED AT LINE 3514
                    > USED AT LINE 3549
                    > USED AT LINE 3551
                    > USED AT LINE 4874
                    > USED AT LINE 4875
                    > USED AT LINE 4908
LOWTRX:             00AA DEFINED AT LINE 203
                    > USED AT LINE 1078
                    > USED AT LINE 1083
                    > USED AT LINE 1086
                    > USED AT LINE 1110
                    > USED AT LINE 1113
                    > USED AT LINE 1116
                    > USED AT LINE 1117
                    > USED AT LINE 1118
                    > USED AT LINE 1430
                    > USED AT LINE 1433
EXPSGN:             00AB DEFINED AT LINE 205
                    > USED AT LINE 4612
                    > USED AT LINE 4625
                    > USED AT LINE 4858
                    > USED AT LINE 4864
                    > USED AT LINE 4939
FAC:                00AC DEFINED AT LINE 207
                    > USED AT LINE 209
                    > USED AT LINE 586
                    > USED AT LINE 1192
                    > USED AT LINE 1193
                    > USED AT LINE 1522
                    > USED AT LINE 2279
                    > USED AT LINE 2281
                    > USED AT LINE 2283
                    > USED AT LINE 2285
                    > USED AT LINE 2324
                    > USED AT LINE 2529
                    > USED AT LINE 2530
                    > USED AT LINE 2531
                    > USED AT LINE 2539
                    > USED AT LINE 2543
                    > USED AT LINE 2560
                    > USED AT LINE 2795
                    > USED AT LINE 3117
                    > USED AT LINE 3118
                    > USED AT LINE 3265
                    > USED AT LINE 3266
                    > USED AT LINE 3267
                    > USED AT LINE 3289
                    > USED AT LINE 3290
                    > USED AT LINE 3306
                    > USED AT LINE 3336
                    > USED AT LINE 3338
                    > USED AT LINE 3340
                    > USED AT LINE 3717
                    > USED AT LINE 3928
                    > USED AT LINE 3998
                    > USED AT LINE 4029
                    > USED AT LINE 4032
                    > USED AT LINE 4065
                    > USED AT LINE 4068
                    > USED AT LINE 4071
                    > USED AT LINE 4083
                    > USED AT LINE 4085
                    > USED AT LINE 4086
                    > USED AT LINE 4087
                    > USED AT LINE 4088
                    > USED AT LINE 4090
                    > USED AT LINE 4104
                    > USED AT LINE 4114
                    > USED AT LINE 4116
                    > USED AT LINE 4117
                    > USED AT LINE 4119
                    > USED AT LINE 4120
                    > USED AT LINE 4122
                    > USED AT LINE 4130
                    > USED AT LINE 4131
                    > USED AT LINE 4132
                    > USED AT LINE 4136
                    > USED AT LINE 4140
                    > USED AT LINE 4144
                    > USED AT LINE 4146
                    > USED AT LINE 4147
                    > USED AT LINE 4148
                    > USED AT LINE 4163
                    > USED AT LINE 4165
                    > USED AT LINE 4166
                    > USED AT LINE 4168
                    > USED AT LINE 4169
                    > USED AT LINE 4171
                    > USED AT LINE 4181
                    > USED AT LINE 4183
                    > USED AT LINE 4185
                    > USED AT LINE 4265
                    > USED AT LINE 4269
                    > USED AT LINE 4306
                    > USED AT LINE 4308
                    > USED AT LINE 4310
                    > USED AT LINE 4369
                    > USED AT LINE 4382
                    > USED AT LINE 4390
                    > USED AT LINE 4428
                    > USED AT LINE 4463
                    > USED AT LINE 4464
                    > USED AT LINE 4466
                    > USED AT LINE 4472
                    > USED AT LINE 4475
                    > USED AT LINE 4478
                    > USED AT LINE 4501
                    > USED AT LINE 4504
                    > USED AT LINE 4507
                    > USED AT LINE 4532
                    > USED AT LINE 4534
                    > USED AT LINE 4536
                    > USED AT LINE 4546
                    > USED AT LINE 4549
                    > USED AT LINE 4554
                    > USED AT LINE 4557
                    > USED AT LINE 4587
                    > USED AT LINE 4590
                    > USED AT LINE 4595
                    > USED AT LINE 4598
                    > USED AT LINE 4636
                    > USED AT LINE 4655
                    > USED AT LINE 4675
                    > USED AT LINE 4677
                    > USED AT LINE 4684
                    > USED AT LINE 4695
                    > USED AT LINE 4696
                    > USED AT LINE 4726
                    > USED AT LINE 4730
                    > USED AT LINE 4734
                    > USED AT LINE 4758
                    > USED AT LINE 4781
                    > USED AT LINE 4782
                    > USED AT LINE 4783
                    > USED AT LINE 4794
                    > USED AT LINE 4804
                    > USED AT LINE 4809
                    > USED AT LINE 4810
                    > USED AT LINE 4811
                    > USED AT LINE 4929
                    > USED AT LINE 4977
                    > USED AT LINE 4978
                    > USED AT LINE 5007
                    > USED AT LINE 5097
                    > USED AT LINE 5098
                    > USED AT LINE 5100
                    > USED AT LINE 5101
                    > USED AT LINE 5103
                    > USED AT LINE 5253
                    > USED AT LINE 5288
                    > USED AT LINE 5305
                    > USED AT LINE 5306
                    > USED AT LINE 5411
                    > USED AT LINE 5413
                    > USED AT LINE 5416
                    > USED AT LINE 5419
                    > USED AT LINE 5533
FAC_LAST:           00AF DEFINED AT LINE 209
                    > USED AT LINE 1551
                    > USED AT LINE 1638
                    > USED AT LINE 1643
                    > USED AT LINE 1647
                    > USED AT LINE 1651
                    > USED AT LINE 1655
                    > USED AT LINE 1656
                    > USED AT LINE 1660
                    > USED AT LINE 1708
                    > USED AT LINE 2382
                    > USED AT LINE 2385
                    > USED AT LINE 2433
                    > USED AT LINE 2434
                    > USED AT LINE 2456
                    > USED AT LINE 2458
                    > USED AT LINE 2488
                    > USED AT LINE 2491
                    > USED AT LINE 2496
                    > USED AT LINE 2501
                    > USED AT LINE 2833
                    > USED AT LINE 2835
                    > USED AT LINE 3002
                    > USED AT LINE 3004
                    > USED AT LINE 3027
                    > USED AT LINE 3032
                    > USED AT LINE 3255
                    > USED AT LINE 3256
                    > USED AT LINE 3343
                    > USED AT LINE 3344
                    > USED AT LINE 3573
                    > USED AT LINE 3575
                    > USED AT LINE 3586
                    > USED AT LINE 3653
                    > USED AT LINE 3654
                    > USED AT LINE 3769
                    > USED AT LINE 3785
                    > USED AT LINE 3787
                    > USED AT LINE 3860
                    > USED AT LINE 3862
                    > USED AT LINE 3932
                    > USED AT LINE 3933
                    > USED AT LINE 4740
                    > USED AT LINE 4805
                    > USED AT LINE 5094
                    > USED AT LINE 5410
                    > USED AT LINE 5412
FACSIGN:            00B0 DEFINED AT LINE 210
                    > USED AT LINE 1190
                    > USED AT LINE 2084
                    > USED AT LINE 2258
                    > USED AT LINE 2321
                    > USED AT LINE 2546
                    > USED AT LINE 2553
                    > USED AT LINE 2788
                    > USED AT LINE 3926
                    > USED AT LINE 3993
                    > USED AT LINE 3995
                    > USED AT LINE 4034
                    > USED AT LINE 4106
                    > USED AT LINE 4156
                    > USED AT LINE 4158
                    > USED AT LINE 4361
                    > USED AT LINE 4395
                    > USED AT LINE 4403
                    > USED AT LINE 4552
                    > USED AT LINE 4593
                    > USED AT LINE 4608
                    > USED AT LINE 4658
                    > USED AT LINE 4698
                    > USED AT LINE 4704
                    > USED AT LINE 4724
                    > USED AT LINE 4743
                    > USED AT LINE 4762
                    > USED AT LINE 4779
                    > USED AT LINE 4799
                    > USED AT LINE 4800
                    > USED AT LINE 4927
                    > USED AT LINE 4998
                    > USED AT LINE 5003
                    > USED AT LINE 5255
                    > USED AT LINE 5257
                    > USED AT LINE 5415
                    > USED AT LINE 5456
                    > USED AT LINE 5460
                    > USED AT LINE 5503
                    > USED AT LINE 5528
SERLEN:             00B1 DEFINED AT LINE 212
                    > USED AT LINE 4832
                    > USED AT LINE 4898
                    > USED AT LINE 5360
                    > USED AT LINE 5383
SHIFTSIGNEXT:       00B2 DEFINED AT LINE 214
                    > USED AT LINE 4207
                    > USED AT LINE 4611
                    > USED AT LINE 4626
                    > USED AT LINE 4766
                    > USED AT LINE 4774
                    > USED AT LINE 4785
                    > USED AT LINE 5637
ARG:                00B3 DEFINED AT LINE 216
                    > USED AT LINE 218
                    > USED AT LINE 2312
                    > USED AT LINE 2314
                    > USED AT LINE 2316
                    > USED AT LINE 2318
                    > USED AT LINE 2514
                    > USED AT LINE 2515
                    > USED AT LINE 4024
                    > USED AT LINE 4115
                    > USED AT LINE 4118
                    > USED AT LINE 4121
                    > USED AT LINE 4327
                    > USED AT LINE 4330
                    > USED AT LINE 4333
                    > USED AT LINE 4354
                    > USED AT LINE 4357
                    > USED AT LINE 4365
                    > USED AT LINE 4368
                    > USED AT LINE 4378
                    > USED AT LINE 4471
                    > USED AT LINE 4474
                    > USED AT LINE 4477
                    > USED AT LINE 4493
                    > USED AT LINE 4494
                    > USED AT LINE 4500
                    > USED AT LINE 4502
                    > USED AT LINE 4503
                    > USED AT LINE 4505
                    > USED AT LINE 4506
                    > USED AT LINE 4508
                    > USED AT LINE 5221
                    > USED AT LINE 5304
ARG_LAST:           00B6 DEFINED AT LINE 218
                    > USED AT LINE 2532
                    > USED AT LINE 2533
                    > USED AT LINE 2535
                    > USED AT LINE 2536
                    > USED AT LINE 2559
                    > USED AT LINE 4492
ARGSIGN:            00B7 DEFINED AT LINE 219
                    > USED AT LINE 2320
                    > USED AT LINE 2512
                    > USED AT LINE 3996
                    > USED AT LINE 4033
                    > USED AT LINE 4360
                    > USED AT LINE 4363
                    > USED AT LINE 4606
                    > USED AT LINE 4926
                    > USED AT LINE 5228
                    > USED AT LINE 5439
STRNG1:             00B8 DEFINED AT LINE 221
                    > USED AT LINE 223
                    > USED AT LINE 224
                    > USED AT LINE 1664
                    > USED AT LINE 1665
                    > USED AT LINE 3287
                    > USED AT LINE 3288
                    > USED AT LINE 3294
                    > USED AT LINE 3308
                    > USED AT LINE 3310
                    > USED AT LINE 3315
                    > USED AT LINE 3319
                    > USED AT LINE 3320
                    > USED AT LINE 3580
                    > USED AT LINE 3582
                    > USED AT LINE 3584
                    > USED AT LINE 3597
                    > USED AT LINE 3598
                    > USED AT LINE 3608
                    > USED AT LINE 3611
                    > USED AT LINE 3614
                    > USED AT LINE 5444
SGNCPR:             00B8 DEFINED AT LINE 223
                    > USED AT LINE 2322
                    > USED AT LINE 3997
                    > USED AT LINE 4052
                    > USED AT LINE 4362
                    > USED AT LINE 4394
                    > USED AT LINE 4426
                    > USED AT LINE 4447
                    > USED AT LINE 4928
                    > USED AT LINE 5318
FACEXTENSION:       00B9 DEFINED AT LINE 224
                    > USED AT LINE 4021
                    > USED AT LINE 4043
                    > USED AT LINE 4048
                    > USED AT LINE 4062
                    > USED AT LINE 4089
                    > USED AT LINE 4091
                    > USED AT LINE 4113
                    > USED AT LINE 4129
                    > USED AT LINE 4149
                    > USED AT LINE 4172
                    > USED AT LINE 4174
                    > USED AT LINE 4175
                    > USED AT LINE 4202
                    > USED AT LINE 4218
                    > USED AT LINE 4304
                    > USED AT LINE 4340
                    > USED AT LINE 4521
                    > USED AT LINE 4558
                    > USED AT LINE 4600
                    > USED AT LINE 4615
                    > USED AT LINE 4629
                    > USED AT LINE 4638
                    > USED AT LINE 4697
                    > USED AT LINE 4738
                    > USED AT LINE 4798
                    > USED AT LINE 5281
                    > USED AT LINE 5311
                    > USED AT LINE 5417
STRNG2:             00BA DEFINED AT LINE 225
                    > USED AT LINE 865
                    > USED AT LINE 889
                    > USED AT LINE 2912
                    > USED AT LINE 2914
                    > USED AT LINE 2943
                    > USED AT LINE 2944
                    > USED AT LINE 2962
                    > USED AT LINE 2963
                    > USED AT LINE 2971
                    > USED AT LINE 2996
                    > USED AT LINE 2998
                    > USED AT LINE 3021
                    > USED AT LINE 3022
                    > USED AT LINE 3033
                    > USED AT LINE 3036
                    > USED AT LINE 3039
                    > USED AT LINE 3043
                    > USED AT LINE 3077
                    > USED AT LINE 3078
                    > USED AT LINE 3309
                    > USED AT LINE 3314
                    > USED AT LINE 3874
                    > USED AT LINE 3875
                    > USED AT LINE 3901
                    > USED AT LINE 3902
                    > USED AT LINE 5004
                    > USED AT LINE 5076
                    > USED AT LINE 5086
                    > USED AT LINE 5121
                    > USED AT LINE 5132
                    > USED AT LINE 5145
                    > USED AT LINE 5335
                    > USED AT LINE 5336
                    > USED AT LINE 5355
                    > USED AT LINE 5356
                    > USED AT LINE 5359
                    > USED AT LINE 5361
                    > USED AT LINE 5365
                    > USED AT LINE 5367
                    > USED AT LINE 5368
                    > USED AT LINE 5371
                    > USED AT LINE 5372
                    > USED AT LINE 5378
                    > USED AT LINE 5379
CHRGET:             00BC DEFINED AT LINE 227
                    > USED AT LINE 228
                    > USED AT LINE 229
                    > USED AT LINE 230
                    > USED AT LINE 231
                    > USED AT LINE 642
                    > USED AT LINE 1063
                    > USED AT LINE 1209
                    > USED AT LINE 1255
                    > USED AT LINE 1282
                    > USED AT LINE 1556
                    > USED AT LINE 1608
                    > USED AT LINE 1777
                    > USED AT LINE 1953
                    > USED AT LINE 2113
                    > USED AT LINE 2185
                    > USED AT LINE 2336
                    > USED AT LINE 2417
                    > USED AT LINE 2447
                    > USED AT LINE 2614
                    > USED AT LINE 2621
                    > USED AT LINE 2633
                    > USED AT LINE 2781
                    > USED AT LINE 3848
                    > USED AT LINE 4838
                    > USED AT LINE 4846
                    > USED AT LINE 4860
                    > USED AT LINE 5633
                    > USED AT LINE 5656
                    > USED AT LINE 5700
TXTPTR:             00C3 DEFINED AT LINE 228
                    > USED AT LINE 640
                    > USED AT LINE 641
                    > USED AT LINE 839
                    > USED AT LINE 869
                    > USED AT LINE 926
                    > USED AT LINE 940
                    > USED AT LINE 1042
                    > USED AT LINE 1045
                    > USED AT LINE 1177
                    > USED AT LINE 1179
                    > USED AT LINE 1225
                    > USED AT LINE 1226
                    > USED AT LINE 1232
                    > USED AT LINE 1240
                    > USED AT LINE 1244
                    > USED AT LINE 1247
                    > USED AT LINE 1250
                    > USED AT LINE 1251
                    > USED AT LINE 1253
                    > USED AT LINE 1317
                    > USED AT LINE 1318
                    > USED AT LINE 1350
                    > USED AT LINE 1351
                    > USED AT LINE 1393
                    > USED AT LINE 1395
                    > USED AT LINE 1419
                    > USED AT LINE 1420
                    > USED AT LINE 1432
                    > USED AT LINE 1435
                    > USED AT LINE 1465
                    > USED AT LINE 1467
                    > USED AT LINE 1480
                    > USED AT LINE 1481
                    > USED AT LINE 1483
                    > USED AT LINE 1503
                    > USED AT LINE 1860
                    > USED AT LINE 1861
                    > USED AT LINE 1922
                    > USED AT LINE 1923
                    > USED AT LINE 1928
                    > USED AT LINE 1929
                    > USED AT LINE 1949
                    > USED AT LINE 1950
                    > USED AT LINE 1965
                    > USED AT LINE 1966
                    > USED AT LINE 1987
                    > USED AT LINE 1988
                    > USED AT LINE 1993
                    > USED AT LINE 1994
                    > USED AT LINE 2007
                    > USED AT LINE 2010
                    > USED AT LINE 2013
                    > USED AT LINE 2017
                    > USED AT LINE 2100
                    > USED AT LINE 2102
                    > USED AT LINE 2154
                    > USED AT LINE 2156
                    > USED AT LINE 2158
                    > USED AT LINE 2224
                    > USED AT LINE 2226
                    > USED AT LINE 2228
                    > USED AT LINE 2358
                    > USED AT LINE 2359
                    > USED AT LINE 2415
                    > USED AT LINE 3155
                    > USED AT LINE 3157
                    > USED AT LINE 3198
                    > USED AT LINE 3200
                    > USED AT LINE 3203
                    > USED AT LINE 3206
                    > USED AT LINE 3221
                    > USED AT LINE 3223
                    > USED AT LINE 3872
                    > USED AT LINE 3873
                    > USED AT LINE 3877
                    > USED AT LINE 3882
                    > USED AT LINE 3903
                    > USED AT LINE 3904
                    > USED AT LINE 4950
                    > USED AT LINE 5573
                    > USED AT LINE 5575
                    > USED AT LINE 5654
                    > USED AT LINE 5655
                    > USED AT LINE 5698
                    > USED AT LINE 5699
CHRGOT:             00C2 DEFINED AT LINE 229
                    > USED AT LINE 1059
                    > USED AT LINE 1206
                    > USED AT LINE 1404
                    > USED AT LINE 1516
                    > USED AT LINE 1531
                    > USED AT LINE 1686
                    > USED AT LINE 1930
                    > USED AT LINE 1981
                    > USED AT LINE 1995
                    > USED AT LINE 2110
                    > USED AT LINE 2171
                    > USED AT LINE 2582
                    > USED AT LINE 2602
                    > USED AT LINE 2607
                    > USED AT LINE 2838
                    > USED AT LINE 3216
                    > USED AT LINE 3770
                    > USED AT LINE 3863
                    > USED AT LINE 3892
                    > USED AT LINE 3963
                    > USED AT LINE 5681
CHRGOT2:            00C9 DEFINED AT LINE 230
RNDSEED:            00D4 DEFINED AT LINE 231
TOKEN_ADDRESS_TABLE: 0200 DEFINED AT LINE 235
                    > USED AT LINE 1278
                    > USED AT LINE 1280
TOKEN_GOTO:         0088 DEFINED AT LINE 244
TOKEN_GOSUB:        008C DEFINED AT LINE 249
TOKEN_REM:          008E DEFINED AT LINE 252
TOKEN_PRINT:        0097 DEFINED AT LINE 262
TOKEN_TAB:          009C DEFINED AT LINE 268
TOKEN_TO:           009D DEFINED AT LINE 269
TOKEN_FN:           009E DEFINED AT LINE 270
TOKEN_SPC:          009F DEFINED AT LINE 271
TOKEN_THEN:         00A0 DEFINED AT LINE 272
TOKEN_NOT:          00A1 DEFINED AT LINE 273
TOKEN_STEP:         00A2 DEFINED AT LINE 274
TOKEN_PLUS:         00A3 DEFINED AT LINE 275
TOKEN_MINUS:        00A4 DEFINED AT LINE 276
TOKEN_GREATER:      00AA DEFINED AT LINE 277
TOKEN_EQUAL:        00AB DEFINED AT LINE 278
NUM_TOKENS:         001C DEFINED AT LINE 279
UNFNC:              0238 DEFINED AT LINE 281
                    > USED AT LINE 2473
                    > USED AT LINE 2475
TOKEN_SGN:          00AD DEFINED AT LINE 282
                    > USED AT LINE 2473
                    > USED AT LINE 2475
TOKEN_LEFTSTR:      00C1 DEFINED AT LINE 303
MATHTBL:            0266 DEFINED AT LINE 308
                    > USED AT LINE 930
                    > USED AT LINE 2204
                    > USED AT LINE 2233
                    > USED AT LINE 2241
                    > USED AT LINE 2243
                    > USED AT LINE 2259
TOKEN_NAME_TABLE:   0284 DEFINED AT LINE 330
                    > USED AT LINE 880
                    > USED AT LINE 932
                    > USED AT LINE 1138
                    > USED AT LINE 1143
ERROR_MESSAGES:     0364 DEFINED AT LINE 401
                    > USED AT LINE 612
                    > USED AT LINE 614
ERR_NOFOR:          0000 DEFINED AT LINE 402
ERR_SYNTAX:         0002 DEFINED AT LINE 404
ERR_NOGOSUB:        0004 DEFINED AT LINE 406
ERR_NODATA:         0006 DEFINED AT LINE 408
ERR_ILLQTY:         0008 DEFINED AT LINE 410
ERR_OVERFLOW:       000A DEFINED AT LINE 412
ERR_MEMFULL:        000C DEFINED AT LINE 414
ERR_UNDEFSTAT:      000E DEFINED AT LINE 416
ERR_BADSUBS:        0010 DEFINED AT LINE 418
ERR_REDIMD:         0012 DEFINED AT LINE 420
ERR_ZERODIV:        0014 DEFINED AT LINE 422
ERR_ILLDIR:         0016 DEFINED AT LINE 424
ERR_BADTYPE:        0018 DEFINED AT LINE 426
ERR_STRLONG:        001A DEFINED AT LINE 428
ERR_FRMCPX:         001C DEFINED AT LINE 430
ERR_CANTCONT:       001E DEFINED AT LINE 432
ERR_UNDEFFN:        0020 DEFINED AT LINE 434
QT_ERROR:           0386 DEFINED AT LINE 438
QT_IN:              038D DEFINED AT LINE 441
QT_OK:              0392 DEFINED AT LINE 444
QT_BREAK:           0399 DEFINED AT LINE 447
GTFORPNT:           03A1 DEFINED AT LINE 468
                    > USED AT LINE 1163
                    > USED AT LINE 1445
                    > USED AT LINE 2062
L2279:              03A6 DEFINED AT LINE 474
                    > USED AT LINE 495
L228E:              03BB DEFINED AT LINE 484
                    > USED AT LINE 479
L229A:              03C7 DEFINED AT LINE 490
                    > USED AT LINE 486
L22A1:              03CE DEFINED AT LINE 496
                    > USED AT LINE 477
                    > USED AT LINE 489
BLTU:               03CF DEFINED AT LINE 506
                    > USED AT LINE 720
                    > USED AT LINE 2721
BLTU2:              03D6 DEFINED AT LINE 510
                    > USED AT LINE 3558
L22C6:              03F3 DEFINED AT LINE 529
                    > USED AT LINE 526
L22D2:              03FF DEFINED AT LINE 536
                    > USED AT LINE 541
L22D6:              0403 DEFINED AT LINE 539
                    > USED AT LINE 533
                    > USED AT LINE 535
                    > USED AT LINE 548
L22DD:              040A DEFINED AT LINE 544
                    > USED AT LINE 521
CHKMEM:             0412 DEFINED AT LINE 554
                    > USED AT LINE 1173
                    > USED AT LINE 1392
                    > USED AT LINE 2166
REASON:             041F DEFINED AT LINE 567
                    > USED AT LINE 507
                    > USED AT LINE 2909
                    > USED AT LINE 2958
                    > USED AT LINE 5732
L22FC:              0429 DEFINED AT LINE 573
                    > USED AT LINE 570
L2300:              042D DEFINED AT LINE 577
                    > USED AT LINE 581
L230B:              0438 DEFINED AT LINE 584
                    > USED AT LINE 588
L231E:              044B DEFINED AT LINE 597
                    > USED AT LINE 569
                    > USED AT LINE 572
                    > USED AT LINE 593
MEMERR:             044C DEFINED AT LINE 599
                    > USED AT LINE 557
                    > USED AT LINE 561
                    > USED AT LINE 594
                    > USED AT LINE 596
                    > USED AT LINE 3016
ERROR:              044E DEFINED AT LINE 608
                    > USED AT LINE 1347
                    > USED AT LINE 1453
                    > USED AT LINE 2147
                    > USED AT LINE 2421
                    > USED AT LINE 2890
                    > USED AT LINE 3139
                    > USED AT LINE 3334
                    > USED AT LINE 3589
                    > USED AT LINE 4190
                    > USED AT LINE 4526
PRINT_ERROR_LINNUM: 0469 DEFINED AT LINE 624
                    > USED AT LINE 1336
RESTART:            0474 DEFINED AT LINE 633
                    > USED AT LINE 628
                    > USED AT LINE 1121
                    > USED AT LINE 1338
                    > USED AT LINE 5836
L2351:              047D DEFINED AT LINE 638
                    > USED AT LINE 646
                    > USED AT LINE 749
NUMBERED_LINE:      0495 DEFINED AT LINE 655
                    > USED AT LINE 649
L23A5:              04D0 DEFINED AT LINE 687
                    > USED AT LINE 684
L23AD:              04D8 DEFINED AT LINE 693
                    > USED AT LINE 690
                    > USED AT LINE 697
                    > USED AT LINE 701
PUT_NEW_LINE:       04E6 DEFINED AT LINE 703
                    > USED AT LINE 660
L23D6:              0501 DEFINED AT LINE 718
                    > USED AT LINE 716
L23E6:              0511 DEFINED AT LINE 728
                    > USED AT LINE 732
FIX_LINKS:          0519 DEFINED AT LINE 737
                    > USED AT LINE 705
L23FA:              0525 DEFINED AT LINE 744
                    > USED AT LINE 768
L2405:              0530 DEFINED AT LINE 752
                    > USED AT LINE 755
L2420:              054B DEFINED AT LINE 770
                    > USED AT LINE 789
L2423:              0551 DEFINED AT LINE 774
                    > USED AT LINE 795
INLIN:              0557 DEFINED AT LINE 780
                    > USED AT LINE 639
                    > USED AT LINE 1893
INLIN2:             0559 DEFINED AT LINE 782
                    > USED AT LINE 773
                    > USED AT LINE 791
                    > USED AT LINE 793
                    > USED AT LINE 805
L2443:              0574 DEFINED AT LINE 796
                    > USED AT LINE 785
L244C:              057C DEFINED AT LINE 802
                    > USED AT LINE 798
L2453:              0583 DEFINED AT LINE 806
                    > USED AT LINE 787
GETLN:              0586 DEFINED AT LINE 808
                    > USED AT LINE 783
RDKEY:              0599 DEFINED AT LINE 825
L2465:              05A5 DEFINED AT LINE 833
                    > USED AT LINE 827
PARSE_INPUT_LINE:   05A6 DEFINED AT LINE 838
                    > USED AT LINE 650
                    > USED AT LINE 657
L246C:              05AC DEFINED AT LINE 842
                    > USED AT LINE 906
L2484:              05C4 DEFINED AT LINE 855
                    > USED AT LINE 852
L248C:              05CC DEFINED AT LINE 864
                    > USED AT LINE 857
L2496:              05D6 DEFINED AT LINE 871
                    > USED AT LINE 881
L2497:              05D7 DEFINED AT LINE 873
                    > USED AT LINE 878
L2498:              05D8 DEFINED AT LINE 875
                    > USED AT LINE 933
L24AA:              05EA DEFINED AT LINE 888
                    > USED AT LINE 935
L24AC:              05EC DEFINED AT LINE 890
                    > USED AT LINE 845
                    > USED AT LINE 850
                    > USED AT LINE 854
                    > USED AT LINE 859
                    > USED AT LINE 914
                    > USED AT LINE 916
L24BF:              05FF DEFINED AT LINE 901
                    > USED AT LINE 898
L24C1:              0601 DEFINED AT LINE 903
                    > USED AT LINE 900
L24C8:              0608 DEFINED AT LINE 912
                    > USED AT LINE 921
L24D0:              0610 DEFINED AT LINE 917
                    > USED AT LINE 848
L24D7:              0617 DEFINED AT LINE 925
                    > USED AT LINE 883
L24DB:              061B DEFINED AT LINE 928
                    > USED AT LINE 931
L24EA:              062A DEFINED AT LINE 937
                    > USED AT LINE 895
FNDLIN:             0632 DEFINED AT LINE 951
                    > USED AT LINE 659
                    > USED AT LINE 1058
FL1:                0636 DEFINED AT LINE 954
                    > USED AT LINE 980
                    > USED AT LINE 1428
L250D:              064D DEFINED AT LINE 968
                    > USED AT LINE 965
L2516:              0656 DEFINED AT LINE 974
                    > USED AT LINE 967
L251F:              065F DEFINED AT LINE 981
                    > USED AT LINE 959
L2520:              0660 DEFINED AT LINE 983
                    > USED AT LINE 964
                    > USED AT LINE 972
                    > USED AT LINE 973
                    > USED AT LINE 989
                    > USED AT LINE 1062
                    > USED AT LINE 1065
NEW:                0661 DEFINED AT LINE 988
                    > USED AT LINE 267
SCRTCH:             0663 DEFINED AT LINE 990
                    > USED AT LINE 5748
SETPTRS:            0677 DEFINED AT LINE 1003
                    > USED AT LINE 738
                    > USED AT LINE 1377
CLEARC:             067A DEFINED AT LINE 1008
                    > USED AT LINE 1371
                    > USED AT LINE 1379
STKINI:             0691 DEFINED AT LINE 1021
                    > USED AT LINE 616
L256A:              06A6 DEFINED AT LINE 1033
                    > USED AT LINE 1055
STXTPT:             06A7 DEFINED AT LINE 1038
                    > USED AT LINE 1004
LIST:               06B5 DEFINED AT LINE 1051
                    > USED AT LINE 265
L2581:              06BD DEFINED AT LINE 1056
                    > USED AT LINE 1052
                    > USED AT LINE 1053
L2598:              06D4 DEFINED AT LINE 1066
                    > USED AT LINE 1060
L25A6:              06E2 DEFINED AT LINE 1075
                    > USED AT LINE 1071
                    > USED AT LINE 1119
L25C1:              06FF DEFINED AT LINE 1091
                    > USED AT LINE 1088
L25C3:              0701 DEFINED AT LINE 1094
                    > USED AT LINE 1090
L25CA:              0708 DEFINED AT LINE 1098
                    > USED AT LINE 1144
L25CE:              070C DEFINED AT LINE 1101
                    > USED AT LINE 1123
                    > USED AT LINE 1125
                    > USED AT LINE 1127
LA519:              0719 DEFINED AT LINE 1108
                    > USED AT LINE 1104
L25E5:              072B DEFINED AT LINE 1120
                    > USED AT LINE 1079
                    > USED AT LINE 1092
L25E8:              072E DEFINED AT LINE 1122
                    > USED AT LINE 1111
L25F2:              0740 DEFINED AT LINE 1133
                    > USED AT LINE 1140
L25F5:              0743 DEFINED AT LINE 1136
                    > USED AT LINE 1139
L25FD:              074B DEFINED AT LINE 1141
                    > USED AT LINE 1135
                    > USED AT LINE 1146
FOR:                0756 DEFINED AT LINE 1159
                    > USED AT LINE 237
L2619:              0767 DEFINED AT LINE 1169
                    > USED AT LINE 1164
STEP:               079F DEFINED AT LINE 1202
L2665:              07B3 DEFINED AT LINE 1211
                    > USED AT LINE 1208
NEWSTT:             07C2 DEFINED AT LINE 1223
                    > USED AT LINE 1257
                    > USED AT LINE 1406
                    > USED AT LINE 2104
L2683:              07D1 DEFINED AT LINE 1231
                    > USED AT LINE 1227
SYNERR1:            07D9 DEFINED AT LINE 1236
                    > USED AT LINE 1275
LA5DC:              07DC DEFINED AT LINE 1238
                    > USED AT LINE 1233
NEWSTT2:            07F6 DEFINED AT LINE 1254
                    > USED AT LINE 651
                    > USED AT LINE 1235
                    > USED AT LINE 1252
EXECUTE_STATEMENT:  07FF DEFINED AT LINE 1264
                    > USED AT LINE 1256
                    > USED AT LINE 1535
EXECUTE_STATEMENT1: 0802 DEFINED AT LINE 1267
                    > USED AT LINE 1554
RESTORE:            081A DEFINED AT LINE 1286
                    > USED AT LINE 248
                    > USED AT LINE 1019
SETDA:              0824 DEFINED AT LINE 1293
                    > USED AT LINE 1291
                    > USED AT LINE 2029
ISCNTC:             0829 DEFINED AT LINE 1301
                    > USED AT LINE 1080
                    > USED AT LINE 1224
STOP:               082C DEFINED AT LINE 1308
                    > USED AT LINE 254
END:                082E DEFINED AT LINE 1313
                    > USED AT LINE 236
END2:               082F DEFINED AT LINE 1315
                    > USED AT LINE 1309
CONTROL_C_TYPED:    083B DEFINED AT LINE 1322
                    > USED AT LINE 1889
END4:               0843 DEFINED AT LINE 1327
                    > USED AT LINE 1319
L2701:              0845 DEFINED AT LINE 1330
                    > USED AT LINE 1242
L270E:              0852 DEFINED AT LINE 1337
                    > USED AT LINE 1335
CONT:               0855 DEFINED AT LINE 1342
                    > USED AT LINE 264
L271C:              0860 DEFINED AT LINE 1348
                    > USED AT LINE 1346
RET1:               086E DEFINED AT LINE 1356
                    > USED AT LINE 1265
                    > USED AT LINE 1316
                    > USED AT LINE 1343
                    > USED AT LINE 1360
                    > USED AT LINE 1370
NULL:               086F DEFINED AT LINE 1358
                    > USED AT LINE 256
L2739:              087D DEFINED AT LINE 1367
                    > USED AT LINE 1363
CLEAR:              0880 DEFINED AT LINE 1369
                    > USED AT LINE 266
RUN:                0885 DEFINED AT LINE 1375
                    > USED AT LINE 246
L27CF:              088A DEFINED AT LINE 1378
                    > USED AT LINE 1376
GOSUB:              0890 DEFINED AT LINE 1390
                    > USED AT LINE 250
L27E9:              08A4 DEFINED AT LINE 1403
                    > USED AT LINE 1380
GOTO:               08AD DEFINED AT LINE 1411
                    > USED AT LINE 245
                    > USED AT LINE 1405
                    > USED AT LINE 1533
L2809:              08C4 DEFINED AT LINE 1424
                    > USED AT LINE 1416
L280D:              08C8 DEFINED AT LINE 1427
                    > USED AT LINE 1421
                    > USED AT LINE 1423
L281E:              08D9 DEFINED AT LINE 1436
                    > USED AT LINE 1442
POP:                08DA DEFINED AT LINE 1441
                    > USED AT LINE 251
UNDERR:             08EB DEFINED AT LINE 1451
                    > USED AT LINE 1429
SYNERR2:            08F0 DEFINED AT LINE 1455
                    > USED AT LINE 1549
RETURN:             08F3 DEFINED AT LINE 1458
                    > USED AT LINE 1448
DATA:               0900 DEFINED AT LINE 1472
                    > USED AT LINE 239
                    > USED AT LINE 3159
ADDON:              0903 DEFINED AT LINE 1477
                    > USED AT LINE 1529
                    > USED AT LINE 2019
L2852:              090D DEFINED AT LINE 1484
                    > USED AT LINE 1482
                    > USED AT LINE 1504
                    > USED AT LINE 1506
DATAN:              090E DEFINED AT LINE 1489
                    > USED AT LINE 1174
                    > USED AT LINE 1473
                    > USED AT LINE 2001
REMN:               0911 DEFINED AT LINE 1492
                    > USED AT LINE 1413
                    > USED AT LINE 1528
L285E:              0919 DEFINED AT LINE 1497
                    > USED AT LINE 1509
L2866:              0921 DEFINED AT LINE 1502
                    > USED AT LINE 1510
IF:                 0930 DEFINED AT LINE 1514
                    > USED AT LINE 247
L2884:              093F DEFINED AT LINE 1521
                    > USED AT LINE 1518
REM:                0943 DEFINED AT LINE 1527
                    > USED AT LINE 253
L288D:              0948 DEFINED AT LINE 1530
                    > USED AT LINE 1523
L2895:              0950 DEFINED AT LINE 1534
                    > USED AT LINE 1532
ON:                 0953 DEFINED AT LINE 1542
                    > USED AT LINE 255
L28A0:              095B DEFINED AT LINE 1547
                    > USED AT LINE 1577
L28A4:              095F DEFINED AT LINE 1550
                    > USED AT LINE 1546
                    > USED AT LINE 1559
L28AC:              0967 DEFINED AT LINE 1555
                    > USED AT LINE 1552
L28B7:              0972 DEFINED AT LINE 1561
                    > USED AT LINE 1571
LINGET:             0973 DEFINED AT LINE 1566
                    > USED AT LINE 656
                    > USED AT LINE 1057
                    > USED AT LINE 1064
                    > USED AT LINE 1412
                    > USED AT LINE 1557
                    > USED AT LINE 5682
                    > USED AT LINE 5703
L28BE:              0979 DEFINED AT LINE 1570
                    > USED AT LINE 1609
L28EC:              09A7 DEFINED AT LINE 1607
                    > USED AT LINE 1605
LET:                09AD DEFINED AT LINE 1616
                    > USED AT LINE 243
                    > USED AT LINE 1162
                    > USED AT LINE 1271
LETSTRING:          09C9 DEFINED AT LINE 1633
                    > USED AT LINE 1628
                    > USED AT LINE 1973
L2938:              09DA DEFINED AT LINE 1646
                    > USED AT LINE 1641
L2946:              09E8 DEFINED AT LINE 1654
                    > USED AT LINE 1640
                    > USED AT LINE 1645
                    > USED AT LINE 1649
L294D:              09EF DEFINED AT LINE 1658
                    > USED AT LINE 1650
                    > USED AT LINE 1653
L2963:              0A05 DEFINED AT LINE 1669
                    > USED AT LINE 1657
PRSTRING:           0A1D DEFINED AT LINE 1683
                    > USED AT LINE 1704
L297E:              0A20 DEFINED AT LINE 1685
                    > USED AT LINE 1717
PRINT:              0A23 DEFINED AT LINE 1690
                    > USED AT LINE 263
PRINT2:             0A25 DEFINED AT LINE 1692
                    > USED AT LINE 1778
L29B1:              0A52 DEFINED AT LINE 1714
                    > USED AT LINE 1712
L29B9:              0A5A DEFINED AT LINE 1718
                    > USED AT LINE 807
CRDO:               0A60 DEFINED AT LINE 1722
                    > USED AT LINE 610
                    > USED AT LINE 776
                    > USED AT LINE 1081
                    > USED AT LINE 1691
                    > USED AT LINE 1713
                    > USED AT LINE 1748
                    > USED AT LINE 1821
                    > USED AT LINE 5647
                    > USED AT LINE 5733
PRINTNULLS:         0A6C DEFINED AT LINE 1728
                    > USED AT LINE 1800
L29D3:              0A74 DEFINED AT LINE 1734
                    > USED AT LINE 1737
L29D9:              0A7A DEFINED AT LINE 1738
                    > USED AT LINE 1732
L29DD:              0A7E DEFINED AT LINE 1742
                    > USED AT LINE 1693
                    > USED AT LINE 1794
L29DE:              0A7F DEFINED AT LINE 1744
                    > USED AT LINE 1699
L29EA:              0A8B DEFINED AT LINE 1750
                    > USED AT LINE 1747
L29EB:              0A8C DEFINED AT LINE 1752
                    > USED AT LINE 1754
L29F5:              0A96 DEFINED AT LINE 1758
                    > USED AT LINE 1695
                    > USED AT LINE 1697
L2A08:              0AAA DEFINED AT LINE 1770
                    > USED AT LINE 1757
L2A0A:              0AAB DEFINED AT LINE 1772
                    > USED AT LINE 1765
                    > USED AT LINE 1775
L2A0D:              0AB1 DEFINED AT LINE 1776
                    > USED AT LINE 1701
                    > USED AT LINE 1749
                    > USED AT LINE 1768
                    > USED AT LINE 1769
STROUT:             0AB7 DEFINED AT LINE 1782
                    > USED AT LINE 625
                    > USED AT LINE 1857
                    > USED AT LINE 2036
                    > USED AT LINE 4984
                    > USED AT LINE 5598
                    > USED AT LINE 5652
                    > USED AT LINE 5696
                    > USED AT LINE 5743
STRPRT:             0ABA DEFINED AT LINE 1787
                    > USED AT LINE 1684
                    > USED AT LINE 1715
                    > USED AT LINE 1880
L2A22:              0AC1 DEFINED AT LINE 1792
                    > USED AT LINE 1799
                    > USED AT LINE 1801
OUTSP:              0AD4 DEFINED AT LINE 1803
                    > USED AT LINE 1716
                    > USED AT LINE 1773
                    > USED AT LINE 1892
OUTQUES:            0AD7 DEFINED AT LINE 1806
                    > USED AT LINE 611
                    > USED AT LINE 1891
                    > USED AT LINE 1947
OUTDO:              0AD9 DEFINED AT LINE 1811
                    > USED AT LINE 613
                    > USED AT LINE 615
                    > USED AT LINE 771
                    > USED AT LINE 775
                    > USED AT LINE 804
                    > USED AT LINE 1102
                    > USED AT LINE 1145
                    > USED AT LINE 1725
                    > USED AT LINE 1727
                    > USED AT LINE 1735
                    > USED AT LINE 1796
L2A4C:              0AEB DEFINED AT LINE 1822
                    > USED AT LINE 1820
L2A4E:              0AED DEFINED AT LINE 1824
                    > USED AT LINE 1817
L2A56:              0AF5 DEFINED AT LINE 1832
                    > USED AT LINE 1813
INPUTERR:           0AF8 DEFINED AT LINE 1843
                    > USED AT LINE 1985
SYNERR4:            0B04 DEFINED AT LINE 1852
                    > USED AT LINE 1762
RESPERR:            0B07 DEFINED AT LINE 1854
                    > USED AT LINE 1845
GET:                0B17 DEFINED AT LINE 1866
INPUT:              0B17 DEFINED AT LINE 1873
                    > USED AT LINE 240
L2A9E:              0B28 DEFINED AT LINE 1881
                    > USED AT LINE 1876
NXIN:               0B3A DEFINED AT LINE 1890
                    > USED AT LINE 1885
                    > USED AT LINE 1948
                    > USED AT LINE 5653
                    > USED AT LINE 5697
READ:               0B43 DEFINED AT LINE 1900
                    > USED AT LINE 242
L2ABE:              0B48 DEFINED AT LINE 1905
                    > USED AT LINE 1887
PROCESS_INPUT_ITEM: 0B4F DEFINED AT LINE 1918
                    > USED AT LINE 1998
INSTART:            0B79 DEFINED AT LINE 1952
                    > USED AT LINE 1931
                    > USED AT LINE 2022
L2B1D:              0B8D DEFINED AT LINE 1963
                    > USED AT LINE 1958
L2B28:              0B98 DEFINED AT LINE 1970
                    > USED AT LINE 1968
L2B34:              0BA4 DEFINED AT LINE 1976
                    > USED AT LINE 1955
INPUT_MORE:         0BAA DEFINED AT LINE 1980
                    > USED AT LINE 1974
L2B48:              0BB6 DEFINED AT LINE 1986
                    > USED AT LINE 1982
                    > USED AT LINE 1984
FINDATA:            0BD1 DEFINED AT LINE 2000
                    > USED AT LINE 1946
                    > USED AT LINE 2021
L2B7C:              0BEA DEFINED AT LINE 2016
                    > USED AT LINE 2004
INPDONE:            0BF7 DEFINED AT LINE 2024
                    > USED AT LINE 1996
L2B94:              0C02 DEFINED AT LINE 2030
                    > USED AT LINE 2028
L2BA1:              0C0F DEFINED AT LINE 2037
                    > USED AT LINE 2033
ERREXTRA:           0C10 DEFINED AT LINE 2040
ERRREENTRY:         0C21 DEFINED AT LINE 2045
NEXT:               0C34 DEFINED AT LINE 2053
                    > USED AT LINE 238
NEXT1:              0C3A DEFINED AT LINE 2057
                    > USED AT LINE 2054
                    > USED AT LINE 2114
NEXT2:              0C3D DEFINED AT LINE 2059
                    > USED AT LINE 2056
GERR:               0C48 DEFINED AT LINE 2065
                    > USED AT LINE 2008
NEXT3:              0C4A DEFINED AT LINE 2067
                    > USED AT LINE 2063
L2C1F:              0C8C DEFINED AT LINE 2103
                    > USED AT LINE 2112
L2C22:              0C8F DEFINED AT LINE 2105
                    > USED AT LINE 2094
FRMNUM:             0CA1 DEFINED AT LINE 2118
                    > USED AT LINE 1189
                    > USED AT LINE 1210
                    > USED AT LINE 2782
                    > USED AT LINE 3211
                    > USED AT LINE 3854
                    > USED AT LINE 3913
CHKNUM:             0CA4 DEFINED AT LINE 2123
                    > USED AT LINE 1188
                    > USED AT LINE 2206
                    > USED AT LINE 2304
                    > USED AT LINE 2478
                    > USED AT LINE 3147
                    > USED AT LINE 3169
                    > USED AT LINE 3177
                    > USED AT LINE 3242
CHKSTR:             0CA6 DEFINED AT LINE 2129
                    > USED AT LINE 2453
                    > USED AT LINE 3578
                    > USED AT LINE 3647
CHKVAL:             0CA7 DEFINED AT LINE 2136
                    > USED AT LINE 1627
                    > USED AT LINE 2510
L2C40:              0CAD DEFINED AT LINE 2140
                    > USED AT LINE 2143
L2C41:              0CAE DEFINED AT LINE 2142
                    > USED AT LINE 2138
L2C43:              0CB0 DEFINED AT LINE 2144
                    > USED AT LINE 2139
JERROR:             0CB2 DEFINED AT LINE 2146
                    > USED AT LINE 2066
FRMEVL:             0CB5 DEFINED AT LINE 2153
                    > USED AT LINE 1515
                    > USED AT LINE 1624
                    > USED AT LINE 1702
                    > USED AT LINE 2119
                    > USED AT LINE 2401
                    > USED AT LINE 2451
L2C4E:              0CBB DEFINED AT LINE 2157
                    > USED AT LINE 2155
FRMEVL1:            0CC0 DEFINED AT LINE 2161
                    > USED AT LINE 2247
FRMEVL2:            0CCF DEFINED AT LINE 2170
                    > USED AT LINE 3601
L2C65:              0CD2 DEFINED AT LINE 2172
                    > USED AT LINE 2186
L2C81:              0CEE DEFINED AT LINE 2187
                    > USED AT LINE 2175
                    > USED AT LINE 2177
L2C92:              0CFF DEFINED AT LINE 2196
                    > USED AT LINE 2194
FRM_PRECEDENCE_TEST: 0D07 DEFINED AT LINE 2202
                    > USED AT LINE 2231
L2CA3:              0D10 DEFINED AT LINE 2207
                    > USED AT LINE 2235
L2CA4:              0D11 DEFINED AT LINE 2209
                    > USED AT LINE 2428
FRM_RELATIONAL:     0D1E DEFINED AT LINE 2220
                    > USED AT LINE 2189
L2CBB:              0D28 DEFINED AT LINE 2227
                    > USED AT LINE 2225
PREFNC:             0D30 DEFINED AT LINE 2232
                    > USED AT LINE 2213
FRM_RECURSE:        0D37 DEFINED AT LINE 2240
                    > USED AT LINE 2210
SNTXERR:            0D47 DEFINED AT LINE 2248
                    > USED AT LINE 2183
FRM_STACK1:         0D4A DEFINED AT LINE 2257
                    > USED AT LINE 2245
FRM_STACK2:         0D4F DEFINED AT LINE 2263
                    > USED AT LINE 1213
FRM_STACK3:         0D5A DEFINED AT LINE 2277
                    > USED AT LINE 1198
L2D02:              0D6C DEFINED AT LINE 2288
                    > USED AT LINE 2190
                    > USED AT LINE 2192
GOEX:               0D6F DEFINED AT LINE 2291
                    > USED AT LINE 2215
FRM_PERFORM1:       0D71 DEFINED AT LINE 2301
                    > USED AT LINE 2205
L2D0E:              0D78 DEFINED AT LINE 2305
                    > USED AT LINE 2303
FRM_PERFORM2:       0D7A DEFINED AT LINE 2307
                    > USED AT LINE 2216
                    > USED AT LINE 2234
EXIT:               0D91 DEFINED AT LINE 2323
                    > USED AT LINE 2292
FRM_ELEMENT:        0D94 DEFINED AT LINE 2332
                    > USED AT LINE 2167
                    > USED AT LINE 3577
L2D31:              0D98 DEFINED AT LINE 2335
                    > USED AT LINE 2349
L2D36:              0D9D DEFINED AT LINE 2338
                    > USED AT LINE 2345
L2D39:              0DA0 DEFINED AT LINE 2340
                    > USED AT LINE 2337
CON_PI:             0DA5 DEFINED AT LINE 2343
STRTXT:             0DB5 DEFINED AT LINE 2357
                    > USED AT LINE 1877
L2D57:              0DBE DEFINED AT LINE 2363
                    > USED AT LINE 2361
NOT_:               0DC4 DEFINED AT LINE 2371
                    > USED AT LINE 2351
EQUOP:              0DCC DEFINED AT LINE 2380
                    > USED AT LINE 326
L2D74:              0DDB DEFINED AT LINE 2388
                    > USED AT LINE 2373
L2D7B:              0DE2 DEFINED AT LINE 2392
                    > USED AT LINE 2390
PARCHK:             0DE9 DEFINED AT LINE 2399
                    > USED AT LINE 2394
                    > USED AT LINE 2469
                    > USED AT LINE 3176
CHKCLS:             0DEF DEFINED AT LINE 2402
                    > USED AT LINE 2842
                    > USED AT LINE 3148
                    > USED AT LINE 3795
CHKOPN:             0DF2 DEFINED AT LINE 2405
                    > USED AT LINE 2400
                    > USED AT LINE 2450
                    > USED AT LINE 3143
CHKCOM:             0DF5 DEFINED AT LINE 2408
                    > USED AT LINE 1997
                    > USED AT LINE 2452
                    > USED AT LINE 2578
                    > USED AT LINE 3773
                    > USED AT LINE 3920
SYNCHR:             0DF7 DEFINED AT LINE 2413
                    > USED AT LINE 1187
                    > USED AT LINE 1520
                    > USED AT LINE 1621
                    > USED AT LINE 1879
                    > USED AT LINE 3150
                    > USED AT LINE 3163
SYNERR:             0E00 DEFINED AT LINE 2419
                    > USED AT LINE 1237
                    > USED AT LINE 1456
                    > USED AT LINE 1853
                    > USED AT LINE 2249
                    > USED AT LINE 2416
                    > USED AT LINE 2610
                    > USED AT LINE 3218
                    > USED AT LINE 5685
MIN:                0E05 DEFINED AT LINE 2423
                    > USED AT LINE 2347
EQUL:               0E07 DEFINED AT LINE 2425
                    > USED AT LINE 2375
FRM_VARIABLE:       0E0C DEFINED AT LINE 2430
                    > USED AT LINE 2342
FRM_VARIABLE_CALL:  0E0E DEFINED AT LINE 2432
L2DB1:              0E18 DEFINED AT LINE 2440
                    > USED AT LINE 2436
UNARY:              0E1B DEFINED AT LINE 2443
                    > USED AT LINE 2395
L2DEF:              0E45 DEFINED AT LINE 2468
                    > USED AT LINE 2449
L2DF4:              0E4A DEFINED AT LINE 2472
                    > USED AT LINE 2467
OR:                 0E5A DEFINED AT LINE 2480
                    > USED AT LINE 322
TAND:               0E5D DEFINED AT LINE 2484
                    > USED AT LINE 320
RELOPS:             0E8A DEFINED AT LINE 2509
                    > USED AT LINE 328
STRCMP:             0EA2 DEFINED AT LINE 2524
                    > USED AT LINE 2511
L2E74:              0ECA DEFINED AT LINE 2545
                    > USED AT LINE 2540
                    > USED AT LINE 2542
STRCMP1:            0ECF DEFINED AT LINE 2549
                    > USED AT LINE 2561
NUMCMP:             0ED5 DEFINED AT LINE 2554
                    > USED AT LINE 2520
L2E84:              0EDA DEFINED AT LINE 2558
                    > USED AT LINE 2552
CMPDONE:            0EE6 DEFINED AT LINE 2565
                    > USED AT LINE 2555
                    > USED AT LINE 2557
                    > USED AT LINE 2563
L2E99:              0EEF DEFINED AT LINE 2572
                    > USED AT LINE 2570
NXDIM:              0EF2 DEFINED AT LINE 2577
                    > USED AT LINE 2583
DIM:                0EF5 DEFINED AT LINE 2579
                    > USED AT LINE 241
PTRGET:             0EFF DEFINED AT LINE 2600
                    > USED AT LINE 1617
                    > USED AT LINE 1919
                    > USED AT LINE 2058
                    > USED AT LINE 2431
                    > USED AT LINE 3146
PTRGET2:            0F04 DEFINED AT LINE 2603
                    > USED AT LINE 2581
PTRGET3:            0F06 DEFINED AT LINE 2605
                    > USED AT LINE 3166
NAMOK:              0F13 DEFINED AT LINE 2611
                    > USED AT LINE 2609
L2ECD:              0F21 DEFINED AT LINE 2618
                    > USED AT LINE 2615
L2ECE:              0F22 DEFINED AT LINE 2620
                    > USED AT LINE 2622
                    > USED AT LINE 2624
L2ED8:              0F2C DEFINED AT LINE 2625
                    > USED AT LINE 2617
L2EF9:              0F3B DEFINED AT LINE 2634
                    > USED AT LINE 2627
L2F05:              0F47 DEFINED AT LINE 2641
                    > USED AT LINE 2639
L2F0F:              0F51 DEFINED AT LINE 2647
                    > USED AT LINE 2670
L2F11:              0F53 DEFINED AT LINE 2649
                    > USED AT LINE 2668
L2F1B:              0F5D DEFINED AT LINE 2655
                    > USED AT LINE 2652
L2F29:              0F6B DEFINED AT LINE 2664
                    > USED AT LINE 2658
ISLETC:             0F75 DEFINED AT LINE 2677
                    > USED AT LINE 2341
                    > USED AT LINE 2608
                    > USED AT LINE 2616
                    > USED AT LINE 2623
L2F3C:              0F7E DEFINED AT LINE 2683
                    > USED AT LINE 2679
NAMENOTFOUND:       0F7F DEFINED AT LINE 2688
                    > USED AT LINE 2654
C_ZERO:             0F8A DEFINED AT LINE 2697
MAKENEWVARIABLE:    0F8C DEFINED AT LINE 2705
                    > USED AT LINE 2692
L2F68:              0FA2 DEFINED AT LINE 2718
                    > USED AT LINE 2716
SET_VARPNT_AND_YA:  0FCB DEFINED AT LINE 2745
                    > USED AT LINE 2662
L2F9E:              0FD5 DEFINED AT LINE 2752
                    > USED AT LINE 2750
GETARY:             0FDA DEFINED AT LINE 2760
                    > USED AT LINE 2898
                    > USED AT LINE 2908
L2FAF:              0FE6 DEFINED AT LINE 2768
                    > USED AT LINE 2766
NEG32768:           0FEB DEFINED AT LINE 2773
MAKINT:             0FEF DEFINED AT LINE 2780
                    > USED AT LINE 2821
MKINT:              0FF5 DEFINED AT LINE 2787
                    > USED AT LINE 3859
AYINT:              0FF9 DEFINED AT LINE 2794
                    > USED AT LINE 2381
                    > USED AT LINE 2487
                    > USED AT LINE 2495
MI1:                1006 DEFINED AT LINE 2801
                    > USED AT LINE 2789
MI2:                1008 DEFINED AT LINE 2803
                    > USED AT LINE 2797
ARRAY:              100B DEFINED AT LINE 2808
                    > USED AT LINE 2640
L2FDE:              1013 DEFINED AT LINE 2814
                    > USED AT LINE 2840
L301F:              1050 DEFINED AT LINE 2852
                    > USED AT LINE 2877
L302B:              105C DEFINED AT LINE 2859
                    > USED AT LINE 2856
L303A:              106B DEFINED AT LINE 2868
                    > USED AT LINE 2864
SUBERR:             1079 DEFINED AT LINE 2881
                    > USED AT LINE 2902
                    > USED AT LINE 3014
IQERR:              107C DEFINED AT LINE 2887
                    > USED AT LINE 1368
                    > USED AT LINE 2802
                    > USED AT LINE 3842
                    > USED AT LINE 4263
JER:                107E DEFINED AT LINE 2889
                    > USED AT LINE 2897
USE_OLD_ARRAY:      1081 DEFINED AT LINE 2894
                    > USED AT LINE 2867
MAKE_NEW_ARRAY:     1095 DEFINED AT LINE 2907
                    > USED AT LINE 2858
L308A:              10B4 DEFINED AT LINE 2925
                    > USED AT LINE 2947
L309A:              10C4 DEFINED AT LINE 2936
                    > USED AT LINE 2929
L30BD:              10E7 DEFINED AT LINE 2957
                    > USED AT LINE 2954
L30CC:              10F6 DEFINED AT LINE 2965
                    > USED AT LINE 2968
                    > USED AT LINE 2972
L30D1:              10FB DEFINED AT LINE 2969
                    > USED AT LINE 2964
FIND_ARRAY_ELEMENT: 1118 DEFINED AT LINE 2992
                    > USED AT LINE 2903
L30F6:              1120 DEFINED AT LINE 2997
                    > USED AT LINE 3035
GSE:                1136 DEFINED AT LINE 3013
                    > USED AT LINE 3007
                    > USED AT LINE 3038
                    > USED AT LINE 3041
GME:                1139 DEFINED AT LINE 3015
                    > USED AT LINE 2949
                    > USED AT LINE 2956
                    > USED AT LINE 3076
                    > USED AT LINE 3087
FAE2:               113C DEFINED AT LINE 3018
                    > USED AT LINE 3006
FAE3:               113D DEFINED AT LINE 3020
                    > USED AT LINE 3011
L3124:              114E DEFINED AT LINE 3031
                    > USED AT LINE 3024
RTS9:               116F DEFINED AT LINE 3051
                    > USED AT LINE 2984
                    > USED AT LINE 3136
MULTIPLY_SUBSCRIPT: 1170 DEFINED AT LINE 3058
                    > USED AT LINE 2942
                    > USED AT LINE 3025
L3163:              1183 DEFINED AT LINE 3069
                    > USED AT LINE 3090
L317C:              119C DEFINED AT LINE 3088
                    > USED AT LINE 3079
FRE:                11A1 DEFINED AT LINE 3097
                    > USED AT LINE 287
L3188:              11A8 DEFINED AT LINE 3101
                    > USED AT LINE 3099
GIVAYF:             11B5 DEFINED AT LINE 3114
                    > USED AT LINE 2387
                    > USED AT LINE 2505
                    > USED AT LINE 3128
POS:                11C2 DEFINED AT LINE 3121
                    > USED AT LINE 288
SNGFLT:             11C4 DEFINED AT LINE 3126
                    > USED AT LINE 3819
                    > USED AT LINE 3946
ERRDIR:             11C8 DEFINED AT LINE 3133
                    > USED AT LINE 1882
                    > USED AT LINE 3142
L31AF:              11CF DEFINED AT LINE 3138
                    > USED AT LINE 3185
DEF:                11D2 DEFINED AT LINE 3140
                    > USED AT LINE 260
FNC:                11FF DEFINED AT LINE 3161
                    > USED AT LINE 3141
                    > USED AT LINE 3171
L31F3:              1212 DEFINED AT LINE 3170
                    > USED AT LINE 2391
L3219:              1237 DEFINED AT LINE 3191
                    > USED AT LINE 3195
L324A:              1268 DEFINED AT LINE 3219
                    > USED AT LINE 3217
L3250:              126E DEFINED AT LINE 3224
                    > USED AT LINE 3160
STR:                1280 DEFINED AT LINE 3241
                    > USED AT LINE 299
STRINI:             1290 DEFINED AT LINE 3254
                    > USED AT LINE 1661
                    > USED AT LINE 3318
                    > USED AT LINE 3591
STRSPA:             1298 DEFINED AT LINE 3263
                    > USED AT LINE 3714
                    > USED AT LINE 3739
STRLIT:             12A2 DEFINED AT LINE 3275
                    > USED AT LINE 1706
                    > USED AT LINE 1783
                    > USED AT LINE 2364
                    > USED AT LINE 3249
STRLT2:             12A8 DEFINED AT LINE 3286
                    > USED AT LINE 1971
L3298:              12B2 DEFINED AT LINE 3292
                    > USED AT LINE 3299
L32A5:              12BF DEFINED AT LINE 3300
                    > USED AT LINE 3297
L32A9:              12C3 DEFINED AT LINE 3303
                    > USED AT LINE 3295
L32AA:              12C4 DEFINED AT LINE 3305
                    > USED AT LINE 3302
L32B6:              12D0 DEFINED AT LINE 3313
                    > USED AT LINE 3311
PUTNEW:             12E1 DEFINED AT LINE 3328
                    > USED AT LINE 3316
                    > USED AT LINE 3600
                    > USED AT LINE 3720
                    > USED AT LINE 3754
JERR:               12E9 DEFINED AT LINE 3333
                    > USED AT LINE 3387
PUTEMP:             12EC DEFINED AT LINE 3335
                    > USED AT LINE 3331
GETSPA:             1309 DEFINED AT LINE 3360
                    > USED AT LINE 3264
L32F1:              130B DEFINED AT LINE 3362
                    > USED AT LINE 3392
L32FC:              1316 DEFINED AT LINE 3370
                    > USED AT LINE 3368
L3306:              1320 DEFINED AT LINE 3376
                    > USED AT LINE 3373
L3311:              132B DEFINED AT LINE 3384
                    > USED AT LINE 3372
                    > USED AT LINE 3375
GARBAG:             133B DEFINED AT LINE 3398
                    > USED AT LINE 582
                    > USED AT LINE 3102
                    > USED AT LINE 3388
FINDHIGHESTSTRING:  133F DEFINED AT LINE 3401
                    > USED AT LINE 3568
L333D:              1357 DEFINED AT LINE 3414
                    > USED AT LINE 3418
L3346:              1360 DEFINED AT LINE 3419
                    > USED AT LINE 3416
L3352:              136C DEFINED AT LINE 3426
                    > USED AT LINE 3433
L335A:              1374 DEFINED AT LINE 3431
                    > USED AT LINE 3428
L335F:              1379 DEFINED AT LINE 3434
                    > USED AT LINE 3430
L3367:              1381 DEFINED AT LINE 3439
                    > USED AT LINE 3463
L336B:              1385 DEFINED AT LINE 3442
                    > USED AT LINE 3478
L3376:              1390 DEFINED AT LINE 3448
                    > USED AT LINE 3444
                    > USED AT LINE 3446
L33A7:              13B8 DEFINED AT LINE 3472
                    > USED AT LINE 3470
L33A9:              13BA DEFINED AT LINE 3474
                    > USED AT LINE 3481
L33B1:              13C2 DEFINED AT LINE 3479
                    > USED AT LINE 3476
CHECK_SIMPLE_VARIABLE: 13C7 DEFINED AT LINE 3485
                    > USED AT LINE 3432
CHECK_VARIABLE:     13CD DEFINED AT LINE 3493
                    > USED AT LINE 3417
                    > USED AT LINE 3480
L33D5:              13E2 DEFINED AT LINE 3506
                    > USED AT LINE 3502
L33DF:              13EC DEFINED AT LINE 3512
                    > USED AT LINE 3509
CHECK_BUMP:         13FC DEFINED AT LINE 3525
                    > USED AT LINE 3488
                    > USED AT LINE 3495
                    > USED AT LINE 3503
                    > USED AT LINE 3505
                    > USED AT LINE 3508
                    > USED AT LINE 3511
L33FA:              1407 DEFINED AT LINE 3532
                    > USED AT LINE 3530
                    > USED AT LINE 3542
MOVE_HIGHEST_STRING_TO_TOP: 140C DEFINED AT LINE 3540
                    > USED AT LINE 3447
CAT:                1441 DEFINED AT LINE 3572
                    > USED AT LINE 2195
L3454:              1461 DEFINED AT LINE 3590
                    > USED AT LINE 3587
MOVINS:             147E DEFINED AT LINE 3606
                    > USED AT LINE 1666
                    > USED AT LINE 3592
MOVSTR:             148C DEFINED AT LINE 3621
                    > USED AT LINE 3321
MOVSTR1:            1490 DEFINED AT LINE 3624
                    > USED AT LINE 3596
                    > USED AT LINE 3753
L3487:              1494 DEFINED AT LINE 3628
                    > USED AT LINE 3633
L3490:              149D DEFINED AT LINE 3635
                    > USED AT LINE 3626
L3499:              14A6 DEFINED AT LINE 3641
                    > USED AT LINE 3639
FRESTR:             14A7 DEFINED AT LINE 3646
                    > USED AT LINE 3825
FREFAC:             14AA DEFINED AT LINE 3652
                    > USED AT LINE 1788
                    > USED AT LINE 2528
                    > USED AT LINE 3100
FRETMP:             14AE DEFINED AT LINE 3659
                    > USED AT LINE 2534
                    > USED AT LINE 3595
                    > USED AT LINE 3599
                    > USED AT LINE 3742
L34CC:              14D9 DEFINED AT LINE 3686
                    > USED AT LINE 3684
L34CD:              14DA DEFINED AT LINE 3688
                    > USED AT LINE 3675
                    > USED AT LINE 3677
                    > USED AT LINE 3679
FRETMS:             14DF DEFINED AT LINE 3695
                    > USED AT LINE 1672
                    > USED AT LINE 3662
L34E2:              14EF DEFINED AT LINE 3704
                    > USED AT LINE 3697
                    > USED AT LINE 3699
CHRSTR:             14F0 DEFINED AT LINE 3709
                    > USED AT LINE 302
LEFTSTR:            1504 DEFINED AT LINE 3724
                    > USED AT LINE 304
SUBSTRING1:         150A DEFINED AT LINE 3728
                    > USED AT LINE 3763
L3503:              1510 DEFINED AT LINE 3733
                    > USED AT LINE 3729
SUBSTRING2:         1511 DEFINED AT LINE 3735
                    > USED AT LINE 3783
SUBSTRING3:         1512 DEFINED AT LINE 3737
                    > USED AT LINE 3786
                    > USED AT LINE 3788
L351C:              1529 DEFINED AT LINE 3751
                    > USED AT LINE 3749
RIGHTSTR:           1530 DEFINED AT LINE 3758
                    > USED AT LINE 305
MIDSTR:             153B DEFINED AT LINE 3767
                    > USED AT LINE 306
L353F:              154C DEFINED AT LINE 3775
                    > USED AT LINE 3772
SUBSTRING_SETUP:    1563 DEFINED AT LINE 3794
                    > USED AT LINE 3725
                    > USED AT LINE 3759
                    > USED AT LINE 3776
LEN:                1580 DEFINED AT LINE 3816
                    > USED AT LINE 298
SNGFLT1:            1583 DEFINED AT LINE 3818
                    > USED AT LINE 3839
GETSTR:             1586 DEFINED AT LINE 3824
                    > USED AT LINE 3817
                    > USED AT LINE 3834
                    > USED AT LINE 3868
ASC:                158F DEFINED AT LINE 3833
                    > USED AT LINE 301
GOIQ:               159C DEFINED AT LINE 3841
                    > USED AT LINE 3810
                    > USED AT LINE 3835
                    > USED AT LINE 3861
                    > USED AT LINE 3927
                    > USED AT LINE 3930
GTBYTC:             159F DEFINED AT LINE 3847
                    > USED AT LINE 1760
GETBYT:             15A2 DEFINED AT LINE 3853
                    > USED AT LINE 1359
                    > USED AT LINE 1543
                    > USED AT LINE 2462
                    > USED AT LINE 3774
                    > USED AT LINE 3921
CONINT:             15A5 DEFINED AT LINE 3858
                    > USED AT LINE 3710
VAL:                15B1 DEFINED AT LINE 3867
                    > USED AT LINE 300
L35AC:              15B9 DEFINED AT LINE 3871
                    > USED AT LINE 3869
L35C4:              15D1 DEFINED AT LINE 3885
                    > USED AT LINE 3883
POINT:              15E7 DEFINED AT LINE 3900
                    > USED AT LINE 1972
                    > USED AT LINE 2365
GTNUM:              15F0 DEFINED AT LINE 3912
                    > USED AT LINE 3951
                    > USED AT LINE 3960
COMBYTE:            15F6 DEFINED AT LINE 3919
                    > USED AT LINE 3965
GETADR:             15FC DEFINED AT LINE 3925
                    > USED AT LINE 3914
                    > USED AT LINE 3941
PEEK:               1612 DEFINED AT LINE 3940
                    > USED AT LINE 297
POKE:               161D DEFINED AT LINE 3950
                    > USED AT LINE 261
WAIT:               1626 DEFINED AT LINE 3959
                    > USED AT LINE 257
L3628:              1635 DEFINED AT LINE 3966
                    > USED AT LINE 3964
L362C:              1639 DEFINED AT LINE 3969
                    > USED AT LINE 3973
RTS3:               1641 DEFINED AT LINE 3974
                    > USED AT LINE 4027
TEMP1X:             00A4 DEFINED AT LINE 3976
FADDH:              1642 DEFINED AT LINE 3980
                    > USED AT LINE 5046
                    > USED AT LINE 5459
FSUB:               1649 DEFINED AT LINE 3987
                    > USED AT LINE 4278
                    > USED AT LINE 5455
                    > USED AT LINE 5553
FSUBT:              164C DEFINED AT LINE 3992
                    > USED AT LINE 312
                    > USED AT LINE 5312
                    > USED AT LINE 5445
FADD1:              165B DEFINED AT LINE 4006
                    > USED AT LINE 4046
FADD:               1660 DEFINED AT LINE 4012
                    > USED AT LINE 2087
                    > USED AT LINE 3983
                    > USED AT LINE 4272
                    > USED AT LINE 4284
                    > USED AT LINE 5380
                    > USED AT LINE 5408
                    > USED AT LINE 5431
                    > USED AT LINE 5478
FADDT:              1663 DEFINED AT LINE 4017
                    > USED AT LINE 310
                    > USED AT LINE 3999
                    > USED AT LINE 4930
L365B:              1668 DEFINED AT LINE 4020
                    > USED AT LINE 4018
FADD2:              1670 DEFINED AT LINE 4025
                    > USED AT LINE 4427
L367F:              168C DEFINED AT LINE 4041
                    > USED AT LINE 4031
L3683:              1690 DEFINED AT LINE 4044
                    > USED AT LINE 4040
FADD3:              169C DEFINED AT LINE 4051
                    > USED AT LINE 4008
                    > USED AT LINE 4030
L369B:              16A8 DEFINED AT LINE 4058
                    > USED AT LINE 4056
NORMALIZE_FAC1:     16C4 DEFINED AT LINE 4075
                    > USED AT LINE 4699
                    > USED AT LINE 4807
NORMALIZE_FAC2:     16C9 DEFINED AT LINE 4078
                    > USED AT LINE 4076
                    > USED AT LINE 4537
                    > USED AT LINE 5420
L36C7:              16CD DEFINED AT LINE 4082
                    > USED AT LINE 4096
ZERO_FAC:           16E5 DEFINED AT LINE 4101
                    > USED AT LINE 3870
                    > USED AT LINE 4137
                    > USED AT LINE 4412
STA_IN_FAC_SIGN_AND_EXP: 16E7 DEFINED AT LINE 4103
                    > USED AT LINE 5223
STA_IN_FAC_SIGN:    16E9 DEFINED AT LINE 4105
                    > USED AT LINE 4392
FADD4:              16EC DEFINED AT LINE 4111
                    > USED AT LINE 4053
NORMALIZE_FAC3:     1705 DEFINED AT LINE 4127
                    > USED AT LINE 4134
NORMALIZE_FAC4:     170F DEFINED AT LINE 4133
                    > USED AT LINE 4084
NORMALIZE_FAC5:     171C DEFINED AT LINE 4141
                    > USED AT LINE 4123
NORMALIZE_FAC6:     171E DEFINED AT LINE 4143
                    > USED AT LINE 4646
L3764:              172A DEFINED AT LINE 4150
                    > USED AT LINE 4142
COMPLEMENT_FAC:     172B DEFINED AT LINE 4155
                    > USED AT LINE 4077
COMPLEMENT_FAC_MANTISSA: 1731 DEFINED AT LINE 4162
                    > USED AT LINE 4767
INCREMENT_FAC_MANTISSA: 174D DEFINED AT LINE 4180
                    > USED AT LINE 4644
RTS12:              1757 DEFINED AT LINE 4186
                    > USED AT LINE 4176
                    > USED AT LINE 4182
                    > USED AT LINE 4184
OVERFLOW:           1758 DEFINED AT LINE 4188
                    > USED AT LINE 4145
                    > USED AT LINE 4414
                    > USED AT LINE 4941
SHIFT_RIGHT1:       175D DEFINED AT LINE 4198
                    > USED AT LINE 4318
SHIFT_RIGHT2:       175F DEFINED AT LINE 4200
                    > USED AT LINE 4214
                    > USED AT LINE 4215
SHIFT_RIGHT:        176F DEFINED AT LINE 4212
                    > USED AT LINE 4007
                    > USED AT LINE 4773
LB588:              177C DEFINED AT LINE 4220
                    > USED AT LINE 4235
LB58E:              1782 DEFINED AT LINE 4224
                    > USED AT LINE 4222
SHIFT_RIGHT4:       1786 DEFINED AT LINE 4230
                    > USED AT LINE 4050
                    > USED AT LINE 4784
SHIFT_RIGHT5:       178E DEFINED AT LINE 4236
                    > USED AT LINE 4219
CON_ONE:            1790 DEFINED AT LINE 4240
POLY_LOG:           1794 DEFINED AT LINE 4242
CON_SQR_HALF:       17A1 DEFINED AT LINE 4247
CON_SQR_TWO:        17A5 DEFINED AT LINE 4249
CON_NEG_HALF:       17A9 DEFINED AT LINE 4251
CON_LOG_TWO:        17AD DEFINED AT LINE 4253
LOG:                17B1 DEFINED AT LINE 4258
                    > USED AT LINE 291
                    > USED AT LINE 5241
GIQ:                17B8 DEFINED AT LINE 4262
                    > USED AT LINE 4260
LOG2:               17BB DEFINED AT LINE 4264
                    > USED AT LINE 4261
FMULT:              17EF DEFINED AT LINE 4292
                    > USED AT LINE 5018
                    > USED AT LINE 5244
                    > USED AT LINE 5280
                    > USED AT LINE 5339
                    > USED AT LINE 5343
                    > USED AT LINE 5370
                    > USED AT LINE 5405
FMULTT:             17F2 DEFINED AT LINE 4297
                    > USED AT LINE 314
MULTIPLY1:          1816 DEFINED AT LINE 4316
                    > USED AT LINE 4305
                    > USED AT LINE 4307
                    > USED AT LINE 4309
MULTIPLY2:          181B DEFINED AT LINE 4319
                    > USED AT LINE 4311
                    > USED AT LINE 4317
L38A7:              181E DEFINED AT LINE 4322
                    > USED AT LINE 4343
L38C3:              1834 DEFINED AT LINE 4335
                    > USED AT LINE 4324
L3903:              1840 DEFINED AT LINE 4344
                    > USED AT LINE 4298
LOAD_ARG_FROM_YA:   1841 DEFINED AT LINE 4349
                    > USED AT LINE 3988
                    > USED AT LINE 4013
                    > USED AT LINE 4293
                    > USED AT LINE 4454
ADD_EXPONENTS:      1867 DEFINED AT LINE 4377
                    > USED AT LINE 4299
                    > USED AT LINE 4465
ADD_EXPONENTS1:     1869 DEFINED AT LINE 4379
                    > USED AT LINE 5320
L393C:              1874 DEFINED AT LINE 4387
                    > USED AT LINE 4383
L3947:              187F DEFINED AT LINE 4393
                    > USED AT LINE 4391
OUTOFRNG:           1884 DEFINED AT LINE 4402
                    > USED AT LINE 5292
ZERO:               188A DEFINED AT LINE 4409
                    > USED AT LINE 4380
                    > USED AT LINE 4388
JOV:                188F DEFINED AT LINE 4413
                    > USED AT LINE 4384
                    > USED AT LINE 4405
                    > USED AT LINE 4424
                    > USED AT LINE 4429
                    > USED AT LINE 4467
MUL10:              1892 DEFINED AT LINE 4418
                    > USED AT LINE 4894
                    > USED AT LINE 4912
                    > USED AT LINE 5038
L3970:              18A8 DEFINED AT LINE 4430
                    > USED AT LINE 4421
CONTEN:             18A9 DEFINED AT LINE 4433
DIV10:              18AD DEFINED AT LINE 4438
                    > USED AT LINE 4889
                    > USED AT LINE 5042
DIV:                18B6 DEFINED AT LINE 4446
                    > USED AT LINE 5440
FDIV:               18BE DEFINED AT LINE 4453
                    > USED AT LINE 4275
                    > USED AT LINE 5508
                    > USED AT LINE 5539
FDIVT:              18C1 DEFINED AT LINE 4458
                    > USED AT LINE 316
                    > USED AT LINE 4449
L39A1:              18D8 DEFINED AT LINE 4470
                    > USED AT LINE 4496
L39B7:              18E8 DEFINED AT LINE 4479
                    > USED AT LINE 4473
                    > USED AT LINE 4476
                    > USED AT LINE 4495
                    > USED AT LINE 4497
L39C4:              18F5 DEFINED AT LINE 4488
                    > USED AT LINE 4482
                    > USED AT LINE 4513
L39C7:              18F8 DEFINED AT LINE 4491
                    > USED AT LINE 4510
L39D5:              1904 DEFINED AT LINE 4498
                    > USED AT LINE 4490
L39F2:              191B DEFINED AT LINE 4511
                    > USED AT LINE 4485
L39F6:              191F DEFINED AT LINE 4514
                    > USED AT LINE 4486
L3A02:              192B DEFINED AT LINE 4524
                    > USED AT LINE 4459
COPY_RESULT_INTO_FAC: 1930 DEFINED AT LINE 4530
                    > USED AT LINE 4312
                    > USED AT LINE 4523
LOAD_FAC_FROM_YA:   193F DEFINED AT LINE 4541
                    > USED AT LINE 1205
                    > USED AT LINE 2081
                    > USED AT LINE 2441
                    > USED AT LINE 4448
                    > USED AT LINE 5213
                    > USED AT LINE 5400
                    > USED AT LINE 5501
STORE_FAC_IN_TEMP2_ROUNDED: 195F DEFINED AT LINE 4563
                    > USED AT LINE 5358
STORE_FAC_IN_TEMP1_ROUNDED: 1962 DEFINED AT LINE 4569
                    > USED AT LINE 5337
                    > USED AT LINE 5492
SETFOR:             1968 DEFINED AT LINE 4576
                    > USED AT LINE 1632
                    > USED AT LINE 1978
                    > USED AT LINE 2088
STORE_FAC_AT_YX_ROUNDED: 196C DEFINED AT LINE 4582
                    > USED AT LINE 3197
                    > USED AT LINE 4572
                    > USED AT LINE 5227
                    > USED AT LINE 5424
COPY_ARG_TO_FAC:    198F DEFINED AT LINE 4605
                    > USED AT LINE 2494
                    > USED AT LINE 4019
MFA:                1991 DEFINED AT LINE 4607
                    > USED AT LINE 5238
L3A7A:              1995 DEFINED AT LINE 4610
                    > USED AT LINE 4614
COPY_FAC_TO_ARG_ROUNDED: 199F DEFINED AT LINE 4620
                    > USED AT LINE 4419
                    > USED AT LINE 4439
                    > USED AT LINE 4923
                    > USED AT LINE 5210
                    > USED AT LINE 5436
                    > USED AT LINE 5441
MAF:                19A2 DEFINED AT LINE 4622
                    > USED AT LINE 5287
L3A89:              19A4 DEFINED AT LINE 4624
                    > USED AT LINE 4628
RTS14:              19AD DEFINED AT LINE 4630
                    > USED AT LINE 4637
                    > USED AT LINE 4639
                    > USED AT LINE 4645
ROUND_FAC:          19AE DEFINED AT LINE 4635
                    > USED AT LINE 2278
                    > USED AT LINE 4460
                    > USED AT LINE 4583
                    > USED AT LINE 4621
INCREMENT_MANTISSA: 19B6 DEFINED AT LINE 4643
                    > USED AT LINE 5284
SIGN:               19BE DEFINED AT LINE 4654
                    > USED AT LINE 1212
                    > USED AT LINE 4259
                    > USED AT LINE 4670
                    > USED AT LINE 4722
                    > USED AT LINE 5395
L3AA7:              19C2 DEFINED AT LINE 4657
                    > USED AT LINE 4725
SIGN2:              19C4 DEFINED AT LINE 4659
                    > USED AT LINE 4747
RTS15:              19CB DEFINED AT LINE 4664
                    > USED AT LINE 4656
                    > USED AT LINE 4662
SGN:                19CC DEFINED AT LINE 4669
                    > USED AT LINE 283
FLOAT:              19CF DEFINED AT LINE 4674
                    > USED AT LINE 2573
                    > USED AT LINE 4925
FLOAT1:             19D7 DEFINED AT LINE 4683
                    > USED AT LINE 3120
FLOAT2:             19DC DEFINED AT LINE 4693
                    > USED AT LINE 4981
ABS:                19E9 DEFINED AT LINE 4703
                    > USED AT LINE 285
FCOMP:              19EC DEFINED AT LINE 4710
                    > USED AT LINE 2518
                    > USED AT LINE 2800
                    > USED AT LINE 5028
                    > USED AT LINE 5034
                    > USED AT LINE 5233
FCOMP2:             19EE DEFINED AT LINE 4716
                    > USED AT LINE 2090
L3B0A:              1A1C DEFINED AT LINE 4742
                    > USED AT LINE 4727
                    > USED AT LINE 4731
                    > USED AT LINE 4735
L3B10:              1A22 DEFINED AT LINE 4746
                    > USED AT LINE 4744
QINT:               1A25 DEFINED AT LINE 4757
                    > USED AT LINE 2804
                    > USED AT LINE 3931
                    > USED AT LINE 4797
                    > USED AT LINE 5048
L3B27:              1A39 DEFINED AT LINE 4769
                    > USED AT LINE 4763
L3B32:              1A44 DEFINED AT LINE 4775
                    > USED AT LINE 4741
QINT2:              1A45 DEFINED AT LINE 4777
                    > USED AT LINE 4772
INT:                1A56 DEFINED AT LINE 4793
                    > USED AT LINE 284
                    > USED AT LINE 5230
                    > USED AT LINE 5294
                    > USED AT LINE 5442
QINT3:              1A73 DEFINED AT LINE 4808
                    > USED AT LINE 4759
RTS17:              1A7A DEFINED AT LINE 4813
                    > USED AT LINE 4796
FIN:                1A7B DEFINED AT LINE 4822
                    > USED AT LINE 1977
                    > USED AT LINE 2339
                    > USED AT LINE 3893
L3B6F:              1A7F DEFINED AT LINE 4825
                    > USED AT LINE 4828
L3B7E:              1A8E DEFINED AT LINE 4834
                    > USED AT LINE 4831
FIN1:               1A92 DEFINED AT LINE 4837
                    > USED AT LINE 4833
                    > USED AT LINE 4876
                    > USED AT LINE 4917
FIN2:               1A95 DEFINED AT LINE 4839
                    > USED AT LINE 4829
FIN3:               1A97 DEFINED AT LINE 4841
                    > USED AT LINE 4836
L3BA6:              1AB6 DEFINED AT LINE 4857
                    > USED AT LINE 4849
                    > USED AT LINE 4851
FIN4:               1AB8 DEFINED AT LINE 4859
                    > USED AT LINE 4853
                    > USED AT LINE 4855
                    > USED AT LINE 4955
FIN5:               1ABB DEFINED AT LINE 4861
                    > USED AT LINE 4847
FIN6:               1ABD DEFINED AT LINE 4863
                    > USED AT LINE 4856
FIN10:              1AC9 DEFINED AT LINE 4873
                    > USED AT LINE 4843
FIN7:               1ACF DEFINED AT LINE 4880
                    > USED AT LINE 4845
                    > USED AT LINE 4865
FIN8:               1AD1 DEFINED AT LINE 4882
                    > USED AT LINE 4869
L3BDE:              1ADA DEFINED AT LINE 4888
                    > USED AT LINE 4891
L3BE7:              1AE3 DEFINED AT LINE 4893
                    > USED AT LINE 4887
                    > USED AT LINE 4896
L3BEE:              1AEA DEFINED AT LINE 4897
                    > USED AT LINE 4886
                    > USED AT LINE 4892
L3BF3:              1AEF DEFINED AT LINE 4901
                    > USED AT LINE 4899
FIN9:               1AF2 DEFINED AT LINE 4906
                    > USED AT LINE 4840
L3BFD:              1AF9 DEFINED AT LINE 4911
                    > USED AT LINE 4909
ADDACC:             1B06 DEFINED AT LINE 4921
                    > USED AT LINE 4286
                    > USED AT LINE 4916
GETEXP:             1B19 DEFINED AT LINE 4934
                    > USED AT LINE 4862
L3C2C:              1B28 DEFINED AT LINE 4942
                    > USED AT LINE 4937
L3C3A:              1B36 DEFINED AT LINE 4953
                    > USED AT LINE 4940
CON_99999999_9:     1B3B DEFINED AT LINE 4958
CON_999999999:      1B3F DEFINED AT LINE 4960
CON_BILLION:        1B43 DEFINED AT LINE 4962
INPRT:              1B47 DEFINED AT LINE 4967
                    > USED AT LINE 629
LINPRT:             1B52 DEFINED AT LINE 4976
                    > USED AT LINE 1096
                    > USED AT LINE 5740
GOSTROUT2:          1B5F DEFINED AT LINE 4983
                    > USED AT LINE 4970
FOUT:               1B62 DEFINED AT LINE 4989
                    > USED AT LINE 1705
                    > USED AT LINE 4982
FOUT1:              1B64 DEFINED AT LINE 4996
                    > USED AT LINE 3244
L3C73:              1B6C DEFINED AT LINE 5001
                    > USED AT LINE 4999
L3C84:              1B7D DEFINED AT LINE 5010
                    > USED AT LINE 5008
L3C8C:              1B85 DEFINED AT LINE 5015
                    > USED AT LINE 5013
L3C95:              1B8E DEFINED AT LINE 5020
                    > USED AT LINE 5014
L3C97:              1B90 DEFINED AT LINE 5025
                    > USED AT LINE 5044
L3CA2:              1B9B DEFINED AT LINE 5031
                    > USED AT LINE 5040
L3CAD:              1BA6 DEFINED AT LINE 5037
                    > USED AT LINE 5035
L3CB4:              1BAD DEFINED AT LINE 5041
                    > USED AT LINE 5030
L3CBB:              1BB4 DEFINED AT LINE 5045
                    > USED AT LINE 5036
L3CBE:              1BB7 DEFINED AT LINE 5047
                    > USED AT LINE 5029
L3CD3:              1BCC DEFINED AT LINE 5066
                    > USED AT LINE 5060
L3CD4:              1BCD DEFINED AT LINE 5068
                    > USED AT LINE 5062
L3CDF:              1BD8 DEFINED AT LINE 5075
                    > USED AT LINE 5073
L3CF0:              1BE9 DEFINED AT LINE 5085
                    > USED AT LINE 5081
L3CF2:              1BEB DEFINED AT LINE 5090
                    > USED AT LINE 5074
L3CF6:              1BEF DEFINED AT LINE 5093
                    > USED AT LINE 5106
                    > USED AT LINE 5109
                    > USED AT LINE 5139
L3D1A:              1C0C DEFINED AT LINE 5108
                    > USED AT LINE 5105
L3D1C:              1C0E DEFINED AT LINE 5110
                    > USED AT LINE 5107
L3D23:              1C15 DEFINED AT LINE 5115
                    > USED AT LINE 5112
L3D3E:              1C2F DEFINED AT LINE 5131
                    > USED AT LINE 5127
L3D4E:              1C3F DEFINED AT LINE 5146
                    > USED AT LINE 5150
L3D5B:              1C4C DEFINED AT LINE 5154
                    > USED AT LINE 5152
L3D6B:              1C5C DEFINED AT LINE 5164
                    > USED AT LINE 5158
L3D77:              1C68 DEFINED AT LINE 5171
                    > USED AT LINE 5174
FOUT4:              1C7D DEFINED AT LINE 5182
                    > USED AT LINE 5009
L3D8F:              1C80 DEFINED AT LINE 5184
                    > USED AT LINE 5157
L3D94:              1C85 DEFINED AT LINE 5187
                    > USED AT LINE 5181
CON_HALF:           1C8A DEFINED AT LINE 5192
DECTBL:             1C8E DEFINED AT LINE 5198
                    > USED AT LINE 5096
                    > USED AT LINE 5099
                    > USED AT LINE 5102
DECTBL_END:         1CA0 DEFINED AT LINE 5205
SQR:                1CA0 DEFINED AT LINE 5209
                    > USED AT LINE 289
FPWRT:              1CAA DEFINED AT LINE 5219
                    > USED AT LINE 318
L3DD5:              1CB3 DEFINED AT LINE 5224
                    > USED AT LINE 5222
L3DEF:              1CCD DEFINED AT LINE 5237
                    > USED AT LINE 5229
                    > USED AT LINE 5234
NEGOP:              1CE3 DEFINED AT LINE 5252
                    > USED AT LINE 324
                    > USED AT LINE 4902
                    > USED AT LINE 5313
                    > USED AT LINE 5470
                    > USED AT LINE 5481
                    > USED AT LINE 5531
                    > USED AT LINE 5557
L3E0F:              1CED DEFINED AT LINE 5258
                    > USED AT LINE 5248
                    > USED AT LINE 5254
CON_LOG_E:          1CEE DEFINED AT LINE 5261
POLY_EXP:           1CF2 DEFINED AT LINE 5263
EXP:                1D0F DEFINED AT LINE 5277
                    > USED AT LINE 292
                    > USED AT LINE 5220
                    > USED AT LINE 5245
L3E4E:              1D1F DEFINED AT LINE 5285
                    > USED AT LINE 5283
L3E59:              1D2A DEFINED AT LINE 5291
                    > USED AT LINE 5298
L3E5C:              1D2D DEFINED AT LINE 5293
                    > USED AT LINE 5290
L3E6C:              1D3D DEFINED AT LINE 5303
                    > USED AT LINE 5309
POLYNOMIAL_ODD:     1D62 DEFINED AT LINE 5334
                    > USED AT LINE 4281
                    > USED AT LINE 5485
                    > USED AT LINE 5547
POLYNOMIAL:         1D78 DEFINED AT LINE 5354
                    > USED AT LINE 5316
SERMAIN:            1D7C DEFINED AT LINE 5357
                    > USED AT LINE 5340
L3EBA:              1D8B DEFINED AT LINE 5366
                    > USED AT LINE 5364
L3EBE:              1D8F DEFINED AT LINE 5369
                    > USED AT LINE 5384
L3ECB:              1D9C DEFINED AT LINE 5377
                    > USED AT LINE 5375
RTS19:              1DAB DEFINED AT LINE 5385
                    > USED AT LINE 5402
CONRND1:            1DAC DEFINED AT LINE 5390
CONRND2:            1DB0 DEFINED AT LINE 5392
RND:                1DB4 DEFINED AT LINE 5394
                    > USED AT LINE 290
L3F01:              1DD2 DEFINED AT LINE 5409
                    > USED AT LINE 5397
GOMOVMF:            1DED DEFINED AT LINE 5423
                    > USED AT LINE 5498
COS:                1DF0 DEFINED AT LINE 5428
                    > USED AT LINE 293
SIN:                1DF7 DEFINED AT LINE 5435
                    > USED AT LINE 294
                    > USED AT LINE 5495
SIN1:               1E29 DEFINED AT LINE 5469
                    > USED AT LINE 5458
                    > USED AT LINE 5511
L3F5B:              1E2C DEFINED AT LINE 5475
                    > USED AT LINE 5461
L3F68:              1E39 DEFINED AT LINE 5482
                    > USED AT LINE 5480
TAN:                1E40 DEFINED AT LINE 5491
                    > USED AT LINE 295
TAN1:               1E68 DEFINED AT LINE 5509
                    > USED AT LINE 5505
CON_PI_HALF:        1E6C DEFINED AT LINE 5513
CON_PI_DOUB:        1E70 DEFINED AT LINE 5515
QUARTER:            1E74 DEFINED AT LINE 5517
POLY_SIN:           1E78 DEFINED AT LINE 5519
ATN:                1E8D DEFINED AT LINE 5527
                    > USED AT LINE 296
L3FDB:              1E95 DEFINED AT LINE 5532
                    > USED AT LINE 5530
L3FE9:              1EA3 DEFINED AT LINE 5544
                    > USED AT LINE 5536
L3FFC:              1EB6 DEFINED AT LINE 5554
                    > USED AT LINE 5550
L4002:              1EBC DEFINED AT LINE 5558
                    > USED AT LINE 5556
POLY_ATN:           1EBD DEFINED AT LINE 5561
GENERIC_CHRGET:     1EE2 DEFINED AT LINE 5572
                    > USED AT LINE 228
                    > USED AT LINE 229
                    > USED AT LINE 230
                    > USED AT LINE 231
                    > USED AT LINE 5583
                    > USED AT LINE 5632
GENERIC_CHRGOT:     1EE8 DEFINED AT LINE 5576
                    > USED AT LINE 229
                    > USED AT LINE 5574
                    > USED AT LINE 5577
GENERIC_TXTPTR:     1EE9 DEFINED AT LINE 5577
                    > USED AT LINE 228
GENERIC_CHRGOT2:    1EEF DEFINED AT LINE 5581
                    > USED AT LINE 230
L4058:              1EF9 DEFINED AT LINE 5588
                    > USED AT LINE 5580
GENERIC_RNDSEED:    1EFA DEFINED AT LINE 5590
                    > USED AT LINE 231
GENERIC_CHRGET_END: 1EFE DEFINED AT LINE 5593
PR_WRITTEN_BY:      1EFE DEFINED AT LINE 5595
                    > USED AT LINE 5658
COLD_START:         1F05 DEFINED AT LINE 5599
                    > USED AT LINE 5833
L4098:              1F42 DEFINED AT LINE 5631
                    > USED AT LINE 5635
L40D7:              1F87 DEFINED AT LINE 5666
                    > USED AT LINE 5678
L40DD:              1F8D DEFINED AT LINE 5670
                    > USED AT LINE 5668
L40EE:              1F9E DEFINED AT LINE 5680
                    > USED AT LINE 5660
L40FA:              1FAA DEFINED AT LINE 5686
                    > USED AT LINE 5674
                    > USED AT LINE 5679
                    > USED AT LINE 5684
L4106:              1FB6 DEFINED AT LINE 5693
                    > USED AT LINE 5705
                    > USED AT LINE 5708
L4129:              1FD9 DEFINED AT LINE 5710
                    > USED AT LINE 5712
L4136:              1FE6 DEFINED AT LINE 5718
                    > USED AT LINE 5702
L4192:              1FF9 DEFINED AT LINE 5729
                    > USED AT LINE 5727
QT_WRITTEN_BY:      2042 DEFINED AT LINE 5758
QT_MEMORY_SIZE:     2066 DEFINED AT LINE 5762
QT_TERMINAL_WIDTH:  2072 DEFINED AT LINE 5765
QT_BYTES_FREE:      2081 DEFINED AT LINE 5768
NIO0:               8000 DEFINED AT LINE 5778
                    > USED AT LINE 5787
NIO1:               9000 DEFINED AT LINE 5779
NIO2:               8800 DEFINED AT LINE 5780
NIO3:               9800 DEFINED AT LINE 5781
NIO4:               8400 DEFINED AT LINE 5782
NIO5:               9400 DEFINED AT LINE 5783
NIO6:               8C00 DEFINED AT LINE 5784
NIO7:               9C00 DEFINED AT LINE 5785
ACIA_BASE:          8000 DEFINED AT LINE 5787
                    > USED AT LINE 5789
                    > USED AT LINE 5790
                    > USED AT LINE 5791
                    > USED AT LINE 5792
SDR:                8000 DEFINED AT LINE 5789
                    > USED AT LINE 5846
                    > USED AT LINE 5854
SSR:                8001 DEFINED AT LINE 5790
                    > USED AT LINE 5841
                    > USED AT LINE 5850
SCMD:               8002 DEFINED AT LINE 5791
                    > USED AT LINE 5810
SCTL:               8003 DEFINED AT LINE 5792
                    > USED AT LINE 5808
SCTL_V:             001F DEFINED AT LINE 5794
SCMD_V:             000B DEFINED AT LINE 5795
TX_RDY:             0010 DEFINED AT LINE 5796
RX_RDY:             0008 DEFINED AT LINE 5797
RESET:              FF00 DEFINED AT LINE 5801
                    > USED AT LINE 5831
                    > USED AT LINE 5883
                    > USED AT LINE 5884
                    > USED AT LINE 5885
SHOWSTARTMSG:       FF0F DEFINED AT LINE 5814
                    > USED AT LINE 5819
WAITFORKEYPRESS:    FF1A DEFINED AT LINE 5822
                    > USED AT LINE 5816
                    > USED AT LINE 5824
WARMSTART:          FF2C DEFINED AT LINE 5835
                    > USED AT LINE 5828
MONCOUT:            FF2F DEFINED AT LINE 5838
                    > USED AT LINE 1827
                    > USED AT LINE 5817
SERIALOUTWAIT:      FF30 DEFINED AT LINE 5840
                    > USED AT LINE 5844
MONRDKEY:           FF3E DEFINED AT LINE 5849
                    > USED AT LINE 809
                    > USED AT LINE 5823
                    > USED AT LINE 5862
NODATAIN:           FF4C DEFINED AT LINE 5857
                    > USED AT LINE 5853
MONISCNTC:          FF4E DEFINED AT LINE 5861
                    > USED AT LINE 1303
NOTCTRLC:           FF59 DEFINED AT LINE 5868
                    > USED AT LINE 5863
                    > USED AT LINE 5865
STARTUPMESSAGE:     FF5B DEFINED AT LINE 5872
                    > USED AT LINE 5815
LOAD:               FF7A DEFINED AT LINE 5875
                    > USED AT LINE 258
SAVE:               FF7B DEFINED AT LINE 5878
                    > USED AT LINE 259
